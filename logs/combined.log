{"level":"info","message":"Server is running on http://localhost:3000","timestamp":"2024-11-05 15:36:07"}
{"level":"info","message":"Redirecting to Spotify authorization URL","timestamp":"2024-11-05 15:36:49"}
{"level":"info","message":"Redirecting to Spotify authorization URL","timestamp":"2024-11-05 15:37:11"}
{"level":"info","message":"Redirecting to Spotify authorization URL","timestamp":"2024-11-05 15:41:15"}
{"level":"info","message":"Server is running on http://localhost:3000","timestamp":"2024-11-05 15:44:36"}
{"level":"info","message":"Server is running on http://localhost:3000","timestamp":"2024-11-05 15:44:42"}
{"level":"info","message":"Server is running on http://localhost:3000","timestamp":"2024-11-05 15:44:47"}
{"level":"info","message":"Redirecting to Spotify authorization URL","timestamp":"2024-11-05 15:45:06"}
{"level":"info","message":"Server is running on http://localhost:3000","timestamp":"2024-11-05 15:57:27"}
{"level":"info","message":"Server is running on http://localhost:3000","timestamp":"2024-11-05 15:57:43"}
{"level":"info","message":"Server is running on http://localhost:3000","timestamp":"2024-11-05 15:57:46"}
{"level":"info","message":"Server is running on http://localhost:3000","timestamp":"2024-11-05 15:57:48"}
{"level":"info","message":"Redirecting to Spotify authorization URL","timestamp":"2024-11-05 15:58:01"}
{"level":"info","message":"Redirecting to Spotify authorization URL","timestamp":"2024-11-05 15:59:09"}
{"level":"info","message":"Server is running on http://localhost:3000","timestamp":"2024-11-05 16:02:49"}
{"level":"info","message":"Server is running on http://localhost:3000","timestamp":"2024-11-05 16:02:58"}
{"level":"info","message":"Server is running on https://localhost:3000","timestamp":"2024-11-05 16:03:35"}
{"level":"info","message":"Server is running on https://localhost:3000","timestamp":"2024-11-05 16:03:44"}
{"level":"info","message":"Server is running on https://localhost:3000","timestamp":"2024-11-05 16:03:56"}
{"level":"info","message":"Server is running on https://localhost:3000","timestamp":"2024-11-05 16:06:57"}
{"level":"info","message":"Server is running on https://localhost:3000","timestamp":"2024-11-05 16:12:55"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:13:26"}
{"level":"info","message":"Redirecting to Spotify authorization URL","timestamp":"2024-11-05 16:13:38"}
{"level":"info","message":"Redirecting to Spotify authorization URL","timestamp":"2024-11-05 16:15:53"}
{"level":"info","message":"Redirecting to Spotify authorization URL","timestamp":"2024-11-05 16:16:54"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:17:38"}
{"level":"info","message":"Redirecting to Spotify authorization URL","timestamp":"2024-11-05 16:18:14"}
{"level":"error","message":"Error in Spotify callback: Error: Invalid code or code verifier\n    at callback (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:30:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Invalid code or code verifier'\n}","timestamp":"2024-11-05 16:21:11"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:21:26"}
{"level":"info","message":"Redirecting to Spotify authorization URL","timestamp":"2024-11-05 16:21:35"}
{"level":"error","message":"Error in Spotify callback: Error: Invalid code or code verifier\n    at callback (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:30:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Invalid code or code verifier'\n}","timestamp":"2024-11-05 16:21:37"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:22:37"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:22:43"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:22:47"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:23:08"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:23:22"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:25:01"}
{"level":"info","message":"Stored codeVerifier in session: paUXfEPdN2UG6~zAMgb1WdKNWOJhskVOHHB.VNvE65CEl.fPsVR0F4QkK-8CY4GC","timestamp":"2024-11-05 16:25:41"}
{"level":"info","message":"Redirecting to Spotify authorization URL","timestamp":"2024-11-05 16:25:41"}
{"level":"info","message":"Retrieved codeVerifier from session: undefined","timestamp":"2024-11-05 16:25:43"}
{"level":"error","message":"Error in Spotify callback: Error: Invalid code or code verifier\n    at callback (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:33:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Invalid code or code verifier'\n}","timestamp":"2024-11-05 16:25:43"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:31:23"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:31:31"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:31:34"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:31:36"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:31:39"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:31:42"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:44:09"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:44:11"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:44:31"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:44:36"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:44:41"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:44:44"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:44:47"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:44:51"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:44:53"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:44:58"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:45:00"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:47:22"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:47:24"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:47:27"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:47:29"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:47:52"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:48:10"}
{"level":"info","message":"Stored codeVerifier in session: vbrsiVbWIEDq_SN4mGkpeYwP5PYLwGcljMLAziwZX9Rj75V8s6Oo3Rnv0CMP84gy","timestamp":"2024-11-05 16:48:31"}
{"level":"info","message":"Redirecting to Spotify authorization URL","timestamp":"2024-11-05 16:48:31"}
{"level":"info","message":"Session ID in authorize: ANVP4a7TB624O_xyRYbU_RETfykCtfx6","timestamp":"2024-11-05 16:48:31"}
{"level":"info","message":"Retrieved codeVerifier from session: undefined","timestamp":"2024-11-05 16:48:33"}
{"level":"error","message":"Error in Spotify callback: Error: Invalid code or code verifier\n    at callback (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:34:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Invalid code or code verifier'\n}","timestamp":"2024-11-05 16:48:33"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:49:26"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:51:07"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:51:11"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:51:13"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:51:18"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:51:22"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:52:35"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:52:45"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:52:52"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:52:55"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:52:58"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:53:28"}
{"level":"info","message":"Stored codeVerifier in session: heI.ZzYEN~eUVMi-NPzn9i4fak2wMEz1RrK0eJ5KPQt~VWskXgbUji2Cp4NhkzRs","timestamp":"2024-11-05 16:53:41"}
{"level":"info","message":"Redirecting to Spotify authorization URL","timestamp":"2024-11-05 16:53:41"}
{"level":"info","message":"Retrieved codeVerifier from session: undefined","timestamp":"2024-11-05 16:53:45"}
{"level":"error","message":"Error in Spotify callback: Error: Invalid code or code verifier\n    at callback (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:38:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Invalid code or code verifier'\n}","timestamp":"2024-11-05 16:53:45"}
{"level":"error","message":"Error occurred: Error: Invalid code or code verifier\n    at callback (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:38:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Invalid code or code verifier'\n}","timestamp":"2024-11-05 16:53:45"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:54:40"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:54:43"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:54:45"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:55:00"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:55:03"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:55:44"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:55:50"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:55:59"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:56:11"}
{"level":"info","message":"Stored codeVerifier in session: 5-rxCb.kiIUZj4WRT5xs0nNsQ0yTUvWyQQ4EJxOSeTOZWt3s~I0.feQauJxP2aW3","timestamp":"2024-11-05 16:56:40"}
{"level":"info","message":"[object Object]","timestamp":"2024-11-05 16:56:40"}
{"level":"info","message":"Redirecting to Spotify authorization URL","timestamp":"2024-11-05 16:56:40"}
{"level":"info","message":"Retrieved codeVerifier from session: undefined","timestamp":"2024-11-05 16:56:46"}
{"level":"error","message":"Error in Spotify callback: Error: Invalid code or code verifier\n    at callback (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:39:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Invalid code or code verifier'\n}","timestamp":"2024-11-05 16:56:46"}
{"level":"error","message":"Error occurred: Error: Invalid code or code verifier\n    at callback (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:39:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Invalid code or code verifier'\n}","timestamp":"2024-11-05 16:56:46"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:58:22"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:58:24"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:58:29"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:58:50"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:59:00"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:59:03"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 16:59:09"}
{"level":"info","message":"Stored codeVerifier in session: KG46n4brKrGvcgrDsmGPU6Y5ATvnAhivKnoUqjEUIqL79fzYUISCyLw1.rM4kVsA","timestamp":"2024-11-05 16:59:40"}
{"level":"info","message":"[object Object]","timestamp":"2024-11-05 16:59:40"}
{"level":"info","message":"Redirecting to Spotify authorization URL","timestamp":"2024-11-05 16:59:40"}
{"level":"info","message":"Retrieved codeVerifier from session: undefined","timestamp":"2024-11-05 16:59:47"}
{"level":"error","message":"Error in Spotify callback: Error: Invalid code or code verifier\n    at callback (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:39:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Invalid code or code verifier'\n}","timestamp":"2024-11-05 16:59:47"}
{"level":"error","message":"Error occurred: Error: Invalid code or code verifier\n    at callback (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:39:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Invalid code or code verifier'\n}","timestamp":"2024-11-05 16:59:47"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:00:44"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:01:09"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:01:10"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:01:12"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:01:15"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:01:19"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:01:23"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:02:03"}
{"level":"info","message":"Stored codeVerifier in session: 6Gn9OFLD4hk2ljpQkeS-QErBGfAQud~6q1fuGWwvK-VJ2qrYkzrcCA8Zl2VGW.3k","timestamp":"2024-11-05 17:02:18"}
{"level":"info","message":"6Gn9OFLD4hk2ljpQkeS-QErBGfAQud~6q1fuGWwvK-VJ2qrYkzrcCA8Zl2VGW.3k","timestamp":"2024-11-05 17:02:18"}
{"level":"info","message":"Redirecting to Spotify authorization URL","timestamp":"2024-11-05 17:02:18"}
{"level":"info","message":"undefined","timestamp":"2024-11-05 17:02:20"}
{"level":"info","message":"Retrieved codeVerifier from session: undefined","timestamp":"2024-11-05 17:02:20"}
{"level":"error","message":"Error in Spotify callback: Error: Invalid code or code verifier\n    at callback (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:40:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Invalid code or code verifier'\n}","timestamp":"2024-11-05 17:02:20"}
{"level":"error","message":"Error occurred: Error: Invalid code or code verifier\n    at callback (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:40:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Invalid code or code verifier'\n}","timestamp":"2024-11-05 17:02:20"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:04:29"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:04:59"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:05:03"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:05:06"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:05:10"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:05:26"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:05:27"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:05:57"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:06:07"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:06:13"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:06:17"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:06:22"}
{"level":"info","message":"Session codeVerifier: undefined","timestamp":"2024-11-05 17:06:46"}
{"level":"info","message":"Temporary codeVerifier: 4BUPHDpKnFZibKC2_5Rspoz5QkZKqEYxqEpKS2YVZ0ZFv5UV5oM9xXC2ReA3afkg","timestamp":"2024-11-05 17:06:46"}
{"level":"debug","message":"Requesting Spotify tokens with PKCE","timestamp":"2024-11-05 17:06:46"}
{"level":"info","message":"Successfully retrieved Spotify tokens","timestamp":"2024-11-05 17:06:47"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:12:51"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:13:19"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:13:30"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:13:38"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:13:59"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:14:04"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:14:07"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:14:11"}
{"level":"info","message":"Session codeVerifier: undefined","timestamp":"2024-11-05 17:14:55"}
{"level":"info","message":"Temporary codeVerifier: Wb9V4zoC2ZrSLKkBP12McqBaOddh2zE6_Y1jvh2xruLe0QeUMY1Wr3Q2HL8O1PWt","timestamp":"2024-11-05 17:14:55"}
{"level":"debug","message":"Requesting Spotify tokens with PKCE","timestamp":"2024-11-05 17:14:55"}
{"level":"info","message":"Successfully retrieved Spotify tokens","timestamp":"2024-11-05 17:14:55"}
{"level":"error","message":"Error fetching playlists with items: Error: Access token is missing.\n    at getUserPlaylistsWithItems (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:66:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 17:15:24"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylistsWithItems (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:66:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 17:15:24"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:16:31"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:16:45"}
{"level":"error","message":"Error fetching playlists with items: Error: Access token is missing.\n    at getUserPlaylistsWithItems (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:74:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 17:17:11"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylistsWithItems (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:74:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 17:17:11"}
{"level":"info","message":"Session codeVerifier: undefined","timestamp":"2024-11-05 17:17:16"}
{"level":"info","message":"Temporary codeVerifier: po_JoJHeUlfOyx0sSpDeIdeBTEQpmE2J49LRaNe0WbrH4kVPJSgMJ~FTiqe.VMyN","timestamp":"2024-11-05 17:17:16"}
{"level":"debug","message":"Requesting Spotify tokens with PKCE","timestamp":"2024-11-05 17:17:16"}
{"level":"info","message":"Successfully retrieved Spotify tokens","timestamp":"2024-11-05 17:17:16"}
{"level":"info","message":"Successfully retrieved and stored Spotify tokens","timestamp":"2024-11-05 17:17:16"}
{"level":"error","message":"Error fetching playlists with items: Error: Access token is missing.\n    at getUserPlaylistsWithItems (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:74:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 17:17:26"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylistsWithItems (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:74:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 17:17:26"}
{"level":"info","message":"Session codeVerifier: undefined","timestamp":"2024-11-05 17:17:46"}
{"level":"info","message":"Temporary codeVerifier: po_JoJHeUlfOyx0sSpDeIdeBTEQpmE2J49LRaNe0WbrH4kVPJSgMJ~FTiqe.VMyN","timestamp":"2024-11-05 17:17:46"}
{"level":"debug","message":"Requesting Spotify tokens with PKCE","timestamp":"2024-11-05 17:17:46"}
{"level":"error","message":"Failed to retrieve Spotify tokens: <ref *2> HTTPError: Response code 400 (Bad Request)\n    at Request.<anonymous> (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/as-promise/index.js:92:42)\n    at Object.onceWrapper (node:events:635:26)\n    at Request.emit (node:events:532:35)\n    at Request._onResponseBase (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:609:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Request._onResponse (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:649:13) {\n  [stack]: [Getter/Setter],\n  [message]: 'Response code 400 (Bad Request)',\n  [cause]: {},\n  input: undefined,\n  code: 'ERR_NON_2XX_3XX_RESPONSE',\n  [response]: <ref *3> PassThrough {\n    _events: {\n      close: undefined,\n      error: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 1, [name]: '' }\n      },\n      prefinish: <ref *1> [Function: prefinish] {\n        [length]: 0,\n        [name]: 'prefinish',\n        [prototype]: { [constructor]: [Circular *1] }\n      },\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n      unpipe: undefined,\n      aborted: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 0, [name]: '' }\n      }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 65536,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 9996040,\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 65536,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466504,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kWriteCbValue)]: null,\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n    _maxListeners: undefined,\n    _eventsCount: 4,\n    socket: [Getter/Setter],\n    httpVersionMajor: [Getter/Setter],\n    httpVersionMinor: [Getter/Setter],\n    httpVersion: [Getter/Setter],\n    complete: [Getter/Setter],\n    rawHeaders: [Getter/Setter],\n    rawTrailers: [Getter/Setter],\n    joinDuplicateHeaders: [Getter/Setter],\n    aborted: [Getter/Setter],\n    upgrade: [Getter/Setter],\n    url: [Getter/Setter],\n    method: [Getter/Setter],\n    statusCode: [Getter/Setter],\n    statusMessage: [Getter/Setter],\n    client: [Getter/Setter],\n    _consuming: [Getter/Setter],\n    _dumped: [Getter/Setter],\n    req: [Getter/Setter],\n    timings: [Getter/Setter],\n    headers: [Getter/Setter],\n    setTimeout: [Getter/Setter],\n    trailers: [Getter/Setter],\n    requestUrl: URL {\n      href: 'https://accounts.spotify.com/api/token',\n      origin: 'https://accounts.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'accounts.spotify.com',\n      hostname: 'accounts.spotify.com',\n      port: '',\n      pathname: '/api/token',\n      search: '',\n      searchParams: URLSearchParams {},\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://accounts.spotify.com/api/token',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 28,\n        pathname_start: 28,\n        search_start: 4294967295,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    request: Request {\n      _events: {\n        close: undefined,\n        error: undefined,\n        prefinish: undefined,\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: undefined,\n        pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n        newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n        response: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        retry: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        request: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        redirect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        uploadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        downloadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n        pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 0,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 1574906,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 0,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466746,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      constructor: undefined,\n      _noPipe: true,\n      options: {\n        request: undefined,\n        agent: { http: undefined, https: undefined, http2: undefined },\n        h2session: undefined,\n        decompress: true,\n        timeout: {\n          connect: undefined,\n          lookup: undefined,\n          read: undefined,\n          request: undefined,\n          response: undefined,\n          secureConnect: undefined,\n          send: undefined,\n          socket: undefined\n        },\n        prefixUrl: '',\n        body: 'grant_type=authorization_code&code=AQBqFC0dcFC0Bl9d6eg20RnX82uUP1Ftf6WbuhjE8yqXGVjN_0GUk2C2_wMU6ts1LBcVHcQCNBz07IoD7Yvqa-AB2eL-6hT1tDRPvzk9GV1R0rsnAvLFskBDOjqtaFQDkPGizNeF7iga8J4z0M8GZDKWAD0mL_hU6CU_do2-DLMmfPsnbl5LOtH2jxnzaM1qVdl96sFEWH3KQOVGRuLtNO3TJgYOeBgBStCL5JqjOztQbuowniPOCbg656vxtRXkqGz--Xm_p0h4grjo6PL_41pN0LS55-jER3xFzrfH2-J5h1l7VBmS5L1f34yunMViaC7pvHeEj72QYx2iAR61Bw&redirect_uri=https%3A%2F%2F127.0.0.1%3A3001%2Fspotify%2Fcallback&client_id=3286dfde20f84f31a435b98165238936&code_verifier=po_JoJHeUlfOyx0sSpDeIdeBTEQpmE2J49LRaNe0WbrH4kVPJSgMJ%7EFTiqe.VMyN',\n        form: undefined,\n        json: undefined,\n        cookieJar: undefined,\n        ignoreInvalidCookies: false,\n        searchParams: undefined,\n        dnsLookup: undefined,\n        dnsCache: undefined,\n        context: {},\n        hooks: {\n          init: [ [length]: 0 ],\n          beforeRequest: [ [length]: 0 ],\n          beforeError: [ [length]: 0 ],\n          beforeRedirect: [ [length]: 0 ],\n          beforeRetry: [ [length]: 0 ],\n          afterResponse: [ [length]: 0 ]\n        },\n        followRedirect: true,\n        maxRedirects: 10,\n        cache: undefined,\n        throwHttpErrors: true,\n        username: '',\n        password: '',\n        http2: false,\n        allowGetBody: false,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          'content-type': 'application/x-www-form-urlencoded',\n          'content-length': '566',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        methodRewriting: false,\n        dnsLookupIpVersion: undefined,\n        parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n        stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n        retry: {\n          limit: 2,\n          methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n          statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n          errorCodes: [\n            'ETIMEDOUT',\n            'ECONNRESET',\n            'EADDRINUSE',\n            'ECONNREFUSED',\n            'EPIPE',\n            'ENOTFOUND',\n            'ENETUNREACH',\n            'EAI_AGAIN',\n            [length]: 8\n          ],\n          maxRetryAfter: undefined,\n          calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n          backoffLimit: Infinity,\n          noise: 100\n        },\n        localAddress: undefined,\n        method: 'POST',\n        createConnection: undefined,\n        cacheOptions: {\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined\n        },\n        https: {\n          alpnProtocols: undefined,\n          rejectUnauthorized: undefined,\n          checkServerIdentity: undefined,\n          certificateAuthority: undefined,\n          key: undefined,\n          certificate: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          ciphers: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          signatureAlgorithms: undefined,\n          tlsSessionLifetime: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          certificateRevocationLists: undefined\n        },\n        encoding: undefined,\n        resolveBodyOnly: false,\n        isStream: false,\n        responseType: 'json',\n        url: URL {\n          href: 'https://accounts.spotify.com/api/token',\n          origin: 'https://accounts.spotify.com',\n          protocol: 'https:',\n          username: '',\n          password: '',\n          host: 'accounts.spotify.com',\n          hostname: 'accounts.spotify.com',\n          port: '',\n          pathname: '/api/token',\n          search: '',\n          searchParams: URLSearchParams {},\n          hash: '',\n          [Symbol(context)]: URLContext {\n            href: 'https://accounts.spotify.com/api/token',\n            protocol_end: 6,\n            username_end: 8,\n            host_start: 8,\n            host_end: 28,\n            pathname_start: 28,\n            search_start: 4294967295,\n            hash_start: 4294967295,\n            port: 4294967295,\n            scheme_type: 2,\n            [hasPort]: [Getter],\n            [hasSearch]: [Getter],\n            [hasHash]: [Getter]\n          }\n        },\n        pagination: {\n          transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n          paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n          filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n          shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n          countLimit: Infinity,\n          backoff: 0,\n          requestLimit: 10000,\n          stackAllItems: false\n        },\n        setHost: true,\n        maxHeaderSize: undefined,\n        signal: undefined,\n        enableUnixSockets: false\n      },\n      response: [Circular *3],\n      requestUrl: URL {\n        href: 'https://accounts.spotify.com/api/token',\n        origin: 'https://accounts.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'accounts.spotify.com',\n        hostname: 'accounts.spotify.com',\n        port: '',\n        pathname: '/api/token',\n        search: '',\n        searchParams: URLSearchParams {},\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://accounts.spotify.com/api/token',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 28,\n          pathname_start: 28,\n          search_start: 4294967295,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      retryCount: 0,\n      _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _downloadedSize: 74,\n      _uploadedSize: 566,\n      _stopReading: true,\n      _pipedServerResponses: Set(0) {},\n      _request: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: '566',\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'POST /api/token HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'content-type: application/x-www-form-urlencoded\\r\\n' +\n          'content-length: 566\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: accounts.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'POST',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/api/token',\n        _ended: true,\n        res: IncomingMessage {\n          _events: [Object],\n          _readableState: [ReadableState],\n          _maxListeners: undefined,\n          socket: null,\n          httpVersionMajor: 1,\n          httpVersionMinor: 1,\n          httpVersion: '1.1',\n          complete: true,\n          rawHeaders: [Array],\n          rawTrailers: [Array],\n          joinDuplicateHeaders: undefined,\n          aborted: false,\n          upgrade: false,\n          url: 'https://accounts.spotify.com/api/token',\n          method: null,\n          statusCode: 400,\n          statusMessage: 'Bad Request',\n          client: [TLSSocket],\n          _consuming: false,\n          _dumped: false,\n          req: [Circular *4],\n          _eventsCount: 3,\n          timings: [Object],\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kHeaders)]: [Object],\n          [Symbol(kHeadersCount)]: 30,\n          [Symbol(kTrailers)]: null,\n          [Symbol(kTrailersCount)]: 0,\n          [connection]: [Getter/Setter],\n          [headers]: [Getter/Setter],\n          [headersDistinct]: [Getter/Setter],\n          [trailers]: [Getter/Setter],\n          [trailersDistinct]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableDidRead]: [Getter],\n          [readableAborted]: [Getter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readableEnded]: [Getter]\n        },\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'accounts.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730787466539,\n          socket: 1730787466540,\n          lookup: 1730787466544,\n          connect: 1730787466557,\n          secureConnect: 1730787466663,\n          upload: 1730787466663,\n          response: 1730787466842,\n          end: 1730787466843,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'accounts.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'accounts.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [TimersList],\n            _idleStart: 61240,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 902,\n            [Symbol(triggerId)]: 898,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          'content-type': [Array],\n          'content-length': [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _responseSize: 74,\n      _bodySize: 566,\n      _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n      _isFromCache: false,\n      _cannotHaveBody: false,\n      _triggerRead: true,\n      _cancelTimeouts: [Function: cancelTimeouts] {\n        [length]: 0,\n        [name]: 'cancelTimeouts'\n      },\n      _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _nativeResponse: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'date',\n          'Tue, 05 Nov 2024 06:17:46 GMT',\n          'content-type',\n          'application/json',\n          'x-request-id',\n          '86e94e35-2a9e-4c8a-8353-8d2491df57d3',\n          'set-cookie',\n          '__Host-device_id=AQAAlHCdyJTo9XZ6rUnK-GmpR0AItDcZtN5CghRFqUkRg05kCviA5PImxc5XKkk77f8qFT8oFAAoG1VMzoXSOt6lE4FRD4Pf4Xs;Version=1;Path=/;Max-Age=2147483647;Secure;HttpOnly;SameSite=Lax',\n          'set-cookie',\n          'sp_tr=false;Version=1;Domain=accounts.spotify.com;Path=/;Secure;SameSite=Lax',\n          'sp-trace-id',\n          'be9d13f84376d473',\n          'x-envoy-upstream-service-time',\n          '14',\n          'server',\n          'envoy',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'content-encoding',\n          'gzip',\n          'vary',\n          'Accept-Encoding',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://accounts.spotify.com/api/token',\n        method: null,\n        statusCode: 400,\n        statusMessage: 'Bad Request',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'accounts.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'accounts.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [TimersList],\n            _idleStart: 61240,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 902,\n            [Symbol(triggerId)]: 898,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: <ref *4> ClientRequest {\n          _events: [Object: null prototype],\n          _eventsCount: 8,\n          _maxListeners: undefined,\n          outputData: [Array],\n          outputSize: 0,\n          writable: true,\n          destroyed: true,\n          _last: false,\n          chunkedEncoding: false,\n          shouldKeepAlive: true,\n          maxRequestsOnConnectionReached: false,\n          _defaultKeepAlive: true,\n          useChunkedEncodingByDefault: true,\n          sendDate: false,\n          _removedConnection: false,\n          _removedContLen: false,\n          _removedTE: false,\n          strictContentLength: false,\n          _contentLength: '566',\n          _hasBody: true,\n          _trailer: '',\n          finished: true,\n          _headerSent: true,\n          _closed: true,\n          _header: 'POST /api/token HTTP/1.1\\r\\n' +\n            'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n            'content-type: application/x-www-form-urlencoded\\r\\n' +\n            'content-length: 566\\r\\n' +\n            'accept: application/json\\r\\n' +\n            'accept-encoding: gzip, deflate, br\\r\\n' +\n            'Host: accounts.spotify.com\\r\\n' +\n            'Connection: keep-alive\\r\\n' +\n            '\\r\\n',\n          _keepAliveTimeout: 0,\n          _onPendingData: [Function],\n          agent: [Agent],\n          socketPath: undefined,\n          method: 'POST',\n          maxHeaderSize: undefined,\n          insecureHTTPParser: undefined,\n          joinDuplicateHeaders: undefined,\n          path: '/api/token',\n          _ended: true,\n          res: [Circular *5],\n          aborted: false,\n          timeoutCb: null,\n          upgradeOrConnect: false,\n          parser: null,\n          maxHeadersCount: null,\n          reusedSocket: false,\n          host: 'accounts.spotify.com',\n          protocol: 'https:',\n          timings: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(kNeedDrain)]: false,\n          [Symbol(corked)]: 0,\n          [Symbol(kChunkedBuffer)]: [Array],\n          [Symbol(kChunkedLength)]: 0,\n          [Symbol(kSocket)]: [TLSSocket],\n          [Symbol(kOutHeaders)]: [Object: null prototype],\n          [Symbol(errored)]: null,\n          [Symbol(kHighWaterMark)]: 65536,\n          [Symbol(kRejectNonStandardBodyWrites)]: false,\n          [Symbol(kUniqueHeaders)]: null,\n          [Symbol(reentry)]: true,\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [writableFinished]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableLength]: [Getter],\n          [writableHighWaterMark]: [Getter],\n          [writableCorked]: [Getter],\n          [_headers]: [Getter/Setter],\n          [connection]: [Getter/Setter],\n          [socket]: [Getter/Setter],\n          [_headerNames]: [Getter/Setter],\n          headersSent: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter]\n        },\n        _eventsCount: 3,\n        timings: {\n          start: 1730787466539,\n          socket: 1730787466540,\n          lookup: 1730787466544,\n          connect: 1730787466557,\n          secureConnect: 1730787466663,\n          upload: 1730787466663,\n          response: 1730787466842,\n          end: 1730787466843,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          date: 'Tue, 05 Nov 2024 06:17:46 GMT',\n          'content-type': 'application/json',\n          'x-request-id': '86e94e35-2a9e-4c8a-8353-8d2491df57d3',\n          'set-cookie': [Array],\n          'sp-trace-id': 'be9d13f84376d473',\n          'x-envoy-upstream-service-time': '14',\n          server: 'envoy',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          'content-encoding': 'gzip',\n          vary: 'Accept-Encoding',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      _flushed: true,\n      _aborted: false,\n      _requestInitialized: true,\n      _jobs: [ [length]: 0 ],\n      _eventsCount: 10,\n      _requestOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined,\n        ALPNProtocols: undefined,\n        ca: undefined,\n        cert: undefined,\n        key: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: [Function: checkServerIdentity] {\n          [length]: 2,\n          [name]: 'checkServerIdentity',\n          [prototype]: [Object]\n        },\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        sigalgs: undefined,\n        sessionTimeout: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        crl: undefined,\n        lookup: undefined,\n        family: undefined,\n        agent: undefined,\n        setHost: true,\n        method: 'POST',\n        maxHeaderSize: undefined,\n        localAddress: undefined,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          'content-type': 'application/x-www-form-urlencoded',\n          'content-length': '566',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        createConnection: undefined,\n        timeout: undefined,\n        h2session: undefined\n      },\n      flush: [AsyncFunction (anonymous)] {\n        [length]: 0,\n        [name]: '',\n        [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [ip]: [Getter],\n      [isAborted]: [Getter],\n      [socket]: [Getter],\n      [downloadProgress]: [Getter],\n      [uploadProgress]: [Getter],\n      [timings]: [Getter],\n      [isFromCache]: [Getter],\n      [reusedSocket]: [Getter],\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [readableEnded]: [Getter]\n    },\n    isFromCache: false,\n    ip: '35.186.224.24',\n    retryCount: 0,\n    ok: false,\n    rawBody: <Buffer 7b 22 65 72 72 6f 72 22 3a 22 69 6e 76 61 6c 69 64 5f 67 72 61 6e 74 22 2c 22 65 72 72 6f 72 5f 64 65 73 63 72 69 70 74 69 6f 6e 22 3a 22 49 6e 76 61 ... 24 more bytes>,\n    body: {\n      error: 'invalid_grant',\n      error_description: 'Invalid authorization code'\n    },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [Symbol(kCallback)]: null,\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter]\n  },\n  [request]: <ref *6> Request {\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: undefined,\n      pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n      newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n      response: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      retry: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 2, [name]: '' }\n      },\n      request: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      redirect: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      uploadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      downloadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n      pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 0,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 1574906,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 0,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466746,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    constructor: undefined,\n    _noPipe: true,\n    options: {\n      request: undefined,\n      agent: { http: undefined, https: undefined, http2: undefined },\n      h2session: undefined,\n      decompress: true,\n      timeout: {\n        connect: undefined,\n        lookup: undefined,\n        read: undefined,\n        request: undefined,\n        response: undefined,\n        secureConnect: undefined,\n        send: undefined,\n        socket: undefined\n      },\n      prefixUrl: '',\n      body: 'grant_type=authorization_code&code=AQBqFC0dcFC0Bl9d6eg20RnX82uUP1Ftf6WbuhjE8yqXGVjN_0GUk2C2_wMU6ts1LBcVHcQCNBz07IoD7Yvqa-AB2eL-6hT1tDRPvzk9GV1R0rsnAvLFskBDOjqtaFQDkPGizNeF7iga8J4z0M8GZDKWAD0mL_hU6CU_do2-DLMmfPsnbl5LOtH2jxnzaM1qVdl96sFEWH3KQOVGRuLtNO3TJgYOeBgBStCL5JqjOztQbuowniPOCbg656vxtRXkqGz--Xm_p0h4grjo6PL_41pN0LS55-jER3xFzrfH2-J5h1l7VBmS5L1f34yunMViaC7pvHeEj72QYx2iAR61Bw&redirect_uri=https%3A%2F%2F127.0.0.1%3A3001%2Fspotify%2Fcallback&client_id=3286dfde20f84f31a435b98165238936&code_verifier=po_JoJHeUlfOyx0sSpDeIdeBTEQpmE2J49LRaNe0WbrH4kVPJSgMJ%7EFTiqe.VMyN',\n      form: undefined,\n      json: undefined,\n      cookieJar: undefined,\n      ignoreInvalidCookies: false,\n      searchParams: undefined,\n      dnsLookup: undefined,\n      dnsCache: undefined,\n      context: {},\n      hooks: {\n        init: [ [length]: 0 ],\n        beforeRequest: [ [length]: 0 ],\n        beforeError: [ [length]: 0 ],\n        beforeRedirect: [ [length]: 0 ],\n        beforeRetry: [ [length]: 0 ],\n        afterResponse: [ [length]: 0 ]\n      },\n      followRedirect: true,\n      maxRedirects: 10,\n      cache: undefined,\n      throwHttpErrors: true,\n      username: '',\n      password: '',\n      http2: false,\n      allowGetBody: false,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        'content-type': 'application/x-www-form-urlencoded',\n        'content-length': '566',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      methodRewriting: false,\n      dnsLookupIpVersion: undefined,\n      parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n      stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n      retry: {\n        limit: 2,\n        methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n        statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n        errorCodes: [\n          'ETIMEDOUT',\n          'ECONNRESET',\n          'EADDRINUSE',\n          'ECONNREFUSED',\n          'EPIPE',\n          'ENOTFOUND',\n          'ENETUNREACH',\n          'EAI_AGAIN',\n          [length]: 8\n        ],\n        maxRetryAfter: undefined,\n        calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n        backoffLimit: Infinity,\n        noise: 100\n      },\n      localAddress: undefined,\n      method: 'POST',\n      createConnection: undefined,\n      cacheOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined\n      },\n      https: {\n        alpnProtocols: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: undefined,\n        certificateAuthority: undefined,\n        key: undefined,\n        certificate: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        signatureAlgorithms: undefined,\n        tlsSessionLifetime: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        certificateRevocationLists: undefined\n      },\n      encoding: undefined,\n      resolveBodyOnly: false,\n      isStream: false,\n      responseType: 'json',\n      url: URL {\n        href: 'https://accounts.spotify.com/api/token',\n        origin: 'https://accounts.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'accounts.spotify.com',\n        hostname: 'accounts.spotify.com',\n        port: '',\n        pathname: '/api/token',\n        search: '',\n        searchParams: URLSearchParams {},\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://accounts.spotify.com/api/token',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 28,\n          pathname_start: 28,\n          search_start: 4294967295,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      pagination: {\n        transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n        paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n        filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n        shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n        countLimit: Infinity,\n        backoff: 0,\n        requestLimit: 10000,\n        stackAllItems: false\n      },\n      setHost: true,\n      maxHeaderSize: undefined,\n      signal: undefined,\n      enableUnixSockets: false\n    },\n    response: <ref *3> PassThrough {\n      _events: {\n        close: undefined,\n        error: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        prefinish: <ref *1> [Function: prefinish] {\n          [length]: 0,\n          [name]: 'prefinish',\n          [prototype]: [Object]\n        },\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n        unpipe: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 9996040,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 65536,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466504,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kWriteCbValue)]: null,\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n      _maxListeners: undefined,\n      _eventsCount: 4,\n      socket: [Getter/Setter],\n      httpVersionMajor: [Getter/Setter],\n      httpVersionMinor: [Getter/Setter],\n      httpVersion: [Getter/Setter],\n      complete: [Getter/Setter],\n      rawHeaders: [Getter/Setter],\n      rawTrailers: [Getter/Setter],\n      joinDuplicateHeaders: [Getter/Setter],\n      aborted: [Getter/Setter],\n      upgrade: [Getter/Setter],\n      url: [Getter/Setter],\n      method: [Getter/Setter],\n      statusCode: [Getter/Setter],\n      statusMessage: [Getter/Setter],\n      client: [Getter/Setter],\n      _consuming: [Getter/Setter],\n      _dumped: [Getter/Setter],\n      req: [Getter/Setter],\n      timings: [Getter/Setter],\n      headers: [Getter/Setter],\n      setTimeout: [Getter/Setter],\n      trailers: [Getter/Setter],\n      requestUrl: URL {\n        href: 'https://accounts.spotify.com/api/token',\n        origin: 'https://accounts.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'accounts.spotify.com',\n        hostname: 'accounts.spotify.com',\n        port: '',\n        pathname: '/api/token',\n        search: '',\n        searchParams: URLSearchParams {},\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://accounts.spotify.com/api/token',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 28,\n          pathname_start: 28,\n          search_start: 4294967295,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      request: [Circular *6],\n      isFromCache: false,\n      ip: '35.186.224.24',\n      retryCount: 0,\n      ok: false,\n      rawBody: <Buffer 7b 22 65 72 72 6f 72 22 3a 22 69 6e 76 61 6c 69 64 5f 67 72 61 6e 74 22 2c 22 65 72 72 6f 72 5f 64 65 73 63 72 69 70 74 69 6f 6e 22 3a 22 49 6e 76 61 ... 24 more bytes>,\n      body: {\n        error: 'invalid_grant',\n        error_description: 'Invalid authorization code'\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kCallback)]: null,\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter]\n    },\n    requestUrl: URL {\n      href: 'https://accounts.spotify.com/api/token',\n      origin: 'https://accounts.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'accounts.spotify.com',\n      hostname: 'accounts.spotify.com',\n      port: '',\n      pathname: '/api/token',\n      search: '',\n      searchParams: URLSearchParams {},\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://accounts.spotify.com/api/token',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 28,\n        pathname_start: 28,\n        search_start: 4294967295,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    retryCount: 0,\n    _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _downloadedSize: 74,\n    _uploadedSize: 566,\n    _stopReading: true,\n    _pipedServerResponses: Set(0) {},\n    _request: <ref *4> ClientRequest {\n      _events: [Object: null prototype] {\n        socket: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        error: [ [Function], [Function], [length]: 2 ],\n        connect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        continue: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        information: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        upgrade: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        finish: [Function: requestOnFinish] {\n          [length]: 0,\n          [name]: 'requestOnFinish',\n          [prototype]: [Object]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      outputData: [ [length]: 0 ],\n      outputSize: 0,\n      writable: true,\n      destroyed: true,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: false,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: '566',\n      _hasBody: true,\n      _trailer: '',\n      finished: true,\n      _headerSent: true,\n      _closed: true,\n      _header: 'POST /api/token HTTP/1.1\\r\\n' +\n        'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n        'content-type: application/x-www-form-urlencoded\\r\\n' +\n        'content-length: 566\\r\\n' +\n        'accept: application/json\\r\\n' +\n        'accept-encoding: gzip, deflate, br\\r\\n' +\n        'Host: accounts.spotify.com\\r\\n' +\n        'Connection: keep-alive\\r\\n' +\n        '\\r\\n',\n      _keepAliveTimeout: 0,\n      _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n      agent: Agent {\n        _events: [Object: null prototype] {\n          free: [Function],\n          newListener: [Function]\n        },\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        defaultPort: 443,\n        protocol: 'https:',\n        options: [Object: null prototype] {\n          keepAlive: true,\n          scheduling: 'lifo',\n          timeout: 5000,\n          noDelay: true,\n          path: null\n        },\n        requests: [Object: null prototype] {},\n        sockets: [Object: null prototype] {},\n        freeSockets: [Object: null prototype] {\n          'accounts.spotify.com:443:::::::::::::::::::::': [Array]\n        },\n        keepAliveMsecs: 1000,\n        keepAlive: true,\n        maxSockets: Infinity,\n        maxFreeSockets: 256,\n        scheduling: 'lifo',\n        maxTotalSockets: Infinity,\n        totalSocketCount: 1,\n        maxCachedSessions: 100,\n        _sessionCache: { map: [Object], list: [Array] },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false\n      },\n      socketPath: undefined,\n      method: 'POST',\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      joinDuplicateHeaders: undefined,\n      path: '/api/token',\n      _ended: true,\n      res: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'date',\n          'Tue, 05 Nov 2024 06:17:46 GMT',\n          'content-type',\n          'application/json',\n          'x-request-id',\n          '86e94e35-2a9e-4c8a-8353-8d2491df57d3',\n          'set-cookie',\n          '__Host-device_id=AQAAlHCdyJTo9XZ6rUnK-GmpR0AItDcZtN5CghRFqUkRg05kCviA5PImxc5XKkk77f8qFT8oFAAoG1VMzoXSOt6lE4FRD4Pf4Xs;Version=1;Path=/;Max-Age=2147483647;Secure;HttpOnly;SameSite=Lax',\n          'set-cookie',\n          'sp_tr=false;Version=1;Domain=accounts.spotify.com;Path=/;Secure;SameSite=Lax',\n          'sp-trace-id',\n          'be9d13f84376d473',\n          'x-envoy-upstream-service-time',\n          '14',\n          'server',\n          'envoy',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'content-encoding',\n          'gzip',\n          'vary',\n          'Accept-Encoding',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://accounts.spotify.com/api/token',\n        method: null,\n        statusCode: 400,\n        statusMessage: 'Bad Request',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'accounts.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'accounts.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [TimersList],\n            _idleStart: 61240,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 902,\n            [Symbol(triggerId)]: 898,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: [Circular *4],\n        _eventsCount: 3,\n        timings: {\n          start: 1730787466539,\n          socket: 1730787466540,\n          lookup: 1730787466544,\n          connect: 1730787466557,\n          secureConnect: 1730787466663,\n          upload: 1730787466663,\n          response: 1730787466842,\n          end: 1730787466843,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          date: 'Tue, 05 Nov 2024 06:17:46 GMT',\n          'content-type': 'application/json',\n          'x-request-id': '86e94e35-2a9e-4c8a-8353-8d2491df57d3',\n          'set-cookie': [Array],\n          'sp-trace-id': 'be9d13f84376d473',\n          'x-envoy-upstream-service-time': '14',\n          server: 'envoy',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          'content-encoding': 'gzip',\n          vary: 'Accept-Encoding',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      aborted: false,\n      timeoutCb: null,\n      upgradeOrConnect: false,\n      parser: null,\n      maxHeadersCount: null,\n      reusedSocket: false,\n      host: 'accounts.spotify.com',\n      protocol: 'https:',\n      timings: {\n        start: 1730787466539,\n        socket: 1730787466540,\n        lookup: 1730787466544,\n        connect: 1730787466557,\n        secureConnect: 1730787466663,\n        upload: 1730787466663,\n        response: 1730787466842,\n        end: 1730787466843,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 1,\n          dns: 4,\n          tcp: 13,\n          tls: 106,\n          request: 0,\n          firstByte: 179,\n          download: 1,\n          total: 304\n        }\n      },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n      [Symbol(kChunkedLength)]: 0,\n      [Symbol(kSocket)]: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 f0 79 32 15 a7 ec 3c e7 f1 88 b8 00 dc e2 ce af 2f 73 39 a6 24 b0 8b 90 35 2b d4 33 fa a8 15 dd 04 ... 2078 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'accounts.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'accounts.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [TimersList],\n          _idleStart: 61240,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 902,\n          [Symbol(triggerId)]: 898,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 f0 79 32 15 a7 ec 3c e7 f1 88 b8 00 dc e2 ce af 2f 73 39 a6 24 b0 8b 90 35 2b d4 33 fa a8 15 dd 04 ... 2078 more bytes>,\n          protocol: 'https:',\n          hostname: 'accounts.spotify.com',\n          hash: '',\n          search: '',\n          pathname: '/api/token',\n          path: null,\n          href: 'https://accounts.spotify.com/api/token',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'POST',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'accounts.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'accounts.spotify.com',\n          _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      [Symbol(kOutHeaders)]: [Object: null prototype] {\n        'user-agent': [\n          'user-agent',\n          'got (https://github.com/sindresorhus/got)',\n          [length]: 2\n        ],\n        'content-type': [\n          'content-type',\n          'application/x-www-form-urlencoded',\n          [length]: 2\n        ],\n        'content-length': [ 'content-length', '566', [length]: 2 ],\n        accept: [ 'accept', 'application/json', [length]: 2 ],\n        'accept-encoding': [ 'accept-encoding', 'gzip, deflate, br', [length]: 2 ],\n        host: [ 'Host', 'accounts.spotify.com', [length]: 2 ]\n      },\n      [Symbol(errored)]: null,\n      [Symbol(kHighWaterMark)]: 65536,\n      [Symbol(kRejectNonStandardBodyWrites)]: false,\n      [Symbol(kUniqueHeaders)]: null,\n      [Symbol(reentry)]: true,\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [writableFinished]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableLength]: [Getter],\n      [writableHighWaterMark]: [Getter],\n      [writableCorked]: [Getter],\n      [_headers]: [Getter/Setter],\n      [connection]: [Getter/Setter],\n      [socket]: [Getter/Setter],\n      [_headerNames]: [Getter/Setter],\n      headersSent: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter]\n    },\n    _responseSize: 74,\n    _bodySize: 566,\n    _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n    _isFromCache: false,\n    _cannotHaveBody: false,\n    _triggerRead: true,\n    _cancelTimeouts: [Function: cancelTimeouts] { [length]: 0, [name]: 'cancelTimeouts' },\n    _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _nativeResponse: <ref *5> IncomingMessage {\n      _events: {\n        close: undefined,\n        error: undefined,\n        data: undefined,\n        end: [Function: responseOnEnd] {\n          [length]: 0,\n          [name]: 'responseOnEnd',\n          [prototype]: [Object]\n        },\n        readable: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 110892924,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _maxListeners: undefined,\n      socket: null,\n      httpVersionMajor: 1,\n      httpVersionMinor: 1,\n      httpVersion: '1.1',\n      complete: true,\n      rawHeaders: [\n        'date',\n        'Tue, 05 Nov 2024 06:17:46 GMT',\n        'content-type',\n        'application/json',\n        'x-request-id',\n        '86e94e35-2a9e-4c8a-8353-8d2491df57d3',\n        'set-cookie',\n        '__Host-device_id=AQAAlHCdyJTo9XZ6rUnK-GmpR0AItDcZtN5CghRFqUkRg05kCviA5PImxc5XKkk77f8qFT8oFAAoG1VMzoXSOt6lE4FRD4Pf4Xs;Version=1;Path=/;Max-Age=2147483647;Secure;HttpOnly;SameSite=Lax',\n        'set-cookie',\n        'sp_tr=false;Version=1;Domain=accounts.spotify.com;Path=/;Secure;SameSite=Lax',\n        'sp-trace-id',\n        'be9d13f84376d473',\n        'x-envoy-upstream-service-time',\n        '14',\n        'server',\n        'envoy',\n        'strict-transport-security',\n        'max-age=31536000',\n        'x-content-type-options',\n        'nosniff',\n        'content-encoding',\n        'gzip',\n        'vary',\n        'Accept-Encoding',\n        'Via',\n        'HTTP/2 edgeproxy, 1.1 google',\n        'Alt-Svc',\n        'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'Transfer-Encoding',\n        'chunked',\n        [length]: 30\n      ],\n      rawTrailers: [ [length]: 0 ],\n      joinDuplicateHeaders: undefined,\n      aborted: false,\n      upgrade: false,\n      url: 'https://accounts.spotify.com/api/token',\n      method: null,\n      statusCode: 400,\n      statusMessage: 'Bad Request',\n      client: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 f0 79 32 15 a7 ec 3c e7 f1 88 b8 00 dc e2 ce af 2f 73 39 a6 24 b0 8b 90 35 2b d4 33 fa a8 15 dd 04 ... 2078 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'accounts.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'accounts.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [TimersList],\n          _idleStart: 61240,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 902,\n          [Symbol(triggerId)]: 898,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 f0 79 32 15 a7 ec 3c e7 f1 88 b8 00 dc e2 ce af 2f 73 39 a6 24 b0 8b 90 35 2b d4 33 fa a8 15 dd 04 ... 2078 more bytes>,\n          protocol: 'https:',\n          hostname: 'accounts.spotify.com',\n          hash: '',\n          search: '',\n          pathname: '/api/token',\n          path: null,\n          href: 'https://accounts.spotify.com/api/token',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'POST',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'accounts.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'accounts.spotify.com',\n          _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      _consuming: false,\n      _dumped: false,\n      req: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: '566',\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'POST /api/token HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'content-type: application/x-www-form-urlencoded\\r\\n' +\n          'content-length: 566\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: accounts.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'POST',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/api/token',\n        _ended: true,\n        res: [Circular *5],\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'accounts.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730787466539,\n          socket: 1730787466540,\n          lookup: 1730787466544,\n          connect: 1730787466557,\n          secureConnect: 1730787466663,\n          upload: 1730787466663,\n          response: 1730787466842,\n          end: 1730787466843,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: <ref *7> TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'accounts.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'accounts.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [TimersList],\n            _idleStart: 61240,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 902,\n            [Symbol(triggerId)]: 898,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          'content-type': [Array],\n          'content-length': [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _eventsCount: 3,\n      timings: {\n        start: 1730787466539,\n        socket: 1730787466540,\n        lookup: 1730787466544,\n        connect: 1730787466557,\n        secureConnect: 1730787466663,\n        upload: 1730787466663,\n        response: 1730787466842,\n        end: 1730787466843,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 1,\n          dns: 4,\n          tcp: 13,\n          tls: 106,\n          request: 0,\n          firstByte: 179,\n          download: 1,\n          total: 304\n        }\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kHeaders)]: {\n        date: 'Tue, 05 Nov 2024 06:17:46 GMT',\n        'content-type': 'application/json',\n        'x-request-id': '86e94e35-2a9e-4c8a-8353-8d2491df57d3',\n        'set-cookie': [\n          '__Host-device_id=AQAAlHCdyJTo9XZ6rUnK-GmpR0AItDcZtN5CghRFqUkRg05kCviA5PImxc5XKkk77f8qFT8oFAAoG1VMzoXSOt6lE4FRD4Pf4Xs;Version=1;Path=/;Max-Age=2147483647;Secure;HttpOnly;SameSite=Lax',\n          'sp_tr=false;Version=1;Domain=accounts.spotify.com;Path=/;Secure;SameSite=Lax',\n          [length]: 2\n        ],\n        'sp-trace-id': 'be9d13f84376d473',\n        'x-envoy-upstream-service-time': '14',\n        server: 'envoy',\n        'strict-transport-security': 'max-age=31536000',\n        'x-content-type-options': 'nosniff',\n        'content-encoding': 'gzip',\n        vary: 'Accept-Encoding',\n        via: 'HTTP/2 edgeproxy, 1.1 google',\n        'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'transfer-encoding': 'chunked'\n      },\n      [Symbol(kHeadersCount)]: 30,\n      [Symbol(kTrailers)]: null,\n      [Symbol(kTrailersCount)]: 0,\n      [connection]: [Getter/Setter],\n      [headers]: [Getter/Setter],\n      [headersDistinct]: [Getter/Setter],\n      [trailers]: [Getter/Setter],\n      [trailersDistinct]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readableEnded]: [Getter]\n    },\n    _flushed: true,\n    _aborted: false,\n    _requestInitialized: true,\n    _jobs: [ [length]: 0 ],\n    _eventsCount: 10,\n    _requestOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined,\n      ALPNProtocols: undefined,\n      ca: undefined,\n      cert: undefined,\n      key: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: <ref *8> [Function: checkServerIdentity] {\n        [length]: 2,\n        [name]: 'checkServerIdentity',\n        [prototype]: { [constructor]: [Circular *8] }\n      },\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      sigalgs: undefined,\n      sessionTimeout: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      crl: undefined,\n      lookup: undefined,\n      family: undefined,\n      agent: undefined,\n      setHost: true,\n      method: 'POST',\n      maxHeaderSize: undefined,\n      localAddress: undefined,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        'content-type': 'application/x-www-form-urlencoded',\n        'content-length': '566',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      createConnection: undefined,\n      timeout: undefined,\n      h2session: undefined\n    },\n    flush: [AsyncFunction (anonymous)] {\n      [length]: 0,\n      [name]: '',\n      [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n    },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [ip]: [Getter],\n    [isAborted]: [Getter],\n    [socket]: [Getter],\n    [downloadProgress]: [Getter],\n    [uploadProgress]: [Getter],\n    [timings]: [Getter],\n    [isFromCache]: [Getter],\n    [reusedSocket]: [Getter],\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter],\n    [readable]: [Getter/Setter],\n    [readableDidRead]: [Getter],\n    [readableAborted]: [Getter],\n    [readableHighWaterMark]: [Getter],\n    [readableBuffer]: [Getter],\n    [readableFlowing]: [Getter/Setter],\n    [readableLength]: [Getter],\n    [readableObjectMode]: [Getter],\n    [readableEncoding]: [Getter],\n    [errored]: [Getter],\n    [closed]: [Getter],\n    [readableEnded]: [Getter]\n  },\n  timings: {\n    start: 1730787466539,\n    socket: 1730787466540,\n    lookup: 1730787466544,\n    connect: 1730787466557,\n    secureConnect: 1730787466663,\n    upload: 1730787466663,\n    response: 1730787466842,\n    end: 1730787466843,\n    error: undefined,\n    abort: undefined,\n    phases: {\n      wait: 1,\n      dns: 4,\n      tcp: 13,\n      tls: 106,\n      request: 0,\n      firstByte: 179,\n      download: 1,\n      total: 304\n    }\n  },\n  name: 'HTTPError',\n  options: {\n    request: undefined,\n    agent: { http: undefined, https: undefined, http2: undefined },\n    h2session: undefined,\n    decompress: true,\n    timeout: {\n      connect: undefined,\n      lookup: undefined,\n      read: undefined,\n      request: undefined,\n      response: undefined,\n      secureConnect: undefined,\n      send: undefined,\n      socket: undefined\n    },\n    prefixUrl: '',\n    body: 'grant_type=authorization_code&code=AQBqFC0dcFC0Bl9d6eg20RnX82uUP1Ftf6WbuhjE8yqXGVjN_0GUk2C2_wMU6ts1LBcVHcQCNBz07IoD7Yvqa-AB2eL-6hT1tDRPvzk9GV1R0rsnAvLFskBDOjqtaFQDkPGizNeF7iga8J4z0M8GZDKWAD0mL_hU6CU_do2-DLMmfPsnbl5LOtH2jxnzaM1qVdl96sFEWH3KQOVGRuLtNO3TJgYOeBgBStCL5JqjOztQbuowniPOCbg656vxtRXkqGz--Xm_p0h4grjo6PL_41pN0LS55-jER3xFzrfH2-J5h1l7VBmS5L1f34yunMViaC7pvHeEj72QYx2iAR61Bw&redirect_uri=https%3A%2F%2F127.0.0.1%3A3001%2Fspotify%2Fcallback&client_id=3286dfde20f84f31a435b98165238936&code_verifier=po_JoJHeUlfOyx0sSpDeIdeBTEQpmE2J49LRaNe0WbrH4kVPJSgMJ%7EFTiqe.VMyN',\n    form: undefined,\n    json: undefined,\n    cookieJar: undefined,\n    ignoreInvalidCookies: false,\n    searchParams: undefined,\n    dnsLookup: undefined,\n    dnsCache: undefined,\n    context: {},\n    hooks: {\n      init: [ [length]: 0 ],\n      beforeRequest: [ [length]: 0 ],\n      beforeError: [ [length]: 0 ],\n      beforeRedirect: [ [length]: 0 ],\n      beforeRetry: [ [length]: 0 ],\n      afterResponse: [ [length]: 0 ]\n    },\n    followRedirect: true,\n    maxRedirects: 10,\n    cache: undefined,\n    throwHttpErrors: true,\n    username: '',\n    password: '',\n    http2: false,\n    allowGetBody: false,\n    headers: {\n      'user-agent': 'got (https://github.com/sindresorhus/got)',\n      'content-type': 'application/x-www-form-urlencoded',\n      'content-length': '566',\n      accept: 'application/json',\n      'accept-encoding': 'gzip, deflate, br'\n    },\n    methodRewriting: false,\n    dnsLookupIpVersion: undefined,\n    parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n    stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n    retry: {\n      limit: 2,\n      methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n      statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n      errorCodes: [\n        'ETIMEDOUT',\n        'ECONNRESET',\n        'EADDRINUSE',\n        'ECONNREFUSED',\n        'EPIPE',\n        'ENOTFOUND',\n        'ENETUNREACH',\n        'EAI_AGAIN',\n        [length]: 8\n      ],\n      maxRetryAfter: undefined,\n      calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n      backoffLimit: Infinity,\n      noise: 100\n    },\n    localAddress: undefined,\n    method: 'POST',\n    createConnection: undefined,\n    cacheOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined\n    },\n    https: {\n      alpnProtocols: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: undefined,\n      certificateAuthority: undefined,\n      key: undefined,\n      certificate: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      signatureAlgorithms: undefined,\n      tlsSessionLifetime: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      certificateRevocationLists: undefined\n    },\n    encoding: undefined,\n    resolveBodyOnly: false,\n    isStream: false,\n    responseType: 'json',\n    url: URL {\n      href: 'https://accounts.spotify.com/api/token',\n      origin: 'https://accounts.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'accounts.spotify.com',\n      hostname: 'accounts.spotify.com',\n      port: '',\n      pathname: '/api/token',\n      search: '',\n      searchParams: URLSearchParams {},\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://accounts.spotify.com/api/token',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 28,\n        pathname_start: 28,\n        search_start: 4294967295,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    pagination: {\n      transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n      paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n      filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n      shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n      countLimit: Infinity,\n      backoff: 0,\n      requestLimit: 10000,\n      stackAllItems: false\n    },\n    setHost: true,\n    maxHeaderSize: undefined,\n    signal: undefined,\n    enableUnixSockets: false\n  }\n}","timestamp":"2024-11-05 17:17:46"}
{"level":"error","message":"Error occurred: <ref *2> HTTPError: Response code 400 (Bad Request)\n    at Request.<anonymous> (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/as-promise/index.js:92:42)\n    at Object.onceWrapper (node:events:635:26)\n    at Request.emit (node:events:532:35)\n    at Request._onResponseBase (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:609:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Request._onResponse (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:649:13) {\n  [stack]: [Getter/Setter],\n  [message]: 'Response code 400 (Bad Request)',\n  [cause]: {},\n  input: undefined,\n  code: 'ERR_NON_2XX_3XX_RESPONSE',\n  [response]: <ref *3> PassThrough {\n    _events: {\n      close: undefined,\n      error: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 1, [name]: '' }\n      },\n      prefinish: <ref *1> [Function: prefinish] {\n        [length]: 0,\n        [name]: 'prefinish',\n        [prototype]: { [constructor]: [Circular *1] }\n      },\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n      unpipe: undefined,\n      aborted: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 0, [name]: '' }\n      }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 65536,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 9996040,\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 65536,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466504,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kWriteCbValue)]: null,\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n    _maxListeners: undefined,\n    _eventsCount: 4,\n    socket: [Getter/Setter],\n    httpVersionMajor: [Getter/Setter],\n    httpVersionMinor: [Getter/Setter],\n    httpVersion: [Getter/Setter],\n    complete: [Getter/Setter],\n    rawHeaders: [Getter/Setter],\n    rawTrailers: [Getter/Setter],\n    joinDuplicateHeaders: [Getter/Setter],\n    aborted: [Getter/Setter],\n    upgrade: [Getter/Setter],\n    url: [Getter/Setter],\n    method: [Getter/Setter],\n    statusCode: [Getter/Setter],\n    statusMessage: [Getter/Setter],\n    client: [Getter/Setter],\n    _consuming: [Getter/Setter],\n    _dumped: [Getter/Setter],\n    req: [Getter/Setter],\n    timings: [Getter/Setter],\n    headers: [Getter/Setter],\n    setTimeout: [Getter/Setter],\n    trailers: [Getter/Setter],\n    requestUrl: URL {\n      href: 'https://accounts.spotify.com/api/token',\n      origin: 'https://accounts.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'accounts.spotify.com',\n      hostname: 'accounts.spotify.com',\n      port: '',\n      pathname: '/api/token',\n      search: '',\n      searchParams: URLSearchParams {},\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://accounts.spotify.com/api/token',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 28,\n        pathname_start: 28,\n        search_start: 4294967295,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    request: Request {\n      _events: {\n        close: undefined,\n        error: undefined,\n        prefinish: undefined,\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: undefined,\n        pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n        newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n        response: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        retry: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        request: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        redirect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        uploadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        downloadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n        pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 0,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 1574906,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 0,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466746,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      constructor: undefined,\n      _noPipe: true,\n      options: {\n        request: undefined,\n        agent: { http: undefined, https: undefined, http2: undefined },\n        h2session: undefined,\n        decompress: true,\n        timeout: {\n          connect: undefined,\n          lookup: undefined,\n          read: undefined,\n          request: undefined,\n          response: undefined,\n          secureConnect: undefined,\n          send: undefined,\n          socket: undefined\n        },\n        prefixUrl: '',\n        body: 'grant_type=authorization_code&code=AQBqFC0dcFC0Bl9d6eg20RnX82uUP1Ftf6WbuhjE8yqXGVjN_0GUk2C2_wMU6ts1LBcVHcQCNBz07IoD7Yvqa-AB2eL-6hT1tDRPvzk9GV1R0rsnAvLFskBDOjqtaFQDkPGizNeF7iga8J4z0M8GZDKWAD0mL_hU6CU_do2-DLMmfPsnbl5LOtH2jxnzaM1qVdl96sFEWH3KQOVGRuLtNO3TJgYOeBgBStCL5JqjOztQbuowniPOCbg656vxtRXkqGz--Xm_p0h4grjo6PL_41pN0LS55-jER3xFzrfH2-J5h1l7VBmS5L1f34yunMViaC7pvHeEj72QYx2iAR61Bw&redirect_uri=https%3A%2F%2F127.0.0.1%3A3001%2Fspotify%2Fcallback&client_id=3286dfde20f84f31a435b98165238936&code_verifier=po_JoJHeUlfOyx0sSpDeIdeBTEQpmE2J49LRaNe0WbrH4kVPJSgMJ%7EFTiqe.VMyN',\n        form: undefined,\n        json: undefined,\n        cookieJar: undefined,\n        ignoreInvalidCookies: false,\n        searchParams: undefined,\n        dnsLookup: undefined,\n        dnsCache: undefined,\n        context: {},\n        hooks: {\n          init: [ [length]: 0 ],\n          beforeRequest: [ [length]: 0 ],\n          beforeError: [ [length]: 0 ],\n          beforeRedirect: [ [length]: 0 ],\n          beforeRetry: [ [length]: 0 ],\n          afterResponse: [ [length]: 0 ]\n        },\n        followRedirect: true,\n        maxRedirects: 10,\n        cache: undefined,\n        throwHttpErrors: true,\n        username: '',\n        password: '',\n        http2: false,\n        allowGetBody: false,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          'content-type': 'application/x-www-form-urlencoded',\n          'content-length': '566',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        methodRewriting: false,\n        dnsLookupIpVersion: undefined,\n        parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n        stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n        retry: {\n          limit: 2,\n          methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n          statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n          errorCodes: [\n            'ETIMEDOUT',\n            'ECONNRESET',\n            'EADDRINUSE',\n            'ECONNREFUSED',\n            'EPIPE',\n            'ENOTFOUND',\n            'ENETUNREACH',\n            'EAI_AGAIN',\n            [length]: 8\n          ],\n          maxRetryAfter: undefined,\n          calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n          backoffLimit: Infinity,\n          noise: 100\n        },\n        localAddress: undefined,\n        method: 'POST',\n        createConnection: undefined,\n        cacheOptions: {\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined\n        },\n        https: {\n          alpnProtocols: undefined,\n          rejectUnauthorized: undefined,\n          checkServerIdentity: undefined,\n          certificateAuthority: undefined,\n          key: undefined,\n          certificate: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          ciphers: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          signatureAlgorithms: undefined,\n          tlsSessionLifetime: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          certificateRevocationLists: undefined\n        },\n        encoding: undefined,\n        resolveBodyOnly: false,\n        isStream: false,\n        responseType: 'json',\n        url: URL {\n          href: 'https://accounts.spotify.com/api/token',\n          origin: 'https://accounts.spotify.com',\n          protocol: 'https:',\n          username: '',\n          password: '',\n          host: 'accounts.spotify.com',\n          hostname: 'accounts.spotify.com',\n          port: '',\n          pathname: '/api/token',\n          search: '',\n          searchParams: URLSearchParams {},\n          hash: '',\n          [Symbol(context)]: URLContext {\n            href: 'https://accounts.spotify.com/api/token',\n            protocol_end: 6,\n            username_end: 8,\n            host_start: 8,\n            host_end: 28,\n            pathname_start: 28,\n            search_start: 4294967295,\n            hash_start: 4294967295,\n            port: 4294967295,\n            scheme_type: 2,\n            [hasPort]: [Getter],\n            [hasSearch]: [Getter],\n            [hasHash]: [Getter]\n          }\n        },\n        pagination: {\n          transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n          paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n          filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n          shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n          countLimit: Infinity,\n          backoff: 0,\n          requestLimit: 10000,\n          stackAllItems: false\n        },\n        setHost: true,\n        maxHeaderSize: undefined,\n        signal: undefined,\n        enableUnixSockets: false\n      },\n      response: [Circular *3],\n      requestUrl: URL {\n        href: 'https://accounts.spotify.com/api/token',\n        origin: 'https://accounts.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'accounts.spotify.com',\n        hostname: 'accounts.spotify.com',\n        port: '',\n        pathname: '/api/token',\n        search: '',\n        searchParams: URLSearchParams {},\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://accounts.spotify.com/api/token',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 28,\n          pathname_start: 28,\n          search_start: 4294967295,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      retryCount: 0,\n      _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _downloadedSize: 74,\n      _uploadedSize: 566,\n      _stopReading: true,\n      _pipedServerResponses: Set(0) {},\n      _request: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: '566',\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'POST /api/token HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'content-type: application/x-www-form-urlencoded\\r\\n' +\n          'content-length: 566\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: accounts.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'POST',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/api/token',\n        _ended: true,\n        res: IncomingMessage {\n          _events: [Object],\n          _readableState: [ReadableState],\n          _maxListeners: undefined,\n          socket: null,\n          httpVersionMajor: 1,\n          httpVersionMinor: 1,\n          httpVersion: '1.1',\n          complete: true,\n          rawHeaders: [Array],\n          rawTrailers: [Array],\n          joinDuplicateHeaders: undefined,\n          aborted: false,\n          upgrade: false,\n          url: 'https://accounts.spotify.com/api/token',\n          method: null,\n          statusCode: 400,\n          statusMessage: 'Bad Request',\n          client: [TLSSocket],\n          _consuming: false,\n          _dumped: false,\n          req: [Circular *4],\n          _eventsCount: 3,\n          timings: [Object],\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kHeaders)]: [Object],\n          [Symbol(kHeadersCount)]: 30,\n          [Symbol(kTrailers)]: null,\n          [Symbol(kTrailersCount)]: 0,\n          [connection]: [Getter/Setter],\n          [headers]: [Getter/Setter],\n          [headersDistinct]: [Getter/Setter],\n          [trailers]: [Getter/Setter],\n          [trailersDistinct]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableDidRead]: [Getter],\n          [readableAborted]: [Getter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readableEnded]: [Getter]\n        },\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'accounts.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730787466539,\n          socket: 1730787466540,\n          lookup: 1730787466544,\n          connect: 1730787466557,\n          secureConnect: 1730787466663,\n          upload: 1730787466663,\n          response: 1730787466842,\n          end: 1730787466843,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'accounts.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'accounts.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [TimersList],\n            _idleStart: 61240,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 902,\n            [Symbol(triggerId)]: 898,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          'content-type': [Array],\n          'content-length': [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _responseSize: 74,\n      _bodySize: 566,\n      _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n      _isFromCache: false,\n      _cannotHaveBody: false,\n      _triggerRead: true,\n      _cancelTimeouts: [Function: cancelTimeouts] {\n        [length]: 0,\n        [name]: 'cancelTimeouts'\n      },\n      _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _nativeResponse: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'date',\n          'Tue, 05 Nov 2024 06:17:46 GMT',\n          'content-type',\n          'application/json',\n          'x-request-id',\n          '86e94e35-2a9e-4c8a-8353-8d2491df57d3',\n          'set-cookie',\n          '__Host-device_id=AQAAlHCdyJTo9XZ6rUnK-GmpR0AItDcZtN5CghRFqUkRg05kCviA5PImxc5XKkk77f8qFT8oFAAoG1VMzoXSOt6lE4FRD4Pf4Xs;Version=1;Path=/;Max-Age=2147483647;Secure;HttpOnly;SameSite=Lax',\n          'set-cookie',\n          'sp_tr=false;Version=1;Domain=accounts.spotify.com;Path=/;Secure;SameSite=Lax',\n          'sp-trace-id',\n          'be9d13f84376d473',\n          'x-envoy-upstream-service-time',\n          '14',\n          'server',\n          'envoy',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'content-encoding',\n          'gzip',\n          'vary',\n          'Accept-Encoding',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://accounts.spotify.com/api/token',\n        method: null,\n        statusCode: 400,\n        statusMessage: 'Bad Request',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'accounts.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'accounts.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [TimersList],\n            _idleStart: 61240,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 902,\n            [Symbol(triggerId)]: 898,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: <ref *4> ClientRequest {\n          _events: [Object: null prototype],\n          _eventsCount: 8,\n          _maxListeners: undefined,\n          outputData: [Array],\n          outputSize: 0,\n          writable: true,\n          destroyed: true,\n          _last: false,\n          chunkedEncoding: false,\n          shouldKeepAlive: true,\n          maxRequestsOnConnectionReached: false,\n          _defaultKeepAlive: true,\n          useChunkedEncodingByDefault: true,\n          sendDate: false,\n          _removedConnection: false,\n          _removedContLen: false,\n          _removedTE: false,\n          strictContentLength: false,\n          _contentLength: '566',\n          _hasBody: true,\n          _trailer: '',\n          finished: true,\n          _headerSent: true,\n          _closed: true,\n          _header: 'POST /api/token HTTP/1.1\\r\\n' +\n            'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n            'content-type: application/x-www-form-urlencoded\\r\\n' +\n            'content-length: 566\\r\\n' +\n            'accept: application/json\\r\\n' +\n            'accept-encoding: gzip, deflate, br\\r\\n' +\n            'Host: accounts.spotify.com\\r\\n' +\n            'Connection: keep-alive\\r\\n' +\n            '\\r\\n',\n          _keepAliveTimeout: 0,\n          _onPendingData: [Function],\n          agent: [Agent],\n          socketPath: undefined,\n          method: 'POST',\n          maxHeaderSize: undefined,\n          insecureHTTPParser: undefined,\n          joinDuplicateHeaders: undefined,\n          path: '/api/token',\n          _ended: true,\n          res: [Circular *5],\n          aborted: false,\n          timeoutCb: null,\n          upgradeOrConnect: false,\n          parser: null,\n          maxHeadersCount: null,\n          reusedSocket: false,\n          host: 'accounts.spotify.com',\n          protocol: 'https:',\n          timings: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(kNeedDrain)]: false,\n          [Symbol(corked)]: 0,\n          [Symbol(kChunkedBuffer)]: [Array],\n          [Symbol(kChunkedLength)]: 0,\n          [Symbol(kSocket)]: [TLSSocket],\n          [Symbol(kOutHeaders)]: [Object: null prototype],\n          [Symbol(errored)]: null,\n          [Symbol(kHighWaterMark)]: 65536,\n          [Symbol(kRejectNonStandardBodyWrites)]: false,\n          [Symbol(kUniqueHeaders)]: null,\n          [Symbol(reentry)]: true,\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [writableFinished]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableLength]: [Getter],\n          [writableHighWaterMark]: [Getter],\n          [writableCorked]: [Getter],\n          [_headers]: [Getter/Setter],\n          [connection]: [Getter/Setter],\n          [socket]: [Getter/Setter],\n          [_headerNames]: [Getter/Setter],\n          headersSent: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter]\n        },\n        _eventsCount: 3,\n        timings: {\n          start: 1730787466539,\n          socket: 1730787466540,\n          lookup: 1730787466544,\n          connect: 1730787466557,\n          secureConnect: 1730787466663,\n          upload: 1730787466663,\n          response: 1730787466842,\n          end: 1730787466843,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          date: 'Tue, 05 Nov 2024 06:17:46 GMT',\n          'content-type': 'application/json',\n          'x-request-id': '86e94e35-2a9e-4c8a-8353-8d2491df57d3',\n          'set-cookie': [Array],\n          'sp-trace-id': 'be9d13f84376d473',\n          'x-envoy-upstream-service-time': '14',\n          server: 'envoy',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          'content-encoding': 'gzip',\n          vary: 'Accept-Encoding',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      _flushed: true,\n      _aborted: false,\n      _requestInitialized: true,\n      _jobs: [ [length]: 0 ],\n      _eventsCount: 10,\n      _requestOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined,\n        ALPNProtocols: undefined,\n        ca: undefined,\n        cert: undefined,\n        key: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: [Function: checkServerIdentity] {\n          [length]: 2,\n          [name]: 'checkServerIdentity',\n          [prototype]: [Object]\n        },\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        sigalgs: undefined,\n        sessionTimeout: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        crl: undefined,\n        lookup: undefined,\n        family: undefined,\n        agent: undefined,\n        setHost: true,\n        method: 'POST',\n        maxHeaderSize: undefined,\n        localAddress: undefined,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          'content-type': 'application/x-www-form-urlencoded',\n          'content-length': '566',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        createConnection: undefined,\n        timeout: undefined,\n        h2session: undefined\n      },\n      flush: [AsyncFunction (anonymous)] {\n        [length]: 0,\n        [name]: '',\n        [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [ip]: [Getter],\n      [isAborted]: [Getter],\n      [socket]: [Getter],\n      [downloadProgress]: [Getter],\n      [uploadProgress]: [Getter],\n      [timings]: [Getter],\n      [isFromCache]: [Getter],\n      [reusedSocket]: [Getter],\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [readableEnded]: [Getter]\n    },\n    isFromCache: false,\n    ip: '35.186.224.24',\n    retryCount: 0,\n    ok: false,\n    rawBody: <Buffer 7b 22 65 72 72 6f 72 22 3a 22 69 6e 76 61 6c 69 64 5f 67 72 61 6e 74 22 2c 22 65 72 72 6f 72 5f 64 65 73 63 72 69 70 74 69 6f 6e 22 3a 22 49 6e 76 61 ... 24 more bytes>,\n    body: {\n      error: 'invalid_grant',\n      error_description: 'Invalid authorization code'\n    },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [Symbol(kCallback)]: null,\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter]\n  },\n  [request]: <ref *6> Request {\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: undefined,\n      pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n      newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n      response: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      retry: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 2, [name]: '' }\n      },\n      request: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      redirect: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      uploadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      downloadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n      pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 0,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 1574906,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 0,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466746,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    constructor: undefined,\n    _noPipe: true,\n    options: {\n      request: undefined,\n      agent: { http: undefined, https: undefined, http2: undefined },\n      h2session: undefined,\n      decompress: true,\n      timeout: {\n        connect: undefined,\n        lookup: undefined,\n        read: undefined,\n        request: undefined,\n        response: undefined,\n        secureConnect: undefined,\n        send: undefined,\n        socket: undefined\n      },\n      prefixUrl: '',\n      body: 'grant_type=authorization_code&code=AQBqFC0dcFC0Bl9d6eg20RnX82uUP1Ftf6WbuhjE8yqXGVjN_0GUk2C2_wMU6ts1LBcVHcQCNBz07IoD7Yvqa-AB2eL-6hT1tDRPvzk9GV1R0rsnAvLFskBDOjqtaFQDkPGizNeF7iga8J4z0M8GZDKWAD0mL_hU6CU_do2-DLMmfPsnbl5LOtH2jxnzaM1qVdl96sFEWH3KQOVGRuLtNO3TJgYOeBgBStCL5JqjOztQbuowniPOCbg656vxtRXkqGz--Xm_p0h4grjo6PL_41pN0LS55-jER3xFzrfH2-J5h1l7VBmS5L1f34yunMViaC7pvHeEj72QYx2iAR61Bw&redirect_uri=https%3A%2F%2F127.0.0.1%3A3001%2Fspotify%2Fcallback&client_id=3286dfde20f84f31a435b98165238936&code_verifier=po_JoJHeUlfOyx0sSpDeIdeBTEQpmE2J49LRaNe0WbrH4kVPJSgMJ%7EFTiqe.VMyN',\n      form: undefined,\n      json: undefined,\n      cookieJar: undefined,\n      ignoreInvalidCookies: false,\n      searchParams: undefined,\n      dnsLookup: undefined,\n      dnsCache: undefined,\n      context: {},\n      hooks: {\n        init: [ [length]: 0 ],\n        beforeRequest: [ [length]: 0 ],\n        beforeError: [ [length]: 0 ],\n        beforeRedirect: [ [length]: 0 ],\n        beforeRetry: [ [length]: 0 ],\n        afterResponse: [ [length]: 0 ]\n      },\n      followRedirect: true,\n      maxRedirects: 10,\n      cache: undefined,\n      throwHttpErrors: true,\n      username: '',\n      password: '',\n      http2: false,\n      allowGetBody: false,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        'content-type': 'application/x-www-form-urlencoded',\n        'content-length': '566',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      methodRewriting: false,\n      dnsLookupIpVersion: undefined,\n      parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n      stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n      retry: {\n        limit: 2,\n        methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n        statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n        errorCodes: [\n          'ETIMEDOUT',\n          'ECONNRESET',\n          'EADDRINUSE',\n          'ECONNREFUSED',\n          'EPIPE',\n          'ENOTFOUND',\n          'ENETUNREACH',\n          'EAI_AGAIN',\n          [length]: 8\n        ],\n        maxRetryAfter: undefined,\n        calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n        backoffLimit: Infinity,\n        noise: 100\n      },\n      localAddress: undefined,\n      method: 'POST',\n      createConnection: undefined,\n      cacheOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined\n      },\n      https: {\n        alpnProtocols: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: undefined,\n        certificateAuthority: undefined,\n        key: undefined,\n        certificate: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        signatureAlgorithms: undefined,\n        tlsSessionLifetime: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        certificateRevocationLists: undefined\n      },\n      encoding: undefined,\n      resolveBodyOnly: false,\n      isStream: false,\n      responseType: 'json',\n      url: URL {\n        href: 'https://accounts.spotify.com/api/token',\n        origin: 'https://accounts.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'accounts.spotify.com',\n        hostname: 'accounts.spotify.com',\n        port: '',\n        pathname: '/api/token',\n        search: '',\n        searchParams: URLSearchParams {},\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://accounts.spotify.com/api/token',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 28,\n          pathname_start: 28,\n          search_start: 4294967295,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      pagination: {\n        transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n        paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n        filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n        shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n        countLimit: Infinity,\n        backoff: 0,\n        requestLimit: 10000,\n        stackAllItems: false\n      },\n      setHost: true,\n      maxHeaderSize: undefined,\n      signal: undefined,\n      enableUnixSockets: false\n    },\n    response: <ref *3> PassThrough {\n      _events: {\n        close: undefined,\n        error: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        prefinish: <ref *1> [Function: prefinish] {\n          [length]: 0,\n          [name]: 'prefinish',\n          [prototype]: [Object]\n        },\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n        unpipe: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 9996040,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 65536,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466504,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kWriteCbValue)]: null,\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n      _maxListeners: undefined,\n      _eventsCount: 4,\n      socket: [Getter/Setter],\n      httpVersionMajor: [Getter/Setter],\n      httpVersionMinor: [Getter/Setter],\n      httpVersion: [Getter/Setter],\n      complete: [Getter/Setter],\n      rawHeaders: [Getter/Setter],\n      rawTrailers: [Getter/Setter],\n      joinDuplicateHeaders: [Getter/Setter],\n      aborted: [Getter/Setter],\n      upgrade: [Getter/Setter],\n      url: [Getter/Setter],\n      method: [Getter/Setter],\n      statusCode: [Getter/Setter],\n      statusMessage: [Getter/Setter],\n      client: [Getter/Setter],\n      _consuming: [Getter/Setter],\n      _dumped: [Getter/Setter],\n      req: [Getter/Setter],\n      timings: [Getter/Setter],\n      headers: [Getter/Setter],\n      setTimeout: [Getter/Setter],\n      trailers: [Getter/Setter],\n      requestUrl: URL {\n        href: 'https://accounts.spotify.com/api/token',\n        origin: 'https://accounts.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'accounts.spotify.com',\n        hostname: 'accounts.spotify.com',\n        port: '',\n        pathname: '/api/token',\n        search: '',\n        searchParams: URLSearchParams {},\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://accounts.spotify.com/api/token',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 28,\n          pathname_start: 28,\n          search_start: 4294967295,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      request: [Circular *6],\n      isFromCache: false,\n      ip: '35.186.224.24',\n      retryCount: 0,\n      ok: false,\n      rawBody: <Buffer 7b 22 65 72 72 6f 72 22 3a 22 69 6e 76 61 6c 69 64 5f 67 72 61 6e 74 22 2c 22 65 72 72 6f 72 5f 64 65 73 63 72 69 70 74 69 6f 6e 22 3a 22 49 6e 76 61 ... 24 more bytes>,\n      body: {\n        error: 'invalid_grant',\n        error_description: 'Invalid authorization code'\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kCallback)]: null,\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter]\n    },\n    requestUrl: URL {\n      href: 'https://accounts.spotify.com/api/token',\n      origin: 'https://accounts.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'accounts.spotify.com',\n      hostname: 'accounts.spotify.com',\n      port: '',\n      pathname: '/api/token',\n      search: '',\n      searchParams: URLSearchParams {},\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://accounts.spotify.com/api/token',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 28,\n        pathname_start: 28,\n        search_start: 4294967295,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    retryCount: 0,\n    _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _downloadedSize: 74,\n    _uploadedSize: 566,\n    _stopReading: true,\n    _pipedServerResponses: Set(0) {},\n    _request: <ref *4> ClientRequest {\n      _events: [Object: null prototype] {\n        socket: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        error: [ [Function], [Function], [length]: 2 ],\n        connect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        continue: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        information: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        upgrade: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        finish: [Function: requestOnFinish] {\n          [length]: 0,\n          [name]: 'requestOnFinish',\n          [prototype]: [Object]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      outputData: [ [length]: 0 ],\n      outputSize: 0,\n      writable: true,\n      destroyed: true,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: false,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: '566',\n      _hasBody: true,\n      _trailer: '',\n      finished: true,\n      _headerSent: true,\n      _closed: true,\n      _header: 'POST /api/token HTTP/1.1\\r\\n' +\n        'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n        'content-type: application/x-www-form-urlencoded\\r\\n' +\n        'content-length: 566\\r\\n' +\n        'accept: application/json\\r\\n' +\n        'accept-encoding: gzip, deflate, br\\r\\n' +\n        'Host: accounts.spotify.com\\r\\n' +\n        'Connection: keep-alive\\r\\n' +\n        '\\r\\n',\n      _keepAliveTimeout: 0,\n      _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n      agent: Agent {\n        _events: [Object: null prototype] {\n          free: [Function],\n          newListener: [Function]\n        },\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        defaultPort: 443,\n        protocol: 'https:',\n        options: [Object: null prototype] {\n          keepAlive: true,\n          scheduling: 'lifo',\n          timeout: 5000,\n          noDelay: true,\n          path: null\n        },\n        requests: [Object: null prototype] {},\n        sockets: [Object: null prototype] {},\n        freeSockets: [Object: null prototype] {\n          'accounts.spotify.com:443:::::::::::::::::::::': [Array]\n        },\n        keepAliveMsecs: 1000,\n        keepAlive: true,\n        maxSockets: Infinity,\n        maxFreeSockets: 256,\n        scheduling: 'lifo',\n        maxTotalSockets: Infinity,\n        totalSocketCount: 1,\n        maxCachedSessions: 100,\n        _sessionCache: { map: [Object], list: [Array] },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false\n      },\n      socketPath: undefined,\n      method: 'POST',\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      joinDuplicateHeaders: undefined,\n      path: '/api/token',\n      _ended: true,\n      res: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'date',\n          'Tue, 05 Nov 2024 06:17:46 GMT',\n          'content-type',\n          'application/json',\n          'x-request-id',\n          '86e94e35-2a9e-4c8a-8353-8d2491df57d3',\n          'set-cookie',\n          '__Host-device_id=AQAAlHCdyJTo9XZ6rUnK-GmpR0AItDcZtN5CghRFqUkRg05kCviA5PImxc5XKkk77f8qFT8oFAAoG1VMzoXSOt6lE4FRD4Pf4Xs;Version=1;Path=/;Max-Age=2147483647;Secure;HttpOnly;SameSite=Lax',\n          'set-cookie',\n          'sp_tr=false;Version=1;Domain=accounts.spotify.com;Path=/;Secure;SameSite=Lax',\n          'sp-trace-id',\n          'be9d13f84376d473',\n          'x-envoy-upstream-service-time',\n          '14',\n          'server',\n          'envoy',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'content-encoding',\n          'gzip',\n          'vary',\n          'Accept-Encoding',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://accounts.spotify.com/api/token',\n        method: null,\n        statusCode: 400,\n        statusMessage: 'Bad Request',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'accounts.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'accounts.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [TimersList],\n            _idleStart: 61240,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 902,\n            [Symbol(triggerId)]: 898,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: [Circular *4],\n        _eventsCount: 3,\n        timings: {\n          start: 1730787466539,\n          socket: 1730787466540,\n          lookup: 1730787466544,\n          connect: 1730787466557,\n          secureConnect: 1730787466663,\n          upload: 1730787466663,\n          response: 1730787466842,\n          end: 1730787466843,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          date: 'Tue, 05 Nov 2024 06:17:46 GMT',\n          'content-type': 'application/json',\n          'x-request-id': '86e94e35-2a9e-4c8a-8353-8d2491df57d3',\n          'set-cookie': [Array],\n          'sp-trace-id': 'be9d13f84376d473',\n          'x-envoy-upstream-service-time': '14',\n          server: 'envoy',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          'content-encoding': 'gzip',\n          vary: 'Accept-Encoding',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      aborted: false,\n      timeoutCb: null,\n      upgradeOrConnect: false,\n      parser: null,\n      maxHeadersCount: null,\n      reusedSocket: false,\n      host: 'accounts.spotify.com',\n      protocol: 'https:',\n      timings: {\n        start: 1730787466539,\n        socket: 1730787466540,\n        lookup: 1730787466544,\n        connect: 1730787466557,\n        secureConnect: 1730787466663,\n        upload: 1730787466663,\n        response: 1730787466842,\n        end: 1730787466843,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 1,\n          dns: 4,\n          tcp: 13,\n          tls: 106,\n          request: 0,\n          firstByte: 179,\n          download: 1,\n          total: 304\n        }\n      },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n      [Symbol(kChunkedLength)]: 0,\n      [Symbol(kSocket)]: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 f0 79 32 15 a7 ec 3c e7 f1 88 b8 00 dc e2 ce af 2f 73 39 a6 24 b0 8b 90 35 2b d4 33 fa a8 15 dd 04 ... 2078 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'accounts.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'accounts.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [TimersList],\n          _idleStart: 61240,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 902,\n          [Symbol(triggerId)]: 898,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 f0 79 32 15 a7 ec 3c e7 f1 88 b8 00 dc e2 ce af 2f 73 39 a6 24 b0 8b 90 35 2b d4 33 fa a8 15 dd 04 ... 2078 more bytes>,\n          protocol: 'https:',\n          hostname: 'accounts.spotify.com',\n          hash: '',\n          search: '',\n          pathname: '/api/token',\n          path: null,\n          href: 'https://accounts.spotify.com/api/token',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'POST',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'accounts.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'accounts.spotify.com',\n          _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      [Symbol(kOutHeaders)]: [Object: null prototype] {\n        'user-agent': [\n          'user-agent',\n          'got (https://github.com/sindresorhus/got)',\n          [length]: 2\n        ],\n        'content-type': [\n          'content-type',\n          'application/x-www-form-urlencoded',\n          [length]: 2\n        ],\n        'content-length': [ 'content-length', '566', [length]: 2 ],\n        accept: [ 'accept', 'application/json', [length]: 2 ],\n        'accept-encoding': [ 'accept-encoding', 'gzip, deflate, br', [length]: 2 ],\n        host: [ 'Host', 'accounts.spotify.com', [length]: 2 ]\n      },\n      [Symbol(errored)]: null,\n      [Symbol(kHighWaterMark)]: 65536,\n      [Symbol(kRejectNonStandardBodyWrites)]: false,\n      [Symbol(kUniqueHeaders)]: null,\n      [Symbol(reentry)]: true,\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [writableFinished]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableLength]: [Getter],\n      [writableHighWaterMark]: [Getter],\n      [writableCorked]: [Getter],\n      [_headers]: [Getter/Setter],\n      [connection]: [Getter/Setter],\n      [socket]: [Getter/Setter],\n      [_headerNames]: [Getter/Setter],\n      headersSent: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter]\n    },\n    _responseSize: 74,\n    _bodySize: 566,\n    _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n    _isFromCache: false,\n    _cannotHaveBody: false,\n    _triggerRead: true,\n    _cancelTimeouts: [Function: cancelTimeouts] { [length]: 0, [name]: 'cancelTimeouts' },\n    _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _nativeResponse: <ref *5> IncomingMessage {\n      _events: {\n        close: undefined,\n        error: undefined,\n        data: undefined,\n        end: [Function: responseOnEnd] {\n          [length]: 0,\n          [name]: 'responseOnEnd',\n          [prototype]: [Object]\n        },\n        readable: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 110892924,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _maxListeners: undefined,\n      socket: null,\n      httpVersionMajor: 1,\n      httpVersionMinor: 1,\n      httpVersion: '1.1',\n      complete: true,\n      rawHeaders: [\n        'date',\n        'Tue, 05 Nov 2024 06:17:46 GMT',\n        'content-type',\n        'application/json',\n        'x-request-id',\n        '86e94e35-2a9e-4c8a-8353-8d2491df57d3',\n        'set-cookie',\n        '__Host-device_id=AQAAlHCdyJTo9XZ6rUnK-GmpR0AItDcZtN5CghRFqUkRg05kCviA5PImxc5XKkk77f8qFT8oFAAoG1VMzoXSOt6lE4FRD4Pf4Xs;Version=1;Path=/;Max-Age=2147483647;Secure;HttpOnly;SameSite=Lax',\n        'set-cookie',\n        'sp_tr=false;Version=1;Domain=accounts.spotify.com;Path=/;Secure;SameSite=Lax',\n        'sp-trace-id',\n        'be9d13f84376d473',\n        'x-envoy-upstream-service-time',\n        '14',\n        'server',\n        'envoy',\n        'strict-transport-security',\n        'max-age=31536000',\n        'x-content-type-options',\n        'nosniff',\n        'content-encoding',\n        'gzip',\n        'vary',\n        'Accept-Encoding',\n        'Via',\n        'HTTP/2 edgeproxy, 1.1 google',\n        'Alt-Svc',\n        'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'Transfer-Encoding',\n        'chunked',\n        [length]: 30\n      ],\n      rawTrailers: [ [length]: 0 ],\n      joinDuplicateHeaders: undefined,\n      aborted: false,\n      upgrade: false,\n      url: 'https://accounts.spotify.com/api/token',\n      method: null,\n      statusCode: 400,\n      statusMessage: 'Bad Request',\n      client: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 f0 79 32 15 a7 ec 3c e7 f1 88 b8 00 dc e2 ce af 2f 73 39 a6 24 b0 8b 90 35 2b d4 33 fa a8 15 dd 04 ... 2078 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'accounts.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'accounts.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [TimersList],\n          _idleStart: 61240,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 902,\n          [Symbol(triggerId)]: 898,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 f0 79 32 15 a7 ec 3c e7 f1 88 b8 00 dc e2 ce af 2f 73 39 a6 24 b0 8b 90 35 2b d4 33 fa a8 15 dd 04 ... 2078 more bytes>,\n          protocol: 'https:',\n          hostname: 'accounts.spotify.com',\n          hash: '',\n          search: '',\n          pathname: '/api/token',\n          path: null,\n          href: 'https://accounts.spotify.com/api/token',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'POST',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'accounts.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'accounts.spotify.com',\n          _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      _consuming: false,\n      _dumped: false,\n      req: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: '566',\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'POST /api/token HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'content-type: application/x-www-form-urlencoded\\r\\n' +\n          'content-length: 566\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: accounts.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'POST',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/api/token',\n        _ended: true,\n        res: [Circular *5],\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'accounts.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730787466539,\n          socket: 1730787466540,\n          lookup: 1730787466544,\n          connect: 1730787466557,\n          secureConnect: 1730787466663,\n          upload: 1730787466663,\n          response: 1730787466842,\n          end: 1730787466843,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: <ref *7> TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'accounts.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'accounts.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [TimersList],\n            _idleStart: 61240,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 902,\n            [Symbol(triggerId)]: 898,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          'content-type': [Array],\n          'content-length': [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _eventsCount: 3,\n      timings: {\n        start: 1730787466539,\n        socket: 1730787466540,\n        lookup: 1730787466544,\n        connect: 1730787466557,\n        secureConnect: 1730787466663,\n        upload: 1730787466663,\n        response: 1730787466842,\n        end: 1730787466843,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 1,\n          dns: 4,\n          tcp: 13,\n          tls: 106,\n          request: 0,\n          firstByte: 179,\n          download: 1,\n          total: 304\n        }\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kHeaders)]: {\n        date: 'Tue, 05 Nov 2024 06:17:46 GMT',\n        'content-type': 'application/json',\n        'x-request-id': '86e94e35-2a9e-4c8a-8353-8d2491df57d3',\n        'set-cookie': [\n          '__Host-device_id=AQAAlHCdyJTo9XZ6rUnK-GmpR0AItDcZtN5CghRFqUkRg05kCviA5PImxc5XKkk77f8qFT8oFAAoG1VMzoXSOt6lE4FRD4Pf4Xs;Version=1;Path=/;Max-Age=2147483647;Secure;HttpOnly;SameSite=Lax',\n          'sp_tr=false;Version=1;Domain=accounts.spotify.com;Path=/;Secure;SameSite=Lax',\n          [length]: 2\n        ],\n        'sp-trace-id': 'be9d13f84376d473',\n        'x-envoy-upstream-service-time': '14',\n        server: 'envoy',\n        'strict-transport-security': 'max-age=31536000',\n        'x-content-type-options': 'nosniff',\n        'content-encoding': 'gzip',\n        vary: 'Accept-Encoding',\n        via: 'HTTP/2 edgeproxy, 1.1 google',\n        'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'transfer-encoding': 'chunked'\n      },\n      [Symbol(kHeadersCount)]: 30,\n      [Symbol(kTrailers)]: null,\n      [Symbol(kTrailersCount)]: 0,\n      [connection]: [Getter/Setter],\n      [headers]: [Getter/Setter],\n      [headersDistinct]: [Getter/Setter],\n      [trailers]: [Getter/Setter],\n      [trailersDistinct]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readableEnded]: [Getter]\n    },\n    _flushed: true,\n    _aborted: false,\n    _requestInitialized: true,\n    _jobs: [ [length]: 0 ],\n    _eventsCount: 10,\n    _requestOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined,\n      ALPNProtocols: undefined,\n      ca: undefined,\n      cert: undefined,\n      key: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: <ref *8> [Function: checkServerIdentity] {\n        [length]: 2,\n        [name]: 'checkServerIdentity',\n        [prototype]: { [constructor]: [Circular *8] }\n      },\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      sigalgs: undefined,\n      sessionTimeout: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      crl: undefined,\n      lookup: undefined,\n      family: undefined,\n      agent: undefined,\n      setHost: true,\n      method: 'POST',\n      maxHeaderSize: undefined,\n      localAddress: undefined,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        'content-type': 'application/x-www-form-urlencoded',\n        'content-length': '566',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      createConnection: undefined,\n      timeout: undefined,\n      h2session: undefined\n    },\n    flush: [AsyncFunction (anonymous)] {\n      [length]: 0,\n      [name]: '',\n      [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n    },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [ip]: [Getter],\n    [isAborted]: [Getter],\n    [socket]: [Getter],\n    [downloadProgress]: [Getter],\n    [uploadProgress]: [Getter],\n    [timings]: [Getter],\n    [isFromCache]: [Getter],\n    [reusedSocket]: [Getter],\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter],\n    [readable]: [Getter/Setter],\n    [readableDidRead]: [Getter],\n    [readableAborted]: [Getter],\n    [readableHighWaterMark]: [Getter],\n    [readableBuffer]: [Getter],\n    [readableFlowing]: [Getter/Setter],\n    [readableLength]: [Getter],\n    [readableObjectMode]: [Getter],\n    [readableEncoding]: [Getter],\n    [errored]: [Getter],\n    [closed]: [Getter],\n    [readableEnded]: [Getter]\n  },\n  timings: {\n    start: 1730787466539,\n    socket: 1730787466540,\n    lookup: 1730787466544,\n    connect: 1730787466557,\n    secureConnect: 1730787466663,\n    upload: 1730787466663,\n    response: 1730787466842,\n    end: 1730787466843,\n    error: undefined,\n    abort: undefined,\n    phases: {\n      wait: 1,\n      dns: 4,\n      tcp: 13,\n      tls: 106,\n      request: 0,\n      firstByte: 179,\n      download: 1,\n      total: 304\n    }\n  },\n  name: 'HTTPError',\n  options: {\n    request: undefined,\n    agent: { http: undefined, https: undefined, http2: undefined },\n    h2session: undefined,\n    decompress: true,\n    timeout: {\n      connect: undefined,\n      lookup: undefined,\n      read: undefined,\n      request: undefined,\n      response: undefined,\n      secureConnect: undefined,\n      send: undefined,\n      socket: undefined\n    },\n    prefixUrl: '',\n    body: 'grant_type=authorization_code&code=AQBqFC0dcFC0Bl9d6eg20RnX82uUP1Ftf6WbuhjE8yqXGVjN_0GUk2C2_wMU6ts1LBcVHcQCNBz07IoD7Yvqa-AB2eL-6hT1tDRPvzk9GV1R0rsnAvLFskBDOjqtaFQDkPGizNeF7iga8J4z0M8GZDKWAD0mL_hU6CU_do2-DLMmfPsnbl5LOtH2jxnzaM1qVdl96sFEWH3KQOVGRuLtNO3TJgYOeBgBStCL5JqjOztQbuowniPOCbg656vxtRXkqGz--Xm_p0h4grjo6PL_41pN0LS55-jER3xFzrfH2-J5h1l7VBmS5L1f34yunMViaC7pvHeEj72QYx2iAR61Bw&redirect_uri=https%3A%2F%2F127.0.0.1%3A3001%2Fspotify%2Fcallback&client_id=3286dfde20f84f31a435b98165238936&code_verifier=po_JoJHeUlfOyx0sSpDeIdeBTEQpmE2J49LRaNe0WbrH4kVPJSgMJ%7EFTiqe.VMyN',\n    form: undefined,\n    json: undefined,\n    cookieJar: undefined,\n    ignoreInvalidCookies: false,\n    searchParams: undefined,\n    dnsLookup: undefined,\n    dnsCache: undefined,\n    context: {},\n    hooks: {\n      init: [ [length]: 0 ],\n      beforeRequest: [ [length]: 0 ],\n      beforeError: [ [length]: 0 ],\n      beforeRedirect: [ [length]: 0 ],\n      beforeRetry: [ [length]: 0 ],\n      afterResponse: [ [length]: 0 ]\n    },\n    followRedirect: true,\n    maxRedirects: 10,\n    cache: undefined,\n    throwHttpErrors: true,\n    username: '',\n    password: '',\n    http2: false,\n    allowGetBody: false,\n    headers: {\n      'user-agent': 'got (https://github.com/sindresorhus/got)',\n      'content-type': 'application/x-www-form-urlencoded',\n      'content-length': '566',\n      accept: 'application/json',\n      'accept-encoding': 'gzip, deflate, br'\n    },\n    methodRewriting: false,\n    dnsLookupIpVersion: undefined,\n    parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n    stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n    retry: {\n      limit: 2,\n      methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n      statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n      errorCodes: [\n        'ETIMEDOUT',\n        'ECONNRESET',\n        'EADDRINUSE',\n        'ECONNREFUSED',\n        'EPIPE',\n        'ENOTFOUND',\n        'ENETUNREACH',\n        'EAI_AGAIN',\n        [length]: 8\n      ],\n      maxRetryAfter: undefined,\n      calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n      backoffLimit: Infinity,\n      noise: 100\n    },\n    localAddress: undefined,\n    method: 'POST',\n    createConnection: undefined,\n    cacheOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined\n    },\n    https: {\n      alpnProtocols: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: undefined,\n      certificateAuthority: undefined,\n      key: undefined,\n      certificate: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      signatureAlgorithms: undefined,\n      tlsSessionLifetime: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      certificateRevocationLists: undefined\n    },\n    encoding: undefined,\n    resolveBodyOnly: false,\n    isStream: false,\n    responseType: 'json',\n    url: URL {\n      href: 'https://accounts.spotify.com/api/token',\n      origin: 'https://accounts.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'accounts.spotify.com',\n      hostname: 'accounts.spotify.com',\n      port: '',\n      pathname: '/api/token',\n      search: '',\n      searchParams: URLSearchParams {},\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://accounts.spotify.com/api/token',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 28,\n        pathname_start: 28,\n        search_start: 4294967295,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    pagination: {\n      transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n      paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n      filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n      shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n      countLimit: Infinity,\n      backoff: 0,\n      requestLimit: 10000,\n      stackAllItems: false\n    },\n    setHost: true,\n    maxHeaderSize: undefined,\n    signal: undefined,\n    enableUnixSockets: false\n  }\n}","timestamp":"2024-11-05 17:17:46"}
{"level":"debug","message":"Fetching user playlists","timestamp":"2024-11-05 17:18:15"}
{"level":"info","message":"Successfully fetched user playlists","timestamp":"2024-11-05 17:18:15"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 2I49GRL2KnsfJqYBe0ZW4K","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 64UK1FveXXXCgRvWo6s3MN","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 0PYXdWjA6eROn9ED7U6mtQ","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 37i9dQZF1EYkqdzj48dyYq","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 7BaA8W3HkUYIBkGtIjt4b0","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 0QtSQs2O68MyRlsZ9tq6sE","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 2rn14RzPbCBQcVsseYp05i","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 0DhcG5tPXD70HNnIHrmakD","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 0j9PaQZJgIa8cg8naiL0L3","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 5HWrBXeWVZIMwA4eBomMB1","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 4evD5B0yWyrZwr5BLdYgjG","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 52qFlr5ZL3r9XchHryMwSs","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 3YtnxrfGKBLOF0hr4BEtVI","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 5wgoxB4n1nm5gQUpZT32Cf","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 69WoZmG11lBZObk2hYsiYG","timestamp":"2024-11-05 17:18:15"}
{"level":"debug","message":"Fetching items for playlist 36hnX98ZuBZCAhEd1eywbC","timestamp":"2024-11-05 17:18:15"}
{"level":"info","message":"Successfully fetched items for playlist 64UK1FveXXXCgRvWo6s3MN","timestamp":"2024-11-05 17:18:15"}
{"level":"info","message":"Successfully fetched items for playlist 37i9dQZF1EYkqdzj48dyYq","timestamp":"2024-11-05 17:18:15"}
{"level":"info","message":"Successfully fetched items for playlist 0PYXdWjA6eROn9ED7U6mtQ","timestamp":"2024-11-05 17:18:16"}
{"level":"info","message":"Successfully fetched items for playlist 7BaA8W3HkUYIBkGtIjt4b0","timestamp":"2024-11-05 17:18:16"}
{"level":"info","message":"Successfully fetched items for playlist 69WoZmG11lBZObk2hYsiYG","timestamp":"2024-11-05 17:18:16"}
{"level":"info","message":"Successfully fetched items for playlist 2I49GRL2KnsfJqYBe0ZW4K","timestamp":"2024-11-05 17:18:16"}
{"level":"info","message":"Successfully fetched items for playlist 5wgoxB4n1nm5gQUpZT32Cf","timestamp":"2024-11-05 17:18:16"}
{"level":"info","message":"Successfully fetched items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 17:18:16"}
{"level":"info","message":"Successfully fetched items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 17:18:16"}
{"level":"info","message":"Successfully fetched items for playlist 3YtnxrfGKBLOF0hr4BEtVI","timestamp":"2024-11-05 17:18:16"}
{"level":"info","message":"Successfully fetched items for playlist 52qFlr5ZL3r9XchHryMwSs","timestamp":"2024-11-05 17:18:16"}
{"level":"info","message":"Successfully fetched items for playlist 0DhcG5tPXD70HNnIHrmakD","timestamp":"2024-11-05 17:18:16"}
{"level":"info","message":"Successfully fetched items for playlist 4evD5B0yWyrZwr5BLdYgjG","timestamp":"2024-11-05 17:18:16"}
{"level":"info","message":"Successfully fetched items for playlist 36hnX98ZuBZCAhEd1eywbC","timestamp":"2024-11-05 17:18:16"}
{"level":"info","message":"Successfully fetched items for playlist 0j9PaQZJgIa8cg8naiL0L3","timestamp":"2024-11-05 17:18:16"}
{"level":"info","message":"Successfully fetched items for playlist 5HWrBXeWVZIMwA4eBomMB1","timestamp":"2024-11-05 17:18:16"}
{"level":"info","message":"Successfully fetched items for playlist 0QtSQs2O68MyRlsZ9tq6sE","timestamp":"2024-11-05 17:18:16"}
{"level":"info","message":"Successfully fetched items for playlist 2rn14RzPbCBQcVsseYp05i","timestamp":"2024-11-05 17:18:16"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:19:35"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:19:36"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:21:12"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:26:00"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:26:01"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:26:07"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:27:09"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:28:20"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:28:21"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:29:23"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:29:26"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:29:48"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:29:58"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:32:01"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:32:14"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:33:15"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:34:23"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:34:27"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:34:34"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:34:37"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:34:39"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:34:41"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:34:55"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:36:09"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:36:58"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:36:59"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:37:01"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:37:07"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:37:11"}
{"level":"error","message":"Error fetching playlists with items: Error: Access token is missing.\n    at getUserPlaylistsWithItems (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:68:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 17:37:20"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylistsWithItems (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:68:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 17:37:20"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:53:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 17:37:20"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:53:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 17:37:20"}
{"level":"error","message":"Error fetching playlists with items: Error: Access token is missing.\n    at getUserPlaylistsWithItems (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:68:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 17:37:48"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylistsWithItems (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:68:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 17:37:48"}
{"level":"info","message":"Successfully retrieved and stored Spotify tokens","timestamp":"2024-11-05 17:37:59"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 17:38:08"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:46:44"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:46:49"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:53:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 17:48:54"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:53:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 17:48:54"}
{"level":"info","message":"Successfully retrieved and stored Spotify tokens","timestamp":"2024-11-05 17:49:02"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:50:22"}
{"level":"error","message":"Error fetching playlists with items: Error: Access token is missing.\n    at getUserPlaylistsWithItems (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:68:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 17:50:29"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylistsWithItems (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:68:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 17:50:29"}
{"level":"info","message":"Successfully retrieved and stored Spotify tokens","timestamp":"2024-11-05 17:50:36"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:52:29"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 17:58:08"}
{"level":"error","message":"Error occurred: Error: Invalid code or code verifier\n    at callback (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:35:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Invalid code or code verifier'\n}","timestamp":"2024-11-05 17:59:24"}
{"level":"error","message":"Error occurred: Error: Invalid code or code verifier\n    at callback (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:35:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Invalid code or code verifier'\n}","timestamp":"2024-11-05 17:59:24"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:00:00"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:00:09"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:00:27"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:00:29"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:00:32"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:00:34"}
{"level":"error","message":"Error fetching playlists with items: Error: Access token is missing.\n    at getUserPlaylistsWithItems (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:75:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:00:55"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylistsWithItems (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:75:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:00:55"}
{"level":"debug","message":"{\"access_token\":\"BQALmpQbYrYLHYDi9Ci5BWH8dR11lyC0_-bf474p5brIZx_FWOFZbl87Lyg7xdA8egZlVGffaDCa0VSpDyHN97hhI5fI_Ds4jGYdzLW4LqbbVoVB8-upDAYC6uD6WRJh6xuPHAcklQkq7pWIUwZvpUFLwqHRqHmaBs31lhw5SkPuFApf_zQgrFVofv_kXRSZorWszeK5Qs4a9kXNYL_UfxpUUSt3V8Es_22-X-UzdbqvSgJfZmj9p5IsHcuRNCKDiUs\",\"token_type\":\"Bearer\",\"expires_in\":3600,\"refresh_token\":\"AQAnvJcYndClArKzMQ-7ubl9tv90Qgfah51l4jet1imTI5jhEetmVvE6VW0wJWn-LyndmWkdOpRi39teU8GN_qAGEIXIl4LZ56NonlWOrvulcV-wGsxvPpY7nKuzqVvZ7WQ\",\"scope\":\"playlist-read-private user-library-read playlist-modify-public\"}","timestamp":"2024-11-05 18:01:04"}
{"level":"info","message":"Successfully retrieved and stored Spotify tokens","timestamp":"2024-11-05 18:01:04"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:60:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:02:13"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:60:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:02:13"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:02:29"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:60:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:02:32"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:60:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:02:32"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:60:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:02:35"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:60:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:02:35"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:60:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:02:37"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:60:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:02:37"}
{"level":"debug","message":"{\"access_token\":\"BQCzwNKlNm-tsADosx8cxJo-7PBXHAGFXVveBZScAaX3IcfECKUEtlPfwqWvF75KkSA7sAFe-iFsisj7r4BBv_j5SU7OCqvAatiqOzIqGb2cQ0eLmSwQeeAbX37L0Bve9BhtyINsdfpaG05hgof4_PmVqm2PiovtrGu8aORwKfjxfXdyRB5YutGP2JTTenP69M-7CW_thRtSVjgHr3vd2BFO5cEo4naRF1uMySACu_yXT_Qzu3gAIqDovop9II9nSA4\",\"token_type\":\"Bearer\",\"expires_in\":3600,\"refresh_token\":\"AQCpkHixPjqXz8qKCodPaEqHAtjM3KcdOwxS4mmVmpBSbtOTiNA9q18Jc0llYH1xxDXqclsC28Xe8apoK2X_vKOQeF21jsLhrbGep19hZBs6eEuDUs-T8ASWX203-TCpyR8\",\"scope\":\"playlist-read-private user-library-read playlist-modify-public\"}","timestamp":"2024-11-05 18:02:42"}
{"level":"info","message":"Successfully retrieved and stored Spotify tokens","timestamp":"2024-11-05 18:02:42"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:60:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:02:42"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:60:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:02:42"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:05:00"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:05:23"}
{"level":"debug","message":"Access token in getUserPlaylists: ","timestamp":"2024-11-05 18:05:27"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:56:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:05:27"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:56:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:05:27"}
{"level":"debug","message":"Access token in getUserPlaylists: ","timestamp":"2024-11-05 18:05:41"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:56:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:05:41"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:56:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:05:41"}
{"level":"debug","message":"Access token in getUserPlaylists: ","timestamp":"2024-11-05 18:05:44"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:56:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:05:44"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:56:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:05:44"}
{"level":"debug","message":"Retrieved tokens: {\"access_token\":\"BQCQ0tm7lSkl7xVokZGM0ySEFKHcEwg3vG6qkmkG5UM-Cm0tCvSCU3N8gJ3BhUIRdAwaEQdYs8rqE-Fya--HNsHiOU9KDsj6Yl-ELLQhouqftNRalU3EORo41YFqPykCrsKSzzbK6U6M82V0X-7JmZoKHcXyq511EGnkCwQRoD1FUIBNgpu-zyv1xvHSCd2G8BMQAHzuur2hAavHmnAxS_ZPmyfo0lMiBqjGtPdRag4tpQ7jym51hDHB_LgHqjW7kBQ\",\"token_type\":\"Bearer\",\"expires_in\":3600,\"refresh_token\":\"AQARcO6aTGV0L6DV7YYjtgZujGwPEOJ-FNqxna6Hw_8iDazBC1DaRB0eDamHacPKYL7QH2h-Sbw9EPhh-CLT-COieUF_lDARGMZDloKUYj7a-Qmz_b4PybM8vXWBp8CAIK8\",\"scope\":\"playlist-read-private user-library-read playlist-modify-public\"}","timestamp":"2024-11-05 18:05:48"}
{"level":"info","message":"Successfully retrieved and stored Spotify tokens","timestamp":"2024-11-05 18:05:48"}
{"level":"debug","message":"Access token in getUserPlaylists: BQCQ0tm7lSkl7xVokZGM0ySEFKHcEwg3vG6qkmkG5UM-Cm0tCvSCU3N8gJ3BhUIRdAwaEQdYs8rqE-Fya--HNsHiOU9KDsj6Yl-ELLQhouqftNRalU3EORo41YFqPykCrsKSzzbK6U6M82V0X-7JmZoKHcXyq511EGnkCwQRoD1FUIBNgpu-zyv1xvHSCd2G8BMQAHzuur2hAavHmnAxS_ZPmyfo0lMiBqjGtPdRag4tpQ7jym51hDHB_LgHqjW7kBQ","timestamp":"2024-11-05 18:05:48"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:05:48"}
{"level":"debug","message":"Access token in getUserPlaylists: BQCQ0tm7lSkl7xVokZGM0ySEFKHcEwg3vG6qkmkG5UM-Cm0tCvSCU3N8gJ3BhUIRdAwaEQdYs8rqE-Fya--HNsHiOU9KDsj6Yl-ELLQhouqftNRalU3EORo41YFqPykCrsKSzzbK6U6M82V0X-7JmZoKHcXyq511EGnkCwQRoD1FUIBNgpu-zyv1xvHSCd2G8BMQAHzuur2hAavHmnAxS_ZPmyfo0lMiBqjGtPdRag4tpQ7jym51hDHB_LgHqjW7kBQ","timestamp":"2024-11-05 18:05:59"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:05:59"}
{"level":"debug","message":"Access token in getUserPlaylists: BQCQ0tm7lSkl7xVokZGM0ySEFKHcEwg3vG6qkmkG5UM-Cm0tCvSCU3N8gJ3BhUIRdAwaEQdYs8rqE-Fya--HNsHiOU9KDsj6Yl-ELLQhouqftNRalU3EORo41YFqPykCrsKSzzbK6U6M82V0X-7JmZoKHcXyq511EGnkCwQRoD1FUIBNgpu-zyv1xvHSCd2G8BMQAHzuur2hAavHmnAxS_ZPmyfo0lMiBqjGtPdRag4tpQ7jym51hDHB_LgHqjW7kBQ","timestamp":"2024-11-05 18:08:31"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:08:32"}
{"level":"debug","message":"Access token in getUserPlaylists: BQCQ0tm7lSkl7xVokZGM0ySEFKHcEwg3vG6qkmkG5UM-Cm0tCvSCU3N8gJ3BhUIRdAwaEQdYs8rqE-Fya--HNsHiOU9KDsj6Yl-ELLQhouqftNRalU3EORo41YFqPykCrsKSzzbK6U6M82V0X-7JmZoKHcXyq511EGnkCwQRoD1FUIBNgpu-zyv1xvHSCd2G8BMQAHzuur2hAavHmnAxS_ZPmyfo0lMiBqjGtPdRag4tpQ7jym51hDHB_LgHqjW7kBQ","timestamp":"2024-11-05 18:08:54"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:08:54"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:09:27"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:09:37"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:09:53"}
{"level":"debug","message":"Retrieved tokens: {\"access_token\":\"BQC4_dICWI9u6BtGB-jG2bwSAlYEVCJVUlH_uuyTV4Q6XQEJnQbOjK14N84X1bp_YJHCr_We3lPuVZXR9I1vVLqH14NrJ9s_lvk7Dl_2HCJ8sU5cJ4kAiPkb0493ZKysDTPHHUCHlMtR699l-vJzOpv1PQBKMEQbhCEdpcNxvx4WfWezqQTtTC3uZtTORWR8VpBLJbeJeek_1IZVe94MTALK5eFQhbbffYMHeFNLLgtLMV20oTKzwLoUtJwLy13DW2M\",\"token_type\":\"Bearer\",\"expires_in\":3600,\"refresh_token\":\"AQBywvuB99i1x1TeDW0VRAg5pNRNrar6MbgUgxumt5CEMLuiilR4Tf0rpNeFY-W2BwbjMiRPSox1Ly3rmZ8__na_kneUb1i2bFfiFom1pOPrcR2eMUkM1isjAwYrUSg7lkg\",\"scope\":\"playlist-read-private user-library-read playlist-modify-public\"}","timestamp":"2024-11-05 18:10:16"}
{"level":"info","message":"Successfully retrieved and stored Spotify tokens","timestamp":"2024-11-05 18:10:16"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:10:34"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:11:02"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:11:05"}
{"level":"error","message":"Error occurred: ReferenceError: path is not defined\n    at <anonymous> (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/app.ts:47:18)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at jsonParser (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/body-parser/lib/types/json.js:113:7)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'path is not defined'\n}","timestamp":"2024-11-05 18:11:08"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:11:27"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:11:48"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:12:04"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:12:14"}
{"level":"debug","message":"Access token in getUserPlaylists: ","timestamp":"2024-11-05 18:12:20"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:56:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:12:20"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:56:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:12:20"}
{"level":"debug","message":"Retrieved tokens: {\"access_token\":\"BQBNiGgHUhO092MjnVS5Txh7YjGscYQvgnOYP0CNUsp5tYswypR5KAIJjbC343Wfq6jfQjTiBobafeoVp3-yxfSMMdeFpUrRrRSLUvRB3ZU1pquPm93pQFslbfd033kXPRzPs-oivAzGTKcxwaZ58rV0WPR1rMio7DYWOHMiMqEkmhnxCY6vlolg86xiOwIJo0C9pt75GR7EbLVfyi94iqQrPhbLVcu7hyrcR4iL0TkFhBuKuG9Nnsqr4uv_PyYlNlY\",\"token_type\":\"Bearer\",\"expires_in\":3600,\"refresh_token\":\"AQDvdBFXJthoFk47qCPxv_1jTUaiQ0moFgv_j2xISshlUpPHMXZs5wRIRVpWeZBjFAoi576_kpT3hEy2R7ixMBj-Mn7OTFHX98Rh_K4a-QrCJYmEbymnn34t9pcGtDHzWnw\",\"scope\":\"playlist-read-private user-library-read playlist-modify-public\"}","timestamp":"2024-11-05 18:12:30"}
{"level":"info","message":"Successfully retrieved and stored Spotify tokens","timestamp":"2024-11-05 18:12:30"}
{"level":"debug","message":"Access token in getUserPlaylists: BQBNiGgHUhO092MjnVS5Txh7YjGscYQvgnOYP0CNUsp5tYswypR5KAIJjbC343Wfq6jfQjTiBobafeoVp3-yxfSMMdeFpUrRrRSLUvRB3ZU1pquPm93pQFslbfd033kXPRzPs-oivAzGTKcxwaZ58rV0WPR1rMio7DYWOHMiMqEkmhnxCY6vlolg86xiOwIJo0C9pt75GR7EbLVfyi94iqQrPhbLVcu7hyrcR4iL0TkFhBuKuG9Nnsqr4uv_PyYlNlY","timestamp":"2024-11-05 18:12:30"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:12:31"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:14:31"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:14:53"}
{"level":"debug","message":"Access token in getUserPlaylists: ","timestamp":"2024-11-05 18:15:03"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:56:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:15:03"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:56:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:15:03"}
{"level":"error","message":"Error fetching playlists with items: Error: Access token is missing.\n    at getUserPlaylistsWithItems (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:72:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:15:05"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylistsWithItems (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:72:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:15:05"}
{"level":"debug","message":"Retrieved tokens: {\"access_token\":\"BQDGInZ0jpcN9hWO3UnGpDE_4dmTYWbIyEsDLcmCLMcs9tXPQU6_r2Ag5m_W_4ULt6BeZsJiqz6mV6wLDHUhAQ948RqEQ4bSC22cq-2LhPrW_usEYTbLqdjljDKACGzselEbCLsMVfPmxtn9Sc28YgYQgFCfVLzg1-r30TlCN9kuMrdP0CbC8gBmswAujAbji_enwwdWgWAn-2C7EjnUvblFpU3WGsVdshFaxsw6BMPyu89-pCTXV_9Ra-3B_6iXUU0\",\"token_type\":\"Bearer\",\"expires_in\":3600,\"refresh_token\":\"AQD8pycah0o2VGUMoAEaoEkv2aKTg4Kf-l18ABptOhVRk8QCsJ_kvRALuPtrdNJVabrwYRPgthZPHTV7g9AEFyuX56KchHxRcQ1M7k89E7esE8h38ZfxxKpgvw-W6lpNmXU\",\"scope\":\"playlist-read-private user-library-read playlist-modify-public\"}","timestamp":"2024-11-05 18:15:09"}
{"level":"info","message":"Successfully retrieved and stored Spotify tokens","timestamp":"2024-11-05 18:15:09"}
{"level":"debug","message":"Access token in getUserPlaylists: BQDGInZ0jpcN9hWO3UnGpDE_4dmTYWbIyEsDLcmCLMcs9tXPQU6_r2Ag5m_W_4ULt6BeZsJiqz6mV6wLDHUhAQ948RqEQ4bSC22cq-2LhPrW_usEYTbLqdjljDKACGzselEbCLsMVfPmxtn9Sc28YgYQgFCfVLzg1-r30TlCN9kuMrdP0CbC8gBmswAujAbji_enwwdWgWAn-2C7EjnUvblFpU3WGsVdshFaxsw6BMPyu89-pCTXV_9Ra-3B_6iXUU0","timestamp":"2024-11-05 18:15:09"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:15:09"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:15:09"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:19:22"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:19:23"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:19:25"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:19:42"}
{"level":"debug","message":"Access token in getUserPlaylists: ","timestamp":"2024-11-05 18:20:27"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:56:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:20:27"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:56:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:20:27"}
{"level":"debug","message":"Retrieved tokens: {\"access_token\":\"BQDMSWqy0EUjX1LHSnSsI3K3-NKvdh2BSypvMugTw_TlV-IIs9sder9i9SS5Xcp7W_iNQZCZh0IF6pGMzkXDF7M5ZS7oq8pRI-B_RuyTyx0UY0BSomfCLb3QkGyGnMSsyPuV5u1Gvqmus8XNwVxX55btnqr8yq4wIuQxkehZxpsyAGFQWeAttRFPfKJoPobB7sfD6IH9C1ob2Iv92TzS8lL_FYJdgJpJVJMh72UKwIGIbf9z4Li3oUtqKEel_-u1uYo\",\"token_type\":\"Bearer\",\"expires_in\":3600,\"refresh_token\":\"AQDco6xsE5jLG4PHOHPMHbXlcaXqZi_-dt55n9awU0Yh8ZqQkY4izsr4eMxaejcKe074vY25aOLyjTRpblTP-A2Bz1sXmfEKCU930gg5-vwwaNHCtIiKHYH2YN3bVCeswlk\",\"scope\":\"playlist-read-private user-library-read playlist-modify-public\"}","timestamp":"2024-11-05 18:20:33"}
{"level":"info","message":"Successfully retrieved and stored Spotify tokens","timestamp":"2024-11-05 18:20:33"}
{"level":"debug","message":"Access token in getUserPlaylists: BQDMSWqy0EUjX1LHSnSsI3K3-NKvdh2BSypvMugTw_TlV-IIs9sder9i9SS5Xcp7W_iNQZCZh0IF6pGMzkXDF7M5ZS7oq8pRI-B_RuyTyx0UY0BSomfCLb3QkGyGnMSsyPuV5u1Gvqmus8XNwVxX55btnqr8yq4wIuQxkehZxpsyAGFQWeAttRFPfKJoPobB7sfD6IH9C1ob2Iv92TzS8lL_FYJdgJpJVJMh72UKwIGIbf9z4Li3oUtqKEel_-u1uYo","timestamp":"2024-11-05 18:20:33"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:20:34"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:20:34"}
{"level":"info","message":"Fetched items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 18:20:36"}
{"level":"info","message":"Fetched items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 18:20:43"}
{"level":"info","message":"Fetched items for playlist 2I49GRL2KnsfJqYBe0ZW4K","timestamp":"2024-11-05 18:20:45"}
{"level":"info","message":"Fetched items for playlist 64UK1FveXXXCgRvWo6s3MN","timestamp":"2024-11-05 18:20:48"}
{"level":"info","message":"Fetched items for playlist 0PYXdWjA6eROn9ED7U6mtQ","timestamp":"2024-11-05 18:20:53"}
{"level":"info","message":"Fetched items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 18:21:23"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:21:51"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:22:27"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:22:30"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:22:36"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:22:41"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:22:48"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:22:51"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:22:52"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:22:56"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:22:58"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:22:59"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:23:00"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:23:06"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:23:10"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:23:19"}
{"level":"debug","message":"Access token in getUserPlaylists: ","timestamp":"2024-11-05 18:23:27"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:56:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:23:27"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:56:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:23:27"}
{"level":"debug","message":"Retrieved tokens: {\"access_token\":\"BQCmjekDh9mhQ7EF-LsmNK2hKbcL0MuDW1k5tpjDHOcS_th0zkumGFO6Xq49RNU0fTvpi89x-F9R6h_BPhswFlgsmJi2rJPlY_XpjvO7tRzNUzCkN5-KOOaLQob4Zi3Md33nT36tw7Swej1YTgmrFZ7O-4av3v_RBcBAWtlg_DH1mEnLox43s2ZROYjUV34Xs3hMWNQTIm1ZS3gIf_sixGMrVHUk_gJS10Us1zzjahb0SgjFUQSMdndPzcPeJkl2ASs\",\"token_type\":\"Bearer\",\"expires_in\":3600,\"refresh_token\":\"AQAmA_WRSJ1wPaerm67tfhlf_DSqnMdMGvMm-ohHBzgBPPYpU82RbXBhJMj-6Af6YzzQgtOr6dt6U7KRnYVsmFsLQ9zpGbcY4UgXnBy_q_iFAkojoHlcoTkPM7Xv5jLFd8A\",\"scope\":\"playlist-read-private user-library-read playlist-modify-public\"}","timestamp":"2024-11-05 18:23:33"}
{"level":"info","message":"Successfully retrieved and stored Spotify tokens","timestamp":"2024-11-05 18:23:33"}
{"level":"debug","message":"Access token in getUserPlaylists: BQCmjekDh9mhQ7EF-LsmNK2hKbcL0MuDW1k5tpjDHOcS_th0zkumGFO6Xq49RNU0fTvpi89x-F9R6h_BPhswFlgsmJi2rJPlY_XpjvO7tRzNUzCkN5-KOOaLQob4Zi3Md33nT36tw7Swej1YTgmrFZ7O-4av3v_RBcBAWtlg_DH1mEnLox43s2ZROYjUV34Xs3hMWNQTIm1ZS3gIf_sixGMrVHUk_gJS10Us1zzjahb0SgjFUQSMdndPzcPeJkl2ASs","timestamp":"2024-11-05 18:23:33"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:23:34"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:23:34"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 18:23:38"}
{"level":"debug","message":"Access token in getUserPlaylists: BQCmjekDh9mhQ7EF-LsmNK2hKbcL0MuDW1k5tpjDHOcS_th0zkumGFO6Xq49RNU0fTvpi89x-F9R6h_BPhswFlgsmJi2rJPlY_XpjvO7tRzNUzCkN5-KOOaLQob4Zi3Md33nT36tw7Swej1YTgmrFZ7O-4av3v_RBcBAWtlg_DH1mEnLox43s2ZROYjUV34Xs3hMWNQTIm1ZS3gIf_sixGMrVHUk_gJS10Us1zzjahb0SgjFUQSMdndPzcPeJkl2ASs","timestamp":"2024-11-05 18:24:54"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:24:55"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:24:55"}
{"level":"info","message":"Fetched 240 items for playlist 2rn14RzPbCBQcVsseYp05i","timestamp":"2024-11-05 18:25:01"}
{"level":"debug","message":"Access token in getUserPlaylists: BQCmjekDh9mhQ7EF-LsmNK2hKbcL0MuDW1k5tpjDHOcS_th0zkumGFO6Xq49RNU0fTvpi89x-F9R6h_BPhswFlgsmJi2rJPlY_XpjvO7tRzNUzCkN5-KOOaLQob4Zi3Md33nT36tw7Swej1YTgmrFZ7O-4av3v_RBcBAWtlg_DH1mEnLox43s2ZROYjUV34Xs3hMWNQTIm1ZS3gIf_sixGMrVHUk_gJS10Us1zzjahb0SgjFUQSMdndPzcPeJkl2ASs","timestamp":"2024-11-05 18:25:44"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:25:44"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:25:44"}
{"level":"info","message":"Fetched 240 items for playlist 2rn14RzPbCBQcVsseYp05i","timestamp":"2024-11-05 18:25:49"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 18:26:09"}
{"level":"debug","message":"Access token in getUserPlaylists: BQCmjekDh9mhQ7EF-LsmNK2hKbcL0MuDW1k5tpjDHOcS_th0zkumGFO6Xq49RNU0fTvpi89x-F9R6h_BPhswFlgsmJi2rJPlY_XpjvO7tRzNUzCkN5-KOOaLQob4Zi3Md33nT36tw7Swej1YTgmrFZ7O-4av3v_RBcBAWtlg_DH1mEnLox43s2ZROYjUV34Xs3hMWNQTIm1ZS3gIf_sixGMrVHUk_gJS10Us1zzjahb0SgjFUQSMdndPzcPeJkl2ASs","timestamp":"2024-11-05 18:33:33"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:33:33"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:33:33"}
{"level":"debug","message":"Access token in getUserPlaylists: BQCmjekDh9mhQ7EF-LsmNK2hKbcL0MuDW1k5tpjDHOcS_th0zkumGFO6Xq49RNU0fTvpi89x-F9R6h_BPhswFlgsmJi2rJPlY_XpjvO7tRzNUzCkN5-KOOaLQob4Zi3Md33nT36tw7Swej1YTgmrFZ7O-4av3v_RBcBAWtlg_DH1mEnLox43s2ZROYjUV34Xs3hMWNQTIm1ZS3gIf_sixGMrVHUk_gJS10Us1zzjahb0SgjFUQSMdndPzcPeJkl2ASs","timestamp":"2024-11-05 18:35:10"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:35:11"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:35:11"}
{"level":"debug","message":"Access token in getUserPlaylists: BQCmjekDh9mhQ7EF-LsmNK2hKbcL0MuDW1k5tpjDHOcS_th0zkumGFO6Xq49RNU0fTvpi89x-F9R6h_BPhswFlgsmJi2rJPlY_XpjvO7tRzNUzCkN5-KOOaLQob4Zi3Md33nT36tw7Swej1YTgmrFZ7O-4av3v_RBcBAWtlg_DH1mEnLox43s2ZROYjUV34Xs3hMWNQTIm1ZS3gIf_sixGMrVHUk_gJS10Us1zzjahb0SgjFUQSMdndPzcPeJkl2ASs","timestamp":"2024-11-05 18:38:10"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:38:10"}
{"level":"info","message":"Fetched user playlists","timestamp":"2024-11-05 18:38:10"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 18:38:17"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 18:38:18"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:40:59"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:41:14"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:41:27"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:52:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:41:33"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:52:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:41:33"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:52:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:41:39"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:52:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:41:39"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:52:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:41:39"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:52:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:41:39"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:52:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:41:39"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:52:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:41:39"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:41:56"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:52:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:42:00"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:52:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 18:42:00"}
{"level":"debug","message":"Retrieved tokens: {\"access_token\":\"BQBc7ojFPjN2Sf6ILiRYkhOwCNrWQmCwo8mcWQhugeeVHLt878IX_CgZB_7qnSYYnLPALVXXTfIftBqbEWkoVEej1Bgj4U_qyPoGnFtJYcy4crJzCD2mYgM-sgopWZ5ldgIdy9P08I3i0-5Vm7gNe1WGssweNci_QNlylTl1DFndlUyY4mqL8yjE1VXM5lBHnQetT0ehLpYowd7NUVO3vXNt5XTA5ciW-XwhptthX3UfOwe2of78gV5Fus9YlZRODYo\",\"token_type\":\"Bearer\",\"expires_in\":3600,\"refresh_token\":\"AQBL-HRFj2SAQNzkjYUioAdZ3x87TnDBlaDrK8bh3dKh07deT0P8yoCOhiETUAVdqRnvQaPdvIgRP2mVpFHg5jNmNUp2nQyHZn_6tjDydu05cvGH7ntk79r0kemZ3I7Wt1U\",\"scope\":\"playlist-read-private user-library-read playlist-modify-public\"}","timestamp":"2024-11-05 18:42:06"}
{"level":"info","message":"Successfully retrieved and stored Spotify tokens","timestamp":"2024-11-05 18:42:06"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 18:42:06"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 18:42:13"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 18:43:40"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 18:43:46"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 18:44:13"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 18:44:18"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 18:46:20"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 18:46:26"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 18:46:38"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 18:48:35"}
{"level":"debug","message":"Retrieved tokens: {\"access_token\":\"BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\",\"token_type\":\"Bearer\",\"expires_in\":3600,\"refresh_token\":\"AQD8JGL3wauEpZdb4F0ozFpVmQ2bqDitutGs_Bba3t8pQi9CJ0uGS_9zIaMOAEThnmNGf_4vVNSf4aarD24jttljzLQ1IjCnn7zVDC1LadqCnHn5RcMt9ayXEtfq2wBBswg\",\"scope\":\"playlist-read-private user-library-read playlist-modify-public\"}","timestamp":"2024-11-05 18:48:48"}
{"level":"info","message":"Successfully retrieved and stored Spotify tokens","timestamp":"2024-11-05 18:48:48"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 18:49:12"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 18:49:45"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 18:49:49"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 18:53:20"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 18:53:27"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 18:53:30"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 18:53:31"}
{"level":"info","message":"Fetched 101 items for playlist 36hnX98ZuBZCAhEd1eywbC","timestamp":"2024-11-05 18:53:39"}
{"level":"info","message":"Fetched 51 items for playlist 5wgoxB4n1nm5gQUpZT32Cf","timestamp":"2024-11-05 18:56:06"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 18:56:19"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 18:56:27"}
{"level":"info","message":"Fetched 141 items for playlist 5HWrBXeWVZIMwA4eBomMB1","timestamp":"2024-11-05 18:58:17"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 18:58:26"}
{"level":"info","message":"Fetched 703 items for playlist 0QtSQs2O68MyRlsZ9tq6sE","timestamp":"2024-11-05 18:58:56"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 18:59:07"}
{"level":"info","message":"Fetched 703 items for playlist 0QtSQs2O68MyRlsZ9tq6sE","timestamp":"2024-11-05 18:59:33"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:00:19"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:00:32"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:03:06"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:03:10"}
{"level":"info","message":"Fetched 39 items for playlist 2I49GRL2KnsfJqYBe0ZW4K","timestamp":"2024-11-05 19:04:18"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:05:01"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:05:06"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:07:38"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:07:42"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:10:38"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:10:46"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:11:02"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:12:38"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 19:12:49"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:16:04"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:16:48"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:18:02"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 19:18:07"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:18:08"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:18:13"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:19:39"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 19:20:02"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:20:27"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:20:31"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:22:43"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:22:48"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:23:10"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 19:23:17"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:24:08"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 19:24:14"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:28:25"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:28:29"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:28:56"}
{"level":"info","message":"Fetched 39 items for playlist 2I49GRL2KnsfJqYBe0ZW4K","timestamp":"2024-11-05 19:29:01"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:29:11"}
{"level":"info","message":"Fetched 15 items for playlist 0PYXdWjA6eROn9ED7U6mtQ","timestamp":"2024-11-05 19:29:18"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:32:16"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 19:32:23"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:32:30"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:32:51"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:33:03"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:33:24"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:33:34"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:33:43"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:33:47"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:33:59"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:34:17"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:34:38"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:34:45"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:34:51"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:34:55"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:35:19"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:35:22"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:35:35"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:35:38"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:36:47"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:37:02"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:38:38"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:38:42"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:39:04"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 19:39:08"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:39:22"}
{"level":"info","message":"Fetched 39 items for playlist 2I49GRL2KnsfJqYBe0ZW4K","timestamp":"2024-11-05 19:39:23"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:39:39"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 19:39:43"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:40:33"}
{"level":"info","message":"Fetched 15 items for playlist 0PYXdWjA6eROn9ED7U6mtQ","timestamp":"2024-11-05 19:40:35"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:40:52"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 19:40:59"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 19:41:03"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:41:55"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:41:59"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:42:10"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:42:13"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:42:31"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:42:40"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:43:13"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:43:18"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:45:06"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:45:09"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:46:21"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:46:45"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:46:46"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:47:08"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:47:14"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:47:23"}
{"level":"info","message":"Fetched 39 items for playlist 2I49GRL2KnsfJqYBe0ZW4K","timestamp":"2024-11-05 19:48:29"}
{"level":"error","message":"Error fetching playlists: <ref *2> HTTPError: Response code 401 (Unauthorized)\n    at Request.<anonymous> (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/as-promise/index.js:92:42)\n    at Object.onceWrapper (node:events:635:26)\n    at Request.emit (node:events:532:35)\n    at Request._onResponseBase (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:609:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Request._onResponse (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:649:13) {\n  [stack]: [Getter/Setter],\n  [message]: 'Response code 401 (Unauthorized)',\n  [cause]: {},\n  input: undefined,\n  code: 'ERR_NON_2XX_3XX_RESPONSE',\n  [response]: <ref *3> PassThrough {\n    _events: {\n      close: undefined,\n      error: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 1, [name]: '' }\n      },\n      prefinish: <ref *1> [Function: prefinish] {\n        [length]: 0,\n        [name]: 'prefinish',\n        [prototype]: { [constructor]: [Circular *1] }\n      },\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n      unpipe: undefined,\n      aborted: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 0, [name]: '' }\n      }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 65536,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 9996040,\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 65536,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466504,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kWriteCbValue)]: null,\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n    _maxListeners: undefined,\n    _eventsCount: 4,\n    socket: [Getter/Setter],\n    httpVersionMajor: [Getter/Setter],\n    httpVersionMinor: [Getter/Setter],\n    httpVersion: [Getter/Setter],\n    complete: [Getter/Setter],\n    rawHeaders: [Getter/Setter],\n    rawTrailers: [Getter/Setter],\n    joinDuplicateHeaders: [Getter/Setter],\n    aborted: [Getter/Setter],\n    upgrade: [Getter/Setter],\n    url: [Getter/Setter],\n    method: [Getter/Setter],\n    statusCode: [Getter/Setter],\n    statusMessage: [Getter/Setter],\n    client: [Getter/Setter],\n    _consuming: [Getter/Setter],\n    _dumped: [Getter/Setter],\n    req: [Getter/Setter],\n    timings: [Getter/Setter],\n    headers: [Getter/Setter],\n    setTimeout: [Getter/Setter],\n    trailers: [Getter/Setter],\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    request: Request {\n      _events: {\n        close: undefined,\n        error: undefined,\n        prefinish: undefined,\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: undefined,\n        pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n        newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n        response: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        retry: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        request: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        redirect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        uploadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        downloadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n        pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 0,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 1574906,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 0,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466746,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      constructor: undefined,\n      _noPipe: true,\n      options: {\n        request: undefined,\n        agent: { http: undefined, https: undefined, http2: undefined },\n        h2session: undefined,\n        decompress: true,\n        timeout: {\n          connect: undefined,\n          lookup: undefined,\n          read: undefined,\n          request: undefined,\n          response: undefined,\n          secureConnect: undefined,\n          send: undefined,\n          socket: undefined\n        },\n        prefixUrl: '',\n        body: undefined,\n        form: undefined,\n        json: undefined,\n        cookieJar: undefined,\n        ignoreInvalidCookies: false,\n        searchParams: undefined,\n        dnsLookup: undefined,\n        dnsCache: undefined,\n        context: {},\n        hooks: {\n          init: [ [length]: 0 ],\n          beforeRequest: [ [length]: 0 ],\n          beforeError: [ [length]: 0 ],\n          beforeRedirect: [ [length]: 0 ],\n          beforeRetry: [ [length]: 0 ],\n          afterResponse: [ [length]: 0 ]\n        },\n        followRedirect: true,\n        maxRedirects: 10,\n        cache: undefined,\n        throwHttpErrors: true,\n        username: '',\n        password: '',\n        http2: false,\n        allowGetBody: false,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        methodRewriting: false,\n        dnsLookupIpVersion: undefined,\n        parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n        stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n        retry: {\n          limit: 2,\n          methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n          statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n          errorCodes: [\n            'ETIMEDOUT',\n            'ECONNRESET',\n            'EADDRINUSE',\n            'ECONNREFUSED',\n            'EPIPE',\n            'ENOTFOUND',\n            'ENETUNREACH',\n            'EAI_AGAIN',\n            [length]: 8\n          ],\n          maxRetryAfter: undefined,\n          calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n          backoffLimit: Infinity,\n          noise: 100\n        },\n        localAddress: undefined,\n        method: 'GET',\n        createConnection: undefined,\n        cacheOptions: {\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined\n        },\n        https: {\n          alpnProtocols: undefined,\n          rejectUnauthorized: undefined,\n          checkServerIdentity: undefined,\n          certificateAuthority: undefined,\n          key: undefined,\n          certificate: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          ciphers: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          signatureAlgorithms: undefined,\n          tlsSessionLifetime: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          certificateRevocationLists: undefined\n        },\n        encoding: undefined,\n        resolveBodyOnly: false,\n        isStream: false,\n        responseType: 'json',\n        url: URL {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          origin: 'https://api.spotify.com',\n          protocol: 'https:',\n          username: '',\n          password: '',\n          host: 'api.spotify.com',\n          hostname: 'api.spotify.com',\n          port: '',\n          pathname: '/v1/me/playlists',\n          search: '?limit=50',\n          searchParams: URLSearchParams { 'limit' => '50' },\n          hash: '',\n          [Symbol(context)]: URLContext {\n            href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n            protocol_end: 6,\n            username_end: 8,\n            host_start: 8,\n            host_end: 23,\n            pathname_start: 23,\n            search_start: 39,\n            hash_start: 4294967295,\n            port: 4294967295,\n            scheme_type: 2,\n            [hasPort]: [Getter],\n            [hasSearch]: [Getter],\n            [hasHash]: [Getter]\n          }\n        },\n        pagination: {\n          transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n          paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n          filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n          shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n          countLimit: Infinity,\n          backoff: 0,\n          requestLimit: 10000,\n          stackAllItems: false\n        },\n        setHost: true,\n        maxHeaderSize: undefined,\n        signal: undefined,\n        enableUnixSockets: false\n      },\n      response: [Circular *3],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      retryCount: 0,\n      _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _downloadedSize: 81,\n      _uploadedSize: 0,\n      _stopReading: true,\n      _pipedServerResponses: Set(0) {},\n      _request: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: IncomingMessage {\n          _events: [Object],\n          _readableState: [ReadableState],\n          _maxListeners: undefined,\n          socket: null,\n          httpVersionMajor: 1,\n          httpVersionMinor: 1,\n          httpVersion: '1.1',\n          complete: true,\n          rawHeaders: [Array],\n          rawTrailers: [Array],\n          joinDuplicateHeaders: undefined,\n          aborted: false,\n          upgrade: false,\n          url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          method: null,\n          statusCode: 401,\n          statusMessage: 'Unauthorized',\n          client: [TLSSocket],\n          _consuming: false,\n          _dumped: false,\n          req: [Circular *4],\n          _eventsCount: 3,\n          timings: [Object],\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kHeaders)]: [Object],\n          [Symbol(kHeadersCount)]: 30,\n          [Symbol(kTrailers)]: null,\n          [Symbol(kTrailersCount)]: 0,\n          [connection]: [Getter/Setter],\n          [headers]: [Getter/Setter],\n          [headersDistinct]: [Getter/Setter],\n          [trailers]: [Getter/Setter],\n          [trailersDistinct]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableDidRead]: [Getter],\n          [readableAborted]: [Getter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readableEnded]: [Getter]\n        },\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796601585,\n          socket: 1730796601585,\n          lookup: 1730796601586,\n          connect: 1730796601687,\n          secureConnect: 1730796601811,\n          upload: 1730796601811,\n          response: 1730796602053,\n          end: 1730796602057,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3687155,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88477,\n            [Symbol(triggerId)]: 88473,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _responseSize: 81,\n      _bodySize: 0,\n      _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n      _isFromCache: false,\n      _cannotHaveBody: true,\n      _triggerRead: true,\n      _cancelTimeouts: [Function: cancelTimeouts] {\n        [length]: 0,\n        [name]: 'cancelTimeouts'\n      },\n      _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _nativeResponse: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:01 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3687155,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88477,\n            [Symbol(triggerId)]: 88473,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: <ref *4> ClientRequest {\n          _events: [Object: null prototype],\n          _eventsCount: 8,\n          _maxListeners: undefined,\n          outputData: [Array],\n          outputSize: 0,\n          writable: true,\n          destroyed: true,\n          _last: true,\n          chunkedEncoding: false,\n          shouldKeepAlive: true,\n          maxRequestsOnConnectionReached: false,\n          _defaultKeepAlive: true,\n          useChunkedEncodingByDefault: false,\n          sendDate: false,\n          _removedConnection: false,\n          _removedContLen: false,\n          _removedTE: false,\n          strictContentLength: false,\n          _contentLength: 0,\n          _hasBody: true,\n          _trailer: '',\n          finished: true,\n          _headerSent: true,\n          _closed: true,\n          _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n            'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n            'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n            'accept: application/json\\r\\n' +\n            'accept-encoding: gzip, deflate, br\\r\\n' +\n            'Host: api.spotify.com\\r\\n' +\n            'Connection: keep-alive\\r\\n' +\n            '\\r\\n',\n          _keepAliveTimeout: 0,\n          _onPendingData: [Function],\n          agent: [Agent],\n          socketPath: undefined,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          insecureHTTPParser: undefined,\n          joinDuplicateHeaders: undefined,\n          path: '/v1/me/playlists?limit=50',\n          _ended: true,\n          res: [Circular *5],\n          aborted: false,\n          timeoutCb: null,\n          upgradeOrConnect: false,\n          parser: null,\n          maxHeadersCount: null,\n          reusedSocket: false,\n          host: 'api.spotify.com',\n          protocol: 'https:',\n          timings: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(kNeedDrain)]: false,\n          [Symbol(corked)]: 0,\n          [Symbol(kChunkedBuffer)]: [Array],\n          [Symbol(kChunkedLength)]: 0,\n          [Symbol(kSocket)]: [TLSSocket],\n          [Symbol(kOutHeaders)]: [Object: null prototype],\n          [Symbol(errored)]: null,\n          [Symbol(kHighWaterMark)]: 65536,\n          [Symbol(kRejectNonStandardBodyWrites)]: false,\n          [Symbol(kUniqueHeaders)]: null,\n          [Symbol(reentry)]: true,\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [writableFinished]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableLength]: [Getter],\n          [writableHighWaterMark]: [Getter],\n          [writableCorked]: [Getter],\n          [_headers]: [Getter/Setter],\n          [connection]: [Getter/Setter],\n          [socket]: [Getter/Setter],\n          [_headerNames]: [Getter/Setter],\n          headersSent: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter]\n        },\n        _eventsCount: 3,\n        timings: {\n          start: 1730796601585,\n          socket: 1730796601585,\n          lookup: 1730796601586,\n          connect: 1730796601687,\n          secureConnect: 1730796601811,\n          upload: 1730796601811,\n          response: 1730796602053,\n          end: 1730796602057,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:01 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      _flushed: true,\n      _aborted: false,\n      _requestInitialized: true,\n      _jobs: [ [length]: 0 ],\n      _eventsCount: 10,\n      _requestOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined,\n        ALPNProtocols: undefined,\n        ca: undefined,\n        cert: undefined,\n        key: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: [Function: checkServerIdentity] {\n          [length]: 2,\n          [name]: 'checkServerIdentity',\n          [prototype]: [Object]\n        },\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        sigalgs: undefined,\n        sessionTimeout: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        crl: undefined,\n        lookup: undefined,\n        family: undefined,\n        agent: undefined,\n        setHost: true,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        localAddress: undefined,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        createConnection: undefined,\n        timeout: undefined,\n        h2session: undefined\n      },\n      flush: [AsyncFunction (anonymous)] {\n        [length]: 0,\n        [name]: '',\n        [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [ip]: [Getter],\n      [isAborted]: [Getter],\n      [socket]: [Getter],\n      [downloadProgress]: [Getter],\n      [uploadProgress]: [Getter],\n      [timings]: [Getter],\n      [isFromCache]: [Getter],\n      [reusedSocket]: [Getter],\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [readableEnded]: [Getter]\n    },\n    isFromCache: false,\n    ip: '35.186.224.24',\n    retryCount: 0,\n    ok: false,\n    rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n    body: { error: { status: 401, message: 'The access token expired' } },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [Symbol(kCallback)]: null,\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter]\n  },\n  [request]: <ref *6> Request {\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: undefined,\n      pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n      newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n      response: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      retry: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 2, [name]: '' }\n      },\n      request: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      redirect: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      uploadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      downloadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n      pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 0,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 1574906,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 0,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466746,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    constructor: undefined,\n    _noPipe: true,\n    options: {\n      request: undefined,\n      agent: { http: undefined, https: undefined, http2: undefined },\n      h2session: undefined,\n      decompress: true,\n      timeout: {\n        connect: undefined,\n        lookup: undefined,\n        read: undefined,\n        request: undefined,\n        response: undefined,\n        secureConnect: undefined,\n        send: undefined,\n        socket: undefined\n      },\n      prefixUrl: '',\n      body: undefined,\n      form: undefined,\n      json: undefined,\n      cookieJar: undefined,\n      ignoreInvalidCookies: false,\n      searchParams: undefined,\n      dnsLookup: undefined,\n      dnsCache: undefined,\n      context: {},\n      hooks: {\n        init: [ [length]: 0 ],\n        beforeRequest: [ [length]: 0 ],\n        beforeError: [ [length]: 0 ],\n        beforeRedirect: [ [length]: 0 ],\n        beforeRetry: [ [length]: 0 ],\n        afterResponse: [ [length]: 0 ]\n      },\n      followRedirect: true,\n      maxRedirects: 10,\n      cache: undefined,\n      throwHttpErrors: true,\n      username: '',\n      password: '',\n      http2: false,\n      allowGetBody: false,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      methodRewriting: false,\n      dnsLookupIpVersion: undefined,\n      parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n      stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n      retry: {\n        limit: 2,\n        methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n        statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n        errorCodes: [\n          'ETIMEDOUT',\n          'ECONNRESET',\n          'EADDRINUSE',\n          'ECONNREFUSED',\n          'EPIPE',\n          'ENOTFOUND',\n          'ENETUNREACH',\n          'EAI_AGAIN',\n          [length]: 8\n        ],\n        maxRetryAfter: undefined,\n        calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n        backoffLimit: Infinity,\n        noise: 100\n      },\n      localAddress: undefined,\n      method: 'GET',\n      createConnection: undefined,\n      cacheOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined\n      },\n      https: {\n        alpnProtocols: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: undefined,\n        certificateAuthority: undefined,\n        key: undefined,\n        certificate: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        signatureAlgorithms: undefined,\n        tlsSessionLifetime: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        certificateRevocationLists: undefined\n      },\n      encoding: undefined,\n      resolveBodyOnly: false,\n      isStream: false,\n      responseType: 'json',\n      url: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      pagination: {\n        transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n        paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n        filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n        shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n        countLimit: Infinity,\n        backoff: 0,\n        requestLimit: 10000,\n        stackAllItems: false\n      },\n      setHost: true,\n      maxHeaderSize: undefined,\n      signal: undefined,\n      enableUnixSockets: false\n    },\n    response: <ref *3> PassThrough {\n      _events: {\n        close: undefined,\n        error: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        prefinish: <ref *1> [Function: prefinish] {\n          [length]: 0,\n          [name]: 'prefinish',\n          [prototype]: [Object]\n        },\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n        unpipe: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 9996040,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 65536,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466504,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kWriteCbValue)]: null,\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n      _maxListeners: undefined,\n      _eventsCount: 4,\n      socket: [Getter/Setter],\n      httpVersionMajor: [Getter/Setter],\n      httpVersionMinor: [Getter/Setter],\n      httpVersion: [Getter/Setter],\n      complete: [Getter/Setter],\n      rawHeaders: [Getter/Setter],\n      rawTrailers: [Getter/Setter],\n      joinDuplicateHeaders: [Getter/Setter],\n      aborted: [Getter/Setter],\n      upgrade: [Getter/Setter],\n      url: [Getter/Setter],\n      method: [Getter/Setter],\n      statusCode: [Getter/Setter],\n      statusMessage: [Getter/Setter],\n      client: [Getter/Setter],\n      _consuming: [Getter/Setter],\n      _dumped: [Getter/Setter],\n      req: [Getter/Setter],\n      timings: [Getter/Setter],\n      headers: [Getter/Setter],\n      setTimeout: [Getter/Setter],\n      trailers: [Getter/Setter],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      request: [Circular *6],\n      isFromCache: false,\n      ip: '35.186.224.24',\n      retryCount: 0,\n      ok: false,\n      rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n      body: { error: { status: 401, message: 'The access token expired' } },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kCallback)]: null,\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter]\n    },\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    retryCount: 0,\n    _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _downloadedSize: 81,\n    _uploadedSize: 0,\n    _stopReading: true,\n    _pipedServerResponses: Set(0) {},\n    _request: <ref *4> ClientRequest {\n      _events: [Object: null prototype] {\n        socket: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        error: [ [Function], [Function], [length]: 2 ],\n        connect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        continue: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        information: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        upgrade: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        finish: [Function: requestOnFinish] {\n          [length]: 0,\n          [name]: 'requestOnFinish',\n          [prototype]: [Object]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      outputData: [ [length]: 0 ],\n      outputSize: 0,\n      writable: true,\n      destroyed: true,\n      _last: true,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: false,\n      sendDate: false,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: 0,\n      _hasBody: true,\n      _trailer: '',\n      finished: true,\n      _headerSent: true,\n      _closed: true,\n      _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n        'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n        'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n        'accept: application/json\\r\\n' +\n        'accept-encoding: gzip, deflate, br\\r\\n' +\n        'Host: api.spotify.com\\r\\n' +\n        'Connection: keep-alive\\r\\n' +\n        '\\r\\n',\n      _keepAliveTimeout: 0,\n      _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n      agent: Agent {\n        _events: [Object: null prototype] {\n          free: [Function],\n          newListener: [Function]\n        },\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        defaultPort: 443,\n        protocol: 'https:',\n        options: [Object: null prototype] {\n          keepAlive: true,\n          scheduling: 'lifo',\n          timeout: 5000,\n          noDelay: true,\n          path: null\n        },\n        requests: [Object: null prototype] {},\n        sockets: [Object: null prototype] {},\n        freeSockets: [Object: null prototype] {\n          'api.spotify.com:443:::::::::::::::::::::': [Array]\n        },\n        keepAliveMsecs: 1000,\n        keepAlive: true,\n        maxSockets: Infinity,\n        maxFreeSockets: 256,\n        scheduling: 'lifo',\n        maxTotalSockets: Infinity,\n        totalSocketCount: 1,\n        maxCachedSessions: 100,\n        _sessionCache: { map: [Object], list: [Array] },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false\n      },\n      socketPath: undefined,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      joinDuplicateHeaders: undefined,\n      path: '/v1/me/playlists?limit=50',\n      _ended: true,\n      res: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:01 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3687155,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88477,\n            [Symbol(triggerId)]: 88473,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: [Circular *4],\n        _eventsCount: 3,\n        timings: {\n          start: 1730796601585,\n          socket: 1730796601585,\n          lookup: 1730796601586,\n          connect: 1730796601687,\n          secureConnect: 1730796601811,\n          upload: 1730796601811,\n          response: 1730796602053,\n          end: 1730796602057,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:01 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      aborted: false,\n      timeoutCb: null,\n      upgradeOrConnect: false,\n      parser: null,\n      maxHeadersCount: null,\n      reusedSocket: false,\n      host: 'api.spotify.com',\n      protocol: 'https:',\n      timings: {\n        start: 1730796601585,\n        socket: 1730796601585,\n        lookup: 1730796601586,\n        connect: 1730796601687,\n        secureConnect: 1730796601811,\n        upload: 1730796601811,\n        response: 1730796602053,\n        end: 1730796602057,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 0,\n          dns: 1,\n          tcp: 101,\n          tls: 124,\n          request: 0,\n          firstByte: 242,\n          download: 4,\n          total: 472\n        }\n      },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n      [Symbol(kChunkedLength)]: 0,\n      [Symbol(kSocket)]: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 4b 02 01 01 02 02 03 04 04 02 13 02 04 20 ba 75 a3 bd 9d e7 39 87 14 93 08 89 22 e5 42 e7 43 c4 01 3f 16 12 68 50 86 c1 f2 23 77 31 71 ac 04 ... 2077 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3687155,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88477,\n          [Symbol(triggerId)]: 88473,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 4b 02 01 01 02 02 03 04 04 02 13 02 04 20 ba 75 a3 bd 9d e7 39 87 14 93 08 89 22 e5 42 e7 43 c4 01 3f 16 12 68 50 86 c1 f2 23 77 31 71 ac 04 ... 2077 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      [Symbol(kOutHeaders)]: [Object: null prototype] {\n        'user-agent': [\n          'user-agent',\n          'got (https://github.com/sindresorhus/got)',\n          [length]: 2\n        ],\n        authorization: [\n          'authorization',\n          'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          [length]: 2\n        ],\n        accept: [ 'accept', 'application/json', [length]: 2 ],\n        'accept-encoding': [ 'accept-encoding', 'gzip, deflate, br', [length]: 2 ],\n        host: [ 'Host', 'api.spotify.com', [length]: 2 ]\n      },\n      [Symbol(errored)]: null,\n      [Symbol(kHighWaterMark)]: 65536,\n      [Symbol(kRejectNonStandardBodyWrites)]: false,\n      [Symbol(kUniqueHeaders)]: null,\n      [Symbol(reentry)]: true,\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [writableFinished]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableLength]: [Getter],\n      [writableHighWaterMark]: [Getter],\n      [writableCorked]: [Getter],\n      [_headers]: [Getter/Setter],\n      [connection]: [Getter/Setter],\n      [socket]: [Getter/Setter],\n      [_headerNames]: [Getter/Setter],\n      headersSent: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter]\n    },\n    _responseSize: 81,\n    _bodySize: 0,\n    _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n    _isFromCache: false,\n    _cannotHaveBody: true,\n    _triggerRead: true,\n    _cancelTimeouts: [Function: cancelTimeouts] { [length]: 0, [name]: 'cancelTimeouts' },\n    _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _nativeResponse: <ref *5> IncomingMessage {\n      _events: {\n        close: undefined,\n        error: undefined,\n        data: undefined,\n        end: [Function: responseOnEnd] {\n          [length]: 0,\n          [name]: 'responseOnEnd',\n          [prototype]: [Object]\n        },\n        readable: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 110892924,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _maxListeners: undefined,\n      socket: null,\n      httpVersionMajor: 1,\n      httpVersionMinor: 1,\n      httpVersion: '1.1',\n      complete: true,\n      rawHeaders: [\n        'www-authenticate',\n        'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin',\n        '*',\n        'access-control-allow-headers',\n        'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods',\n        'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials',\n        'true',\n        'access-control-max-age',\n        '604800',\n        'content-type',\n        'application/json',\n        'content-encoding',\n        'gzip',\n        'strict-transport-security',\n        'max-age=31536000',\n        'x-content-type-options',\n        'nosniff',\n        'date',\n        'Tue, 05 Nov 2024 08:50:01 GMT',\n        'server',\n        'envoy',\n        'Via',\n        'HTTP/2 edgeproxy, 1.1 google',\n        'Alt-Svc',\n        'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'Transfer-Encoding',\n        'chunked',\n        [length]: 30\n      ],\n      rawTrailers: [ [length]: 0 ],\n      joinDuplicateHeaders: undefined,\n      aborted: false,\n      upgrade: false,\n      url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      method: null,\n      statusCode: 401,\n      statusMessage: 'Unauthorized',\n      client: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 4b 02 01 01 02 02 03 04 04 02 13 02 04 20 ba 75 a3 bd 9d e7 39 87 14 93 08 89 22 e5 42 e7 43 c4 01 3f 16 12 68 50 86 c1 f2 23 77 31 71 ac 04 ... 2077 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3687155,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88477,\n          [Symbol(triggerId)]: 88473,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 4b 02 01 01 02 02 03 04 04 02 13 02 04 20 ba 75 a3 bd 9d e7 39 87 14 93 08 89 22 e5 42 e7 43 c4 01 3f 16 12 68 50 86 c1 f2 23 77 31 71 ac 04 ... 2077 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      _consuming: false,\n      _dumped: false,\n      req: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: [Circular *5],\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796601585,\n          socket: 1730796601585,\n          lookup: 1730796601586,\n          connect: 1730796601687,\n          secureConnect: 1730796601811,\n          upload: 1730796601811,\n          response: 1730796602053,\n          end: 1730796602057,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: <ref *7> TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3687155,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88477,\n            [Symbol(triggerId)]: 88473,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _eventsCount: 3,\n      timings: {\n        start: 1730796601585,\n        socket: 1730796601585,\n        lookup: 1730796601586,\n        connect: 1730796601687,\n        secureConnect: 1730796601811,\n        upload: 1730796601811,\n        response: 1730796602053,\n        end: 1730796602057,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 0,\n          dns: 1,\n          tcp: 101,\n          tls: 124,\n          request: 0,\n          firstByte: 242,\n          download: 4,\n          total: 472\n        }\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kHeaders)]: {\n        'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin': '*',\n        'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials': 'true',\n        'access-control-max-age': '604800',\n        'content-type': 'application/json',\n        'content-encoding': 'gzip',\n        'strict-transport-security': 'max-age=31536000',\n        'x-content-type-options': 'nosniff',\n        date: 'Tue, 05 Nov 2024 08:50:01 GMT',\n        server: 'envoy',\n        via: 'HTTP/2 edgeproxy, 1.1 google',\n        'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'transfer-encoding': 'chunked'\n      },\n      [Symbol(kHeadersCount)]: 30,\n      [Symbol(kTrailers)]: null,\n      [Symbol(kTrailersCount)]: 0,\n      [connection]: [Getter/Setter],\n      [headers]: [Getter/Setter],\n      [headersDistinct]: [Getter/Setter],\n      [trailers]: [Getter/Setter],\n      [trailersDistinct]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readableEnded]: [Getter]\n    },\n    _flushed: true,\n    _aborted: false,\n    _requestInitialized: true,\n    _jobs: [ [length]: 0 ],\n    _eventsCount: 10,\n    _requestOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined,\n      ALPNProtocols: undefined,\n      ca: undefined,\n      cert: undefined,\n      key: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: <ref *8> [Function: checkServerIdentity] {\n        [length]: 2,\n        [name]: 'checkServerIdentity',\n        [prototype]: { [constructor]: [Circular *8] }\n      },\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      sigalgs: undefined,\n      sessionTimeout: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      crl: undefined,\n      lookup: undefined,\n      family: undefined,\n      agent: undefined,\n      setHost: true,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      localAddress: undefined,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      createConnection: undefined,\n      timeout: undefined,\n      h2session: undefined\n    },\n    flush: [AsyncFunction (anonymous)] {\n      [length]: 0,\n      [name]: '',\n      [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n    },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [ip]: [Getter],\n    [isAborted]: [Getter],\n    [socket]: [Getter],\n    [downloadProgress]: [Getter],\n    [uploadProgress]: [Getter],\n    [timings]: [Getter],\n    [isFromCache]: [Getter],\n    [reusedSocket]: [Getter],\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter],\n    [readable]: [Getter/Setter],\n    [readableDidRead]: [Getter],\n    [readableAborted]: [Getter],\n    [readableHighWaterMark]: [Getter],\n    [readableBuffer]: [Getter],\n    [readableFlowing]: [Getter/Setter],\n    [readableLength]: [Getter],\n    [readableObjectMode]: [Getter],\n    [readableEncoding]: [Getter],\n    [errored]: [Getter],\n    [closed]: [Getter],\n    [readableEnded]: [Getter]\n  },\n  timings: {\n    start: 1730796601585,\n    socket: 1730796601585,\n    lookup: 1730796601586,\n    connect: 1730796601687,\n    secureConnect: 1730796601811,\n    upload: 1730796601811,\n    response: 1730796602053,\n    end: 1730796602057,\n    error: undefined,\n    abort: undefined,\n    phases: {\n      wait: 0,\n      dns: 1,\n      tcp: 101,\n      tls: 124,\n      request: 0,\n      firstByte: 242,\n      download: 4,\n      total: 472\n    }\n  },\n  name: 'HTTPError',\n  options: {\n    request: undefined,\n    agent: { http: undefined, https: undefined, http2: undefined },\n    h2session: undefined,\n    decompress: true,\n    timeout: {\n      connect: undefined,\n      lookup: undefined,\n      read: undefined,\n      request: undefined,\n      response: undefined,\n      secureConnect: undefined,\n      send: undefined,\n      socket: undefined\n    },\n    prefixUrl: '',\n    body: undefined,\n    form: undefined,\n    json: undefined,\n    cookieJar: undefined,\n    ignoreInvalidCookies: false,\n    searchParams: undefined,\n    dnsLookup: undefined,\n    dnsCache: undefined,\n    context: {},\n    hooks: {\n      init: [ [length]: 0 ],\n      beforeRequest: [ [length]: 0 ],\n      beforeError: [ [length]: 0 ],\n      beforeRedirect: [ [length]: 0 ],\n      beforeRetry: [ [length]: 0 ],\n      afterResponse: [ [length]: 0 ]\n    },\n    followRedirect: true,\n    maxRedirects: 10,\n    cache: undefined,\n    throwHttpErrors: true,\n    username: '',\n    password: '',\n    http2: false,\n    allowGetBody: false,\n    headers: {\n      'user-agent': 'got (https://github.com/sindresorhus/got)',\n      authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n      accept: 'application/json',\n      'accept-encoding': 'gzip, deflate, br'\n    },\n    methodRewriting: false,\n    dnsLookupIpVersion: undefined,\n    parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n    stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n    retry: {\n      limit: 2,\n      methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n      statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n      errorCodes: [\n        'ETIMEDOUT',\n        'ECONNRESET',\n        'EADDRINUSE',\n        'ECONNREFUSED',\n        'EPIPE',\n        'ENOTFOUND',\n        'ENETUNREACH',\n        'EAI_AGAIN',\n        [length]: 8\n      ],\n      maxRetryAfter: undefined,\n      calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n      backoffLimit: Infinity,\n      noise: 100\n    },\n    localAddress: undefined,\n    method: 'GET',\n    createConnection: undefined,\n    cacheOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined\n    },\n    https: {\n      alpnProtocols: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: undefined,\n      certificateAuthority: undefined,\n      key: undefined,\n      certificate: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      signatureAlgorithms: undefined,\n      tlsSessionLifetime: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      certificateRevocationLists: undefined\n    },\n    encoding: undefined,\n    resolveBodyOnly: false,\n    isStream: false,\n    responseType: 'json',\n    url: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    pagination: {\n      transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n      paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n      filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n      shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n      countLimit: Infinity,\n      backoff: 0,\n      requestLimit: 10000,\n      stackAllItems: false\n    },\n    setHost: true,\n    maxHeaderSize: undefined,\n    signal: undefined,\n    enableUnixSockets: false\n  }\n}","timestamp":"2024-11-05 19:50:02"}
{"level":"error","message":"Error fetching playlists: <ref *2> HTTPError: Response code 401 (Unauthorized)\n    at Request.<anonymous> (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/as-promise/index.js:92:42)\n    at Object.onceWrapper (node:events:635:26)\n    at Request.emit (node:events:532:35)\n    at Request._onResponseBase (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:609:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Request._onResponse (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:649:13) {\n  [stack]: [Getter/Setter],\n  [message]: 'Response code 401 (Unauthorized)',\n  [cause]: {},\n  input: undefined,\n  code: 'ERR_NON_2XX_3XX_RESPONSE',\n  [response]: <ref *3> PassThrough {\n    _events: {\n      close: undefined,\n      error: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 1, [name]: '' }\n      },\n      prefinish: <ref *1> [Function: prefinish] {\n        [length]: 0,\n        [name]: 'prefinish',\n        [prototype]: { [constructor]: [Circular *1] }\n      },\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n      unpipe: undefined,\n      aborted: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 0, [name]: '' }\n      }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 65536,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 9996040,\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 65536,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466504,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kWriteCbValue)]: null,\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n    _maxListeners: undefined,\n    _eventsCount: 4,\n    socket: [Getter/Setter],\n    httpVersionMajor: [Getter/Setter],\n    httpVersionMinor: [Getter/Setter],\n    httpVersion: [Getter/Setter],\n    complete: [Getter/Setter],\n    rawHeaders: [Getter/Setter],\n    rawTrailers: [Getter/Setter],\n    joinDuplicateHeaders: [Getter/Setter],\n    aborted: [Getter/Setter],\n    upgrade: [Getter/Setter],\n    url: [Getter/Setter],\n    method: [Getter/Setter],\n    statusCode: [Getter/Setter],\n    statusMessage: [Getter/Setter],\n    client: [Getter/Setter],\n    _consuming: [Getter/Setter],\n    _dumped: [Getter/Setter],\n    req: [Getter/Setter],\n    timings: [Getter/Setter],\n    headers: [Getter/Setter],\n    setTimeout: [Getter/Setter],\n    trailers: [Getter/Setter],\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    request: Request {\n      _events: {\n        close: undefined,\n        error: undefined,\n        prefinish: undefined,\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: undefined,\n        pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n        newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n        response: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        retry: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        request: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        redirect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        uploadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        downloadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n        pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 0,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 1574906,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 0,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466746,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      constructor: undefined,\n      _noPipe: true,\n      options: {\n        request: undefined,\n        agent: { http: undefined, https: undefined, http2: undefined },\n        h2session: undefined,\n        decompress: true,\n        timeout: {\n          connect: undefined,\n          lookup: undefined,\n          read: undefined,\n          request: undefined,\n          response: undefined,\n          secureConnect: undefined,\n          send: undefined,\n          socket: undefined\n        },\n        prefixUrl: '',\n        body: undefined,\n        form: undefined,\n        json: undefined,\n        cookieJar: undefined,\n        ignoreInvalidCookies: false,\n        searchParams: undefined,\n        dnsLookup: undefined,\n        dnsCache: undefined,\n        context: {},\n        hooks: {\n          init: [ [length]: 0 ],\n          beforeRequest: [ [length]: 0 ],\n          beforeError: [ [length]: 0 ],\n          beforeRedirect: [ [length]: 0 ],\n          beforeRetry: [ [length]: 0 ],\n          afterResponse: [ [length]: 0 ]\n        },\n        followRedirect: true,\n        maxRedirects: 10,\n        cache: undefined,\n        throwHttpErrors: true,\n        username: '',\n        password: '',\n        http2: false,\n        allowGetBody: false,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        methodRewriting: false,\n        dnsLookupIpVersion: undefined,\n        parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n        stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n        retry: {\n          limit: 2,\n          methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n          statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n          errorCodes: [\n            'ETIMEDOUT',\n            'ECONNRESET',\n            'EADDRINUSE',\n            'ECONNREFUSED',\n            'EPIPE',\n            'ENOTFOUND',\n            'ENETUNREACH',\n            'EAI_AGAIN',\n            [length]: 8\n          ],\n          maxRetryAfter: undefined,\n          calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n          backoffLimit: Infinity,\n          noise: 100\n        },\n        localAddress: undefined,\n        method: 'GET',\n        createConnection: undefined,\n        cacheOptions: {\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined\n        },\n        https: {\n          alpnProtocols: undefined,\n          rejectUnauthorized: undefined,\n          checkServerIdentity: undefined,\n          certificateAuthority: undefined,\n          key: undefined,\n          certificate: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          ciphers: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          signatureAlgorithms: undefined,\n          tlsSessionLifetime: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          certificateRevocationLists: undefined\n        },\n        encoding: undefined,\n        resolveBodyOnly: false,\n        isStream: false,\n        responseType: 'json',\n        url: URL {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          origin: 'https://api.spotify.com',\n          protocol: 'https:',\n          username: '',\n          password: '',\n          host: 'api.spotify.com',\n          hostname: 'api.spotify.com',\n          port: '',\n          pathname: '/v1/me/playlists',\n          search: '?limit=50',\n          searchParams: URLSearchParams { 'limit' => '50' },\n          hash: '',\n          [Symbol(context)]: URLContext {\n            href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n            protocol_end: 6,\n            username_end: 8,\n            host_start: 8,\n            host_end: 23,\n            pathname_start: 23,\n            search_start: 39,\n            hash_start: 4294967295,\n            port: 4294967295,\n            scheme_type: 2,\n            [hasPort]: [Getter],\n            [hasSearch]: [Getter],\n            [hasHash]: [Getter]\n          }\n        },\n        pagination: {\n          transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n          paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n          filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n          shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n          countLimit: Infinity,\n          backoff: 0,\n          requestLimit: 10000,\n          stackAllItems: false\n        },\n        setHost: true,\n        maxHeaderSize: undefined,\n        signal: undefined,\n        enableUnixSockets: false\n      },\n      response: [Circular *3],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      retryCount: 0,\n      _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _downloadedSize: 81,\n      _uploadedSize: 0,\n      _stopReading: true,\n      _pipedServerResponses: Set(0) {},\n      _request: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: IncomingMessage {\n          _events: [Object],\n          _readableState: [ReadableState],\n          _maxListeners: undefined,\n          socket: null,\n          httpVersionMajor: 1,\n          httpVersionMinor: 1,\n          httpVersion: '1.1',\n          complete: true,\n          rawHeaders: [Array],\n          rawTrailers: [Array],\n          joinDuplicateHeaders: undefined,\n          aborted: false,\n          upgrade: false,\n          url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          method: null,\n          statusCode: 401,\n          statusMessage: 'Unauthorized',\n          client: [TLSSocket],\n          _consuming: false,\n          _dumped: false,\n          req: [Circular *4],\n          _eventsCount: 3,\n          timings: [Object],\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kHeaders)]: [Object],\n          [Symbol(kHeadersCount)]: 30,\n          [Symbol(kTrailers)]: null,\n          [Symbol(kTrailersCount)]: 0,\n          [connection]: [Getter/Setter],\n          [headers]: [Getter/Setter],\n          [headersDistinct]: [Getter/Setter],\n          [trailers]: [Getter/Setter],\n          [trailersDistinct]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableDidRead]: [Getter],\n          [readableAborted]: [Getter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readableEnded]: [Getter]\n        },\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796601585,\n          socket: 1730796601585,\n          lookup: 1730796601586,\n          connect: 1730796601687,\n          secureConnect: 1730796601811,\n          upload: 1730796601811,\n          response: 1730796602053,\n          end: 1730796602057,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3687155,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88477,\n            [Symbol(triggerId)]: 88473,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _responseSize: 81,\n      _bodySize: 0,\n      _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n      _isFromCache: false,\n      _cannotHaveBody: true,\n      _triggerRead: true,\n      _cancelTimeouts: [Function: cancelTimeouts] {\n        [length]: 0,\n        [name]: 'cancelTimeouts'\n      },\n      _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _nativeResponse: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:01 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3687155,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88477,\n            [Symbol(triggerId)]: 88473,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: <ref *4> ClientRequest {\n          _events: [Object: null prototype],\n          _eventsCount: 8,\n          _maxListeners: undefined,\n          outputData: [Array],\n          outputSize: 0,\n          writable: true,\n          destroyed: true,\n          _last: true,\n          chunkedEncoding: false,\n          shouldKeepAlive: true,\n          maxRequestsOnConnectionReached: false,\n          _defaultKeepAlive: true,\n          useChunkedEncodingByDefault: false,\n          sendDate: false,\n          _removedConnection: false,\n          _removedContLen: false,\n          _removedTE: false,\n          strictContentLength: false,\n          _contentLength: 0,\n          _hasBody: true,\n          _trailer: '',\n          finished: true,\n          _headerSent: true,\n          _closed: true,\n          _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n            'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n            'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n            'accept: application/json\\r\\n' +\n            'accept-encoding: gzip, deflate, br\\r\\n' +\n            'Host: api.spotify.com\\r\\n' +\n            'Connection: keep-alive\\r\\n' +\n            '\\r\\n',\n          _keepAliveTimeout: 0,\n          _onPendingData: [Function],\n          agent: [Agent],\n          socketPath: undefined,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          insecureHTTPParser: undefined,\n          joinDuplicateHeaders: undefined,\n          path: '/v1/me/playlists?limit=50',\n          _ended: true,\n          res: [Circular *5],\n          aborted: false,\n          timeoutCb: null,\n          upgradeOrConnect: false,\n          parser: null,\n          maxHeadersCount: null,\n          reusedSocket: false,\n          host: 'api.spotify.com',\n          protocol: 'https:',\n          timings: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(kNeedDrain)]: false,\n          [Symbol(corked)]: 0,\n          [Symbol(kChunkedBuffer)]: [Array],\n          [Symbol(kChunkedLength)]: 0,\n          [Symbol(kSocket)]: [TLSSocket],\n          [Symbol(kOutHeaders)]: [Object: null prototype],\n          [Symbol(errored)]: null,\n          [Symbol(kHighWaterMark)]: 65536,\n          [Symbol(kRejectNonStandardBodyWrites)]: false,\n          [Symbol(kUniqueHeaders)]: null,\n          [Symbol(reentry)]: true,\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [writableFinished]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableLength]: [Getter],\n          [writableHighWaterMark]: [Getter],\n          [writableCorked]: [Getter],\n          [_headers]: [Getter/Setter],\n          [connection]: [Getter/Setter],\n          [socket]: [Getter/Setter],\n          [_headerNames]: [Getter/Setter],\n          headersSent: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter]\n        },\n        _eventsCount: 3,\n        timings: {\n          start: 1730796601585,\n          socket: 1730796601585,\n          lookup: 1730796601586,\n          connect: 1730796601687,\n          secureConnect: 1730796601811,\n          upload: 1730796601811,\n          response: 1730796602053,\n          end: 1730796602057,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:01 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      _flushed: true,\n      _aborted: false,\n      _requestInitialized: true,\n      _jobs: [ [length]: 0 ],\n      _eventsCount: 10,\n      _requestOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined,\n        ALPNProtocols: undefined,\n        ca: undefined,\n        cert: undefined,\n        key: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: [Function: checkServerIdentity] {\n          [length]: 2,\n          [name]: 'checkServerIdentity',\n          [prototype]: [Object]\n        },\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        sigalgs: undefined,\n        sessionTimeout: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        crl: undefined,\n        lookup: undefined,\n        family: undefined,\n        agent: undefined,\n        setHost: true,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        localAddress: undefined,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        createConnection: undefined,\n        timeout: undefined,\n        h2session: undefined\n      },\n      flush: [AsyncFunction (anonymous)] {\n        [length]: 0,\n        [name]: '',\n        [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [ip]: [Getter],\n      [isAborted]: [Getter],\n      [socket]: [Getter],\n      [downloadProgress]: [Getter],\n      [uploadProgress]: [Getter],\n      [timings]: [Getter],\n      [isFromCache]: [Getter],\n      [reusedSocket]: [Getter],\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [readableEnded]: [Getter]\n    },\n    isFromCache: false,\n    ip: '35.186.224.24',\n    retryCount: 0,\n    ok: false,\n    rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n    body: { error: { status: 401, message: 'The access token expired' } },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [Symbol(kCallback)]: null,\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter]\n  },\n  [request]: <ref *6> Request {\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: undefined,\n      pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n      newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n      response: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      retry: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 2, [name]: '' }\n      },\n      request: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      redirect: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      uploadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      downloadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n      pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 0,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 1574906,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 0,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466746,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    constructor: undefined,\n    _noPipe: true,\n    options: {\n      request: undefined,\n      agent: { http: undefined, https: undefined, http2: undefined },\n      h2session: undefined,\n      decompress: true,\n      timeout: {\n        connect: undefined,\n        lookup: undefined,\n        read: undefined,\n        request: undefined,\n        response: undefined,\n        secureConnect: undefined,\n        send: undefined,\n        socket: undefined\n      },\n      prefixUrl: '',\n      body: undefined,\n      form: undefined,\n      json: undefined,\n      cookieJar: undefined,\n      ignoreInvalidCookies: false,\n      searchParams: undefined,\n      dnsLookup: undefined,\n      dnsCache: undefined,\n      context: {},\n      hooks: {\n        init: [ [length]: 0 ],\n        beforeRequest: [ [length]: 0 ],\n        beforeError: [ [length]: 0 ],\n        beforeRedirect: [ [length]: 0 ],\n        beforeRetry: [ [length]: 0 ],\n        afterResponse: [ [length]: 0 ]\n      },\n      followRedirect: true,\n      maxRedirects: 10,\n      cache: undefined,\n      throwHttpErrors: true,\n      username: '',\n      password: '',\n      http2: false,\n      allowGetBody: false,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      methodRewriting: false,\n      dnsLookupIpVersion: undefined,\n      parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n      stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n      retry: {\n        limit: 2,\n        methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n        statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n        errorCodes: [\n          'ETIMEDOUT',\n          'ECONNRESET',\n          'EADDRINUSE',\n          'ECONNREFUSED',\n          'EPIPE',\n          'ENOTFOUND',\n          'ENETUNREACH',\n          'EAI_AGAIN',\n          [length]: 8\n        ],\n        maxRetryAfter: undefined,\n        calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n        backoffLimit: Infinity,\n        noise: 100\n      },\n      localAddress: undefined,\n      method: 'GET',\n      createConnection: undefined,\n      cacheOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined\n      },\n      https: {\n        alpnProtocols: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: undefined,\n        certificateAuthority: undefined,\n        key: undefined,\n        certificate: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        signatureAlgorithms: undefined,\n        tlsSessionLifetime: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        certificateRevocationLists: undefined\n      },\n      encoding: undefined,\n      resolveBodyOnly: false,\n      isStream: false,\n      responseType: 'json',\n      url: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      pagination: {\n        transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n        paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n        filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n        shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n        countLimit: Infinity,\n        backoff: 0,\n        requestLimit: 10000,\n        stackAllItems: false\n      },\n      setHost: true,\n      maxHeaderSize: undefined,\n      signal: undefined,\n      enableUnixSockets: false\n    },\n    response: <ref *3> PassThrough {\n      _events: {\n        close: undefined,\n        error: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        prefinish: <ref *1> [Function: prefinish] {\n          [length]: 0,\n          [name]: 'prefinish',\n          [prototype]: [Object]\n        },\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n        unpipe: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 9996040,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 65536,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466504,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kWriteCbValue)]: null,\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n      _maxListeners: undefined,\n      _eventsCount: 4,\n      socket: [Getter/Setter],\n      httpVersionMajor: [Getter/Setter],\n      httpVersionMinor: [Getter/Setter],\n      httpVersion: [Getter/Setter],\n      complete: [Getter/Setter],\n      rawHeaders: [Getter/Setter],\n      rawTrailers: [Getter/Setter],\n      joinDuplicateHeaders: [Getter/Setter],\n      aborted: [Getter/Setter],\n      upgrade: [Getter/Setter],\n      url: [Getter/Setter],\n      method: [Getter/Setter],\n      statusCode: [Getter/Setter],\n      statusMessage: [Getter/Setter],\n      client: [Getter/Setter],\n      _consuming: [Getter/Setter],\n      _dumped: [Getter/Setter],\n      req: [Getter/Setter],\n      timings: [Getter/Setter],\n      headers: [Getter/Setter],\n      setTimeout: [Getter/Setter],\n      trailers: [Getter/Setter],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      request: [Circular *6],\n      isFromCache: false,\n      ip: '35.186.224.24',\n      retryCount: 0,\n      ok: false,\n      rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n      body: { error: { status: 401, message: 'The access token expired' } },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kCallback)]: null,\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter]\n    },\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    retryCount: 0,\n    _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _downloadedSize: 81,\n    _uploadedSize: 0,\n    _stopReading: true,\n    _pipedServerResponses: Set(0) {},\n    _request: <ref *4> ClientRequest {\n      _events: [Object: null prototype] {\n        socket: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        error: [ [Function], [Function], [length]: 2 ],\n        connect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        continue: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        information: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        upgrade: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        finish: [Function: requestOnFinish] {\n          [length]: 0,\n          [name]: 'requestOnFinish',\n          [prototype]: [Object]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      outputData: [ [length]: 0 ],\n      outputSize: 0,\n      writable: true,\n      destroyed: true,\n      _last: true,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: false,\n      sendDate: false,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: 0,\n      _hasBody: true,\n      _trailer: '',\n      finished: true,\n      _headerSent: true,\n      _closed: true,\n      _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n        'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n        'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n        'accept: application/json\\r\\n' +\n        'accept-encoding: gzip, deflate, br\\r\\n' +\n        'Host: api.spotify.com\\r\\n' +\n        'Connection: keep-alive\\r\\n' +\n        '\\r\\n',\n      _keepAliveTimeout: 0,\n      _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n      agent: Agent {\n        _events: [Object: null prototype] {\n          free: [Function],\n          newListener: [Function]\n        },\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        defaultPort: 443,\n        protocol: 'https:',\n        options: [Object: null prototype] {\n          keepAlive: true,\n          scheduling: 'lifo',\n          timeout: 5000,\n          noDelay: true,\n          path: null\n        },\n        requests: [Object: null prototype] {},\n        sockets: [Object: null prototype] {},\n        freeSockets: [Object: null prototype] {\n          'api.spotify.com:443:::::::::::::::::::::': [Array]\n        },\n        keepAliveMsecs: 1000,\n        keepAlive: true,\n        maxSockets: Infinity,\n        maxFreeSockets: 256,\n        scheduling: 'lifo',\n        maxTotalSockets: Infinity,\n        totalSocketCount: 1,\n        maxCachedSessions: 100,\n        _sessionCache: { map: [Object], list: [Array] },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false\n      },\n      socketPath: undefined,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      joinDuplicateHeaders: undefined,\n      path: '/v1/me/playlists?limit=50',\n      _ended: true,\n      res: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:01 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3687155,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88477,\n            [Symbol(triggerId)]: 88473,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: [Circular *4],\n        _eventsCount: 3,\n        timings: {\n          start: 1730796601585,\n          socket: 1730796601585,\n          lookup: 1730796601586,\n          connect: 1730796601687,\n          secureConnect: 1730796601811,\n          upload: 1730796601811,\n          response: 1730796602053,\n          end: 1730796602057,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:01 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      aborted: false,\n      timeoutCb: null,\n      upgradeOrConnect: false,\n      parser: null,\n      maxHeadersCount: null,\n      reusedSocket: false,\n      host: 'api.spotify.com',\n      protocol: 'https:',\n      timings: {\n        start: 1730796601585,\n        socket: 1730796601585,\n        lookup: 1730796601586,\n        connect: 1730796601687,\n        secureConnect: 1730796601811,\n        upload: 1730796601811,\n        response: 1730796602053,\n        end: 1730796602057,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 0,\n          dns: 1,\n          tcp: 101,\n          tls: 124,\n          request: 0,\n          firstByte: 242,\n          download: 4,\n          total: 472\n        }\n      },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n      [Symbol(kChunkedLength)]: 0,\n      [Symbol(kSocket)]: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 4b 02 01 01 02 02 03 04 04 02 13 02 04 20 ba 75 a3 bd 9d e7 39 87 14 93 08 89 22 e5 42 e7 43 c4 01 3f 16 12 68 50 86 c1 f2 23 77 31 71 ac 04 ... 2077 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3687155,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88477,\n          [Symbol(triggerId)]: 88473,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 4b 02 01 01 02 02 03 04 04 02 13 02 04 20 ba 75 a3 bd 9d e7 39 87 14 93 08 89 22 e5 42 e7 43 c4 01 3f 16 12 68 50 86 c1 f2 23 77 31 71 ac 04 ... 2077 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      [Symbol(kOutHeaders)]: [Object: null prototype] {\n        'user-agent': [\n          'user-agent',\n          'got (https://github.com/sindresorhus/got)',\n          [length]: 2\n        ],\n        authorization: [\n          'authorization',\n          'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          [length]: 2\n        ],\n        accept: [ 'accept', 'application/json', [length]: 2 ],\n        'accept-encoding': [ 'accept-encoding', 'gzip, deflate, br', [length]: 2 ],\n        host: [ 'Host', 'api.spotify.com', [length]: 2 ]\n      },\n      [Symbol(errored)]: null,\n      [Symbol(kHighWaterMark)]: 65536,\n      [Symbol(kRejectNonStandardBodyWrites)]: false,\n      [Symbol(kUniqueHeaders)]: null,\n      [Symbol(reentry)]: true,\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [writableFinished]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableLength]: [Getter],\n      [writableHighWaterMark]: [Getter],\n      [writableCorked]: [Getter],\n      [_headers]: [Getter/Setter],\n      [connection]: [Getter/Setter],\n      [socket]: [Getter/Setter],\n      [_headerNames]: [Getter/Setter],\n      headersSent: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter]\n    },\n    _responseSize: 81,\n    _bodySize: 0,\n    _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n    _isFromCache: false,\n    _cannotHaveBody: true,\n    _triggerRead: true,\n    _cancelTimeouts: [Function: cancelTimeouts] { [length]: 0, [name]: 'cancelTimeouts' },\n    _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _nativeResponse: <ref *5> IncomingMessage {\n      _events: {\n        close: undefined,\n        error: undefined,\n        data: undefined,\n        end: [Function: responseOnEnd] {\n          [length]: 0,\n          [name]: 'responseOnEnd',\n          [prototype]: [Object]\n        },\n        readable: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 110892924,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _maxListeners: undefined,\n      socket: null,\n      httpVersionMajor: 1,\n      httpVersionMinor: 1,\n      httpVersion: '1.1',\n      complete: true,\n      rawHeaders: [\n        'www-authenticate',\n        'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin',\n        '*',\n        'access-control-allow-headers',\n        'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods',\n        'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials',\n        'true',\n        'access-control-max-age',\n        '604800',\n        'content-type',\n        'application/json',\n        'content-encoding',\n        'gzip',\n        'strict-transport-security',\n        'max-age=31536000',\n        'x-content-type-options',\n        'nosniff',\n        'date',\n        'Tue, 05 Nov 2024 08:50:01 GMT',\n        'server',\n        'envoy',\n        'Via',\n        'HTTP/2 edgeproxy, 1.1 google',\n        'Alt-Svc',\n        'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'Transfer-Encoding',\n        'chunked',\n        [length]: 30\n      ],\n      rawTrailers: [ [length]: 0 ],\n      joinDuplicateHeaders: undefined,\n      aborted: false,\n      upgrade: false,\n      url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      method: null,\n      statusCode: 401,\n      statusMessage: 'Unauthorized',\n      client: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 4b 02 01 01 02 02 03 04 04 02 13 02 04 20 ba 75 a3 bd 9d e7 39 87 14 93 08 89 22 e5 42 e7 43 c4 01 3f 16 12 68 50 86 c1 f2 23 77 31 71 ac 04 ... 2077 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3687155,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88477,\n          [Symbol(triggerId)]: 88473,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 4b 02 01 01 02 02 03 04 04 02 13 02 04 20 ba 75 a3 bd 9d e7 39 87 14 93 08 89 22 e5 42 e7 43 c4 01 3f 16 12 68 50 86 c1 f2 23 77 31 71 ac 04 ... 2077 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      _consuming: false,\n      _dumped: false,\n      req: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: [Circular *5],\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796601585,\n          socket: 1730796601585,\n          lookup: 1730796601586,\n          connect: 1730796601687,\n          secureConnect: 1730796601811,\n          upload: 1730796601811,\n          response: 1730796602053,\n          end: 1730796602057,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: <ref *7> TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3687155,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88477,\n            [Symbol(triggerId)]: 88473,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _eventsCount: 3,\n      timings: {\n        start: 1730796601585,\n        socket: 1730796601585,\n        lookup: 1730796601586,\n        connect: 1730796601687,\n        secureConnect: 1730796601811,\n        upload: 1730796601811,\n        response: 1730796602053,\n        end: 1730796602057,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 0,\n          dns: 1,\n          tcp: 101,\n          tls: 124,\n          request: 0,\n          firstByte: 242,\n          download: 4,\n          total: 472\n        }\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kHeaders)]: {\n        'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin': '*',\n        'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials': 'true',\n        'access-control-max-age': '604800',\n        'content-type': 'application/json',\n        'content-encoding': 'gzip',\n        'strict-transport-security': 'max-age=31536000',\n        'x-content-type-options': 'nosniff',\n        date: 'Tue, 05 Nov 2024 08:50:01 GMT',\n        server: 'envoy',\n        via: 'HTTP/2 edgeproxy, 1.1 google',\n        'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'transfer-encoding': 'chunked'\n      },\n      [Symbol(kHeadersCount)]: 30,\n      [Symbol(kTrailers)]: null,\n      [Symbol(kTrailersCount)]: 0,\n      [connection]: [Getter/Setter],\n      [headers]: [Getter/Setter],\n      [headersDistinct]: [Getter/Setter],\n      [trailers]: [Getter/Setter],\n      [trailersDistinct]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readableEnded]: [Getter]\n    },\n    _flushed: true,\n    _aborted: false,\n    _requestInitialized: true,\n    _jobs: [ [length]: 0 ],\n    _eventsCount: 10,\n    _requestOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined,\n      ALPNProtocols: undefined,\n      ca: undefined,\n      cert: undefined,\n      key: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: <ref *8> [Function: checkServerIdentity] {\n        [length]: 2,\n        [name]: 'checkServerIdentity',\n        [prototype]: { [constructor]: [Circular *8] }\n      },\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      sigalgs: undefined,\n      sessionTimeout: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      crl: undefined,\n      lookup: undefined,\n      family: undefined,\n      agent: undefined,\n      setHost: true,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      localAddress: undefined,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      createConnection: undefined,\n      timeout: undefined,\n      h2session: undefined\n    },\n    flush: [AsyncFunction (anonymous)] {\n      [length]: 0,\n      [name]: '',\n      [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n    },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [ip]: [Getter],\n    [isAborted]: [Getter],\n    [socket]: [Getter],\n    [downloadProgress]: [Getter],\n    [uploadProgress]: [Getter],\n    [timings]: [Getter],\n    [isFromCache]: [Getter],\n    [reusedSocket]: [Getter],\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter],\n    [readable]: [Getter/Setter],\n    [readableDidRead]: [Getter],\n    [readableAborted]: [Getter],\n    [readableHighWaterMark]: [Getter],\n    [readableBuffer]: [Getter],\n    [readableFlowing]: [Getter/Setter],\n    [readableLength]: [Getter],\n    [readableObjectMode]: [Getter],\n    [readableEncoding]: [Getter],\n    [errored]: [Getter],\n    [closed]: [Getter],\n    [readableEnded]: [Getter]\n  },\n  timings: {\n    start: 1730796601585,\n    socket: 1730796601585,\n    lookup: 1730796601586,\n    connect: 1730796601687,\n    secureConnect: 1730796601811,\n    upload: 1730796601811,\n    response: 1730796602053,\n    end: 1730796602057,\n    error: undefined,\n    abort: undefined,\n    phases: {\n      wait: 0,\n      dns: 1,\n      tcp: 101,\n      tls: 124,\n      request: 0,\n      firstByte: 242,\n      download: 4,\n      total: 472\n    }\n  },\n  name: 'HTTPError',\n  options: {\n    request: undefined,\n    agent: { http: undefined, https: undefined, http2: undefined },\n    h2session: undefined,\n    decompress: true,\n    timeout: {\n      connect: undefined,\n      lookup: undefined,\n      read: undefined,\n      request: undefined,\n      response: undefined,\n      secureConnect: undefined,\n      send: undefined,\n      socket: undefined\n    },\n    prefixUrl: '',\n    body: undefined,\n    form: undefined,\n    json: undefined,\n    cookieJar: undefined,\n    ignoreInvalidCookies: false,\n    searchParams: undefined,\n    dnsLookup: undefined,\n    dnsCache: undefined,\n    context: {},\n    hooks: {\n      init: [ [length]: 0 ],\n      beforeRequest: [ [length]: 0 ],\n      beforeError: [ [length]: 0 ],\n      beforeRedirect: [ [length]: 0 ],\n      beforeRetry: [ [length]: 0 ],\n      afterResponse: [ [length]: 0 ]\n    },\n    followRedirect: true,\n    maxRedirects: 10,\n    cache: undefined,\n    throwHttpErrors: true,\n    username: '',\n    password: '',\n    http2: false,\n    allowGetBody: false,\n    headers: {\n      'user-agent': 'got (https://github.com/sindresorhus/got)',\n      authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n      accept: 'application/json',\n      'accept-encoding': 'gzip, deflate, br'\n    },\n    methodRewriting: false,\n    dnsLookupIpVersion: undefined,\n    parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n    stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n    retry: {\n      limit: 2,\n      methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n      statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n      errorCodes: [\n        'ETIMEDOUT',\n        'ECONNRESET',\n        'EADDRINUSE',\n        'ECONNREFUSED',\n        'EPIPE',\n        'ENOTFOUND',\n        'ENETUNREACH',\n        'EAI_AGAIN',\n        [length]: 8\n      ],\n      maxRetryAfter: undefined,\n      calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n      backoffLimit: Infinity,\n      noise: 100\n    },\n    localAddress: undefined,\n    method: 'GET',\n    createConnection: undefined,\n    cacheOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined\n    },\n    https: {\n      alpnProtocols: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: undefined,\n      certificateAuthority: undefined,\n      key: undefined,\n      certificate: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      signatureAlgorithms: undefined,\n      tlsSessionLifetime: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      certificateRevocationLists: undefined\n    },\n    encoding: undefined,\n    resolveBodyOnly: false,\n    isStream: false,\n    responseType: 'json',\n    url: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    pagination: {\n      transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n      paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n      filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n      shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n      countLimit: Infinity,\n      backoff: 0,\n      requestLimit: 10000,\n      stackAllItems: false\n    },\n    setHost: true,\n    maxHeaderSize: undefined,\n    signal: undefined,\n    enableUnixSockets: false\n  }\n}","timestamp":"2024-11-05 19:50:02"}
{"level":"error","message":"Error occurred: <ref *2> HTTPError: Response code 401 (Unauthorized)\n    at Request.<anonymous> (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/as-promise/index.js:92:42)\n    at Object.onceWrapper (node:events:635:26)\n    at Request.emit (node:events:532:35)\n    at Request._onResponseBase (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:609:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Request._onResponse (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:649:13) {\n  [stack]: [Getter/Setter],\n  [message]: 'Response code 401 (Unauthorized)',\n  [cause]: {},\n  input: undefined,\n  code: 'ERR_NON_2XX_3XX_RESPONSE',\n  [response]: <ref *3> PassThrough {\n    _events: {\n      close: undefined,\n      error: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 1, [name]: '' }\n      },\n      prefinish: <ref *1> [Function: prefinish] {\n        [length]: 0,\n        [name]: 'prefinish',\n        [prototype]: { [constructor]: [Circular *1] }\n      },\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n      unpipe: undefined,\n      aborted: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 0, [name]: '' }\n      }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 65536,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 9996040,\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 65536,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466504,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kWriteCbValue)]: null,\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n    _maxListeners: undefined,\n    _eventsCount: 4,\n    socket: [Getter/Setter],\n    httpVersionMajor: [Getter/Setter],\n    httpVersionMinor: [Getter/Setter],\n    httpVersion: [Getter/Setter],\n    complete: [Getter/Setter],\n    rawHeaders: [Getter/Setter],\n    rawTrailers: [Getter/Setter],\n    joinDuplicateHeaders: [Getter/Setter],\n    aborted: [Getter/Setter],\n    upgrade: [Getter/Setter],\n    url: [Getter/Setter],\n    method: [Getter/Setter],\n    statusCode: [Getter/Setter],\n    statusMessage: [Getter/Setter],\n    client: [Getter/Setter],\n    _consuming: [Getter/Setter],\n    _dumped: [Getter/Setter],\n    req: [Getter/Setter],\n    timings: [Getter/Setter],\n    headers: [Getter/Setter],\n    setTimeout: [Getter/Setter],\n    trailers: [Getter/Setter],\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    request: Request {\n      _events: {\n        close: undefined,\n        error: undefined,\n        prefinish: undefined,\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: undefined,\n        pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n        newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n        response: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        retry: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        request: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        redirect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        uploadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        downloadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n        pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 0,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 1574906,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 0,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466746,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      constructor: undefined,\n      _noPipe: true,\n      options: {\n        request: undefined,\n        agent: { http: undefined, https: undefined, http2: undefined },\n        h2session: undefined,\n        decompress: true,\n        timeout: {\n          connect: undefined,\n          lookup: undefined,\n          read: undefined,\n          request: undefined,\n          response: undefined,\n          secureConnect: undefined,\n          send: undefined,\n          socket: undefined\n        },\n        prefixUrl: '',\n        body: undefined,\n        form: undefined,\n        json: undefined,\n        cookieJar: undefined,\n        ignoreInvalidCookies: false,\n        searchParams: undefined,\n        dnsLookup: undefined,\n        dnsCache: undefined,\n        context: {},\n        hooks: {\n          init: [ [length]: 0 ],\n          beforeRequest: [ [length]: 0 ],\n          beforeError: [ [length]: 0 ],\n          beforeRedirect: [ [length]: 0 ],\n          beforeRetry: [ [length]: 0 ],\n          afterResponse: [ [length]: 0 ]\n        },\n        followRedirect: true,\n        maxRedirects: 10,\n        cache: undefined,\n        throwHttpErrors: true,\n        username: '',\n        password: '',\n        http2: false,\n        allowGetBody: false,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        methodRewriting: false,\n        dnsLookupIpVersion: undefined,\n        parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n        stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n        retry: {\n          limit: 2,\n          methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n          statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n          errorCodes: [\n            'ETIMEDOUT',\n            'ECONNRESET',\n            'EADDRINUSE',\n            'ECONNREFUSED',\n            'EPIPE',\n            'ENOTFOUND',\n            'ENETUNREACH',\n            'EAI_AGAIN',\n            [length]: 8\n          ],\n          maxRetryAfter: undefined,\n          calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n          backoffLimit: Infinity,\n          noise: 100\n        },\n        localAddress: undefined,\n        method: 'GET',\n        createConnection: undefined,\n        cacheOptions: {\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined\n        },\n        https: {\n          alpnProtocols: undefined,\n          rejectUnauthorized: undefined,\n          checkServerIdentity: undefined,\n          certificateAuthority: undefined,\n          key: undefined,\n          certificate: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          ciphers: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          signatureAlgorithms: undefined,\n          tlsSessionLifetime: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          certificateRevocationLists: undefined\n        },\n        encoding: undefined,\n        resolveBodyOnly: false,\n        isStream: false,\n        responseType: 'json',\n        url: URL {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          origin: 'https://api.spotify.com',\n          protocol: 'https:',\n          username: '',\n          password: '',\n          host: 'api.spotify.com',\n          hostname: 'api.spotify.com',\n          port: '',\n          pathname: '/v1/me/playlists',\n          search: '?limit=50',\n          searchParams: URLSearchParams { 'limit' => '50' },\n          hash: '',\n          [Symbol(context)]: URLContext {\n            href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n            protocol_end: 6,\n            username_end: 8,\n            host_start: 8,\n            host_end: 23,\n            pathname_start: 23,\n            search_start: 39,\n            hash_start: 4294967295,\n            port: 4294967295,\n            scheme_type: 2,\n            [hasPort]: [Getter],\n            [hasSearch]: [Getter],\n            [hasHash]: [Getter]\n          }\n        },\n        pagination: {\n          transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n          paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n          filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n          shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n          countLimit: Infinity,\n          backoff: 0,\n          requestLimit: 10000,\n          stackAllItems: false\n        },\n        setHost: true,\n        maxHeaderSize: undefined,\n        signal: undefined,\n        enableUnixSockets: false\n      },\n      response: [Circular *3],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      retryCount: 0,\n      _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _downloadedSize: 81,\n      _uploadedSize: 0,\n      _stopReading: true,\n      _pipedServerResponses: Set(0) {},\n      _request: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: IncomingMessage {\n          _events: [Object],\n          _readableState: [ReadableState],\n          _maxListeners: undefined,\n          socket: null,\n          httpVersionMajor: 1,\n          httpVersionMinor: 1,\n          httpVersion: '1.1',\n          complete: true,\n          rawHeaders: [Array],\n          rawTrailers: [Array],\n          joinDuplicateHeaders: undefined,\n          aborted: false,\n          upgrade: false,\n          url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          method: null,\n          statusCode: 401,\n          statusMessage: 'Unauthorized',\n          client: [TLSSocket],\n          _consuming: false,\n          _dumped: false,\n          req: [Circular *4],\n          _eventsCount: 3,\n          timings: [Object],\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kHeaders)]: [Object],\n          [Symbol(kHeadersCount)]: 30,\n          [Symbol(kTrailers)]: null,\n          [Symbol(kTrailersCount)]: 0,\n          [connection]: [Getter/Setter],\n          [headers]: [Getter/Setter],\n          [headersDistinct]: [Getter/Setter],\n          [trailers]: [Getter/Setter],\n          [trailersDistinct]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableDidRead]: [Getter],\n          [readableAborted]: [Getter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readableEnded]: [Getter]\n        },\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796601585,\n          socket: 1730796601585,\n          lookup: 1730796601586,\n          connect: 1730796601687,\n          secureConnect: 1730796601811,\n          upload: 1730796601811,\n          response: 1730796602053,\n          end: 1730796602057,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3687155,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88477,\n            [Symbol(triggerId)]: 88473,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _responseSize: 81,\n      _bodySize: 0,\n      _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n      _isFromCache: false,\n      _cannotHaveBody: true,\n      _triggerRead: true,\n      _cancelTimeouts: [Function: cancelTimeouts] {\n        [length]: 0,\n        [name]: 'cancelTimeouts'\n      },\n      _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _nativeResponse: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:01 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3687155,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88477,\n            [Symbol(triggerId)]: 88473,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: <ref *4> ClientRequest {\n          _events: [Object: null prototype],\n          _eventsCount: 8,\n          _maxListeners: undefined,\n          outputData: [Array],\n          outputSize: 0,\n          writable: true,\n          destroyed: true,\n          _last: true,\n          chunkedEncoding: false,\n          shouldKeepAlive: true,\n          maxRequestsOnConnectionReached: false,\n          _defaultKeepAlive: true,\n          useChunkedEncodingByDefault: false,\n          sendDate: false,\n          _removedConnection: false,\n          _removedContLen: false,\n          _removedTE: false,\n          strictContentLength: false,\n          _contentLength: 0,\n          _hasBody: true,\n          _trailer: '',\n          finished: true,\n          _headerSent: true,\n          _closed: true,\n          _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n            'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n            'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n            'accept: application/json\\r\\n' +\n            'accept-encoding: gzip, deflate, br\\r\\n' +\n            'Host: api.spotify.com\\r\\n' +\n            'Connection: keep-alive\\r\\n' +\n            '\\r\\n',\n          _keepAliveTimeout: 0,\n          _onPendingData: [Function],\n          agent: [Agent],\n          socketPath: undefined,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          insecureHTTPParser: undefined,\n          joinDuplicateHeaders: undefined,\n          path: '/v1/me/playlists?limit=50',\n          _ended: true,\n          res: [Circular *5],\n          aborted: false,\n          timeoutCb: null,\n          upgradeOrConnect: false,\n          parser: null,\n          maxHeadersCount: null,\n          reusedSocket: false,\n          host: 'api.spotify.com',\n          protocol: 'https:',\n          timings: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(kNeedDrain)]: false,\n          [Symbol(corked)]: 0,\n          [Symbol(kChunkedBuffer)]: [Array],\n          [Symbol(kChunkedLength)]: 0,\n          [Symbol(kSocket)]: [TLSSocket],\n          [Symbol(kOutHeaders)]: [Object: null prototype],\n          [Symbol(errored)]: null,\n          [Symbol(kHighWaterMark)]: 65536,\n          [Symbol(kRejectNonStandardBodyWrites)]: false,\n          [Symbol(kUniqueHeaders)]: null,\n          [Symbol(reentry)]: true,\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [writableFinished]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableLength]: [Getter],\n          [writableHighWaterMark]: [Getter],\n          [writableCorked]: [Getter],\n          [_headers]: [Getter/Setter],\n          [connection]: [Getter/Setter],\n          [socket]: [Getter/Setter],\n          [_headerNames]: [Getter/Setter],\n          headersSent: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter]\n        },\n        _eventsCount: 3,\n        timings: {\n          start: 1730796601585,\n          socket: 1730796601585,\n          lookup: 1730796601586,\n          connect: 1730796601687,\n          secureConnect: 1730796601811,\n          upload: 1730796601811,\n          response: 1730796602053,\n          end: 1730796602057,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:01 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      _flushed: true,\n      _aborted: false,\n      _requestInitialized: true,\n      _jobs: [ [length]: 0 ],\n      _eventsCount: 10,\n      _requestOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined,\n        ALPNProtocols: undefined,\n        ca: undefined,\n        cert: undefined,\n        key: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: [Function: checkServerIdentity] {\n          [length]: 2,\n          [name]: 'checkServerIdentity',\n          [prototype]: [Object]\n        },\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        sigalgs: undefined,\n        sessionTimeout: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        crl: undefined,\n        lookup: undefined,\n        family: undefined,\n        agent: undefined,\n        setHost: true,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        localAddress: undefined,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        createConnection: undefined,\n        timeout: undefined,\n        h2session: undefined\n      },\n      flush: [AsyncFunction (anonymous)] {\n        [length]: 0,\n        [name]: '',\n        [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [ip]: [Getter],\n      [isAborted]: [Getter],\n      [socket]: [Getter],\n      [downloadProgress]: [Getter],\n      [uploadProgress]: [Getter],\n      [timings]: [Getter],\n      [isFromCache]: [Getter],\n      [reusedSocket]: [Getter],\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [readableEnded]: [Getter]\n    },\n    isFromCache: false,\n    ip: '35.186.224.24',\n    retryCount: 0,\n    ok: false,\n    rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n    body: { error: { status: 401, message: 'The access token expired' } },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [Symbol(kCallback)]: null,\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter]\n  },\n  [request]: <ref *6> Request {\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: undefined,\n      pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n      newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n      response: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      retry: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 2, [name]: '' }\n      },\n      request: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      redirect: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      uploadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      downloadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n      pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 0,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 1574906,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 0,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466746,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    constructor: undefined,\n    _noPipe: true,\n    options: {\n      request: undefined,\n      agent: { http: undefined, https: undefined, http2: undefined },\n      h2session: undefined,\n      decompress: true,\n      timeout: {\n        connect: undefined,\n        lookup: undefined,\n        read: undefined,\n        request: undefined,\n        response: undefined,\n        secureConnect: undefined,\n        send: undefined,\n        socket: undefined\n      },\n      prefixUrl: '',\n      body: undefined,\n      form: undefined,\n      json: undefined,\n      cookieJar: undefined,\n      ignoreInvalidCookies: false,\n      searchParams: undefined,\n      dnsLookup: undefined,\n      dnsCache: undefined,\n      context: {},\n      hooks: {\n        init: [ [length]: 0 ],\n        beforeRequest: [ [length]: 0 ],\n        beforeError: [ [length]: 0 ],\n        beforeRedirect: [ [length]: 0 ],\n        beforeRetry: [ [length]: 0 ],\n        afterResponse: [ [length]: 0 ]\n      },\n      followRedirect: true,\n      maxRedirects: 10,\n      cache: undefined,\n      throwHttpErrors: true,\n      username: '',\n      password: '',\n      http2: false,\n      allowGetBody: false,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      methodRewriting: false,\n      dnsLookupIpVersion: undefined,\n      parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n      stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n      retry: {\n        limit: 2,\n        methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n        statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n        errorCodes: [\n          'ETIMEDOUT',\n          'ECONNRESET',\n          'EADDRINUSE',\n          'ECONNREFUSED',\n          'EPIPE',\n          'ENOTFOUND',\n          'ENETUNREACH',\n          'EAI_AGAIN',\n          [length]: 8\n        ],\n        maxRetryAfter: undefined,\n        calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n        backoffLimit: Infinity,\n        noise: 100\n      },\n      localAddress: undefined,\n      method: 'GET',\n      createConnection: undefined,\n      cacheOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined\n      },\n      https: {\n        alpnProtocols: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: undefined,\n        certificateAuthority: undefined,\n        key: undefined,\n        certificate: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        signatureAlgorithms: undefined,\n        tlsSessionLifetime: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        certificateRevocationLists: undefined\n      },\n      encoding: undefined,\n      resolveBodyOnly: false,\n      isStream: false,\n      responseType: 'json',\n      url: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      pagination: {\n        transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n        paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n        filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n        shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n        countLimit: Infinity,\n        backoff: 0,\n        requestLimit: 10000,\n        stackAllItems: false\n      },\n      setHost: true,\n      maxHeaderSize: undefined,\n      signal: undefined,\n      enableUnixSockets: false\n    },\n    response: <ref *3> PassThrough {\n      _events: {\n        close: undefined,\n        error: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        prefinish: <ref *1> [Function: prefinish] {\n          [length]: 0,\n          [name]: 'prefinish',\n          [prototype]: [Object]\n        },\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n        unpipe: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 9996040,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 65536,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466504,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kWriteCbValue)]: null,\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n      _maxListeners: undefined,\n      _eventsCount: 4,\n      socket: [Getter/Setter],\n      httpVersionMajor: [Getter/Setter],\n      httpVersionMinor: [Getter/Setter],\n      httpVersion: [Getter/Setter],\n      complete: [Getter/Setter],\n      rawHeaders: [Getter/Setter],\n      rawTrailers: [Getter/Setter],\n      joinDuplicateHeaders: [Getter/Setter],\n      aborted: [Getter/Setter],\n      upgrade: [Getter/Setter],\n      url: [Getter/Setter],\n      method: [Getter/Setter],\n      statusCode: [Getter/Setter],\n      statusMessage: [Getter/Setter],\n      client: [Getter/Setter],\n      _consuming: [Getter/Setter],\n      _dumped: [Getter/Setter],\n      req: [Getter/Setter],\n      timings: [Getter/Setter],\n      headers: [Getter/Setter],\n      setTimeout: [Getter/Setter],\n      trailers: [Getter/Setter],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      request: [Circular *6],\n      isFromCache: false,\n      ip: '35.186.224.24',\n      retryCount: 0,\n      ok: false,\n      rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n      body: { error: { status: 401, message: 'The access token expired' } },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kCallback)]: null,\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter]\n    },\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    retryCount: 0,\n    _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _downloadedSize: 81,\n    _uploadedSize: 0,\n    _stopReading: true,\n    _pipedServerResponses: Set(0) {},\n    _request: <ref *4> ClientRequest {\n      _events: [Object: null prototype] {\n        socket: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        error: [ [Function], [Function], [length]: 2 ],\n        connect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        continue: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        information: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        upgrade: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        finish: [Function: requestOnFinish] {\n          [length]: 0,\n          [name]: 'requestOnFinish',\n          [prototype]: [Object]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      outputData: [ [length]: 0 ],\n      outputSize: 0,\n      writable: true,\n      destroyed: true,\n      _last: true,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: false,\n      sendDate: false,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: 0,\n      _hasBody: true,\n      _trailer: '',\n      finished: true,\n      _headerSent: true,\n      _closed: true,\n      _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n        'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n        'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n        'accept: application/json\\r\\n' +\n        'accept-encoding: gzip, deflate, br\\r\\n' +\n        'Host: api.spotify.com\\r\\n' +\n        'Connection: keep-alive\\r\\n' +\n        '\\r\\n',\n      _keepAliveTimeout: 0,\n      _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n      agent: Agent {\n        _events: [Object: null prototype] {\n          free: [Function],\n          newListener: [Function]\n        },\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        defaultPort: 443,\n        protocol: 'https:',\n        options: [Object: null prototype] {\n          keepAlive: true,\n          scheduling: 'lifo',\n          timeout: 5000,\n          noDelay: true,\n          path: null\n        },\n        requests: [Object: null prototype] {},\n        sockets: [Object: null prototype] {},\n        freeSockets: [Object: null prototype] {\n          'api.spotify.com:443:::::::::::::::::::::': [Array]\n        },\n        keepAliveMsecs: 1000,\n        keepAlive: true,\n        maxSockets: Infinity,\n        maxFreeSockets: 256,\n        scheduling: 'lifo',\n        maxTotalSockets: Infinity,\n        totalSocketCount: 1,\n        maxCachedSessions: 100,\n        _sessionCache: { map: [Object], list: [Array] },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false\n      },\n      socketPath: undefined,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      joinDuplicateHeaders: undefined,\n      path: '/v1/me/playlists?limit=50',\n      _ended: true,\n      res: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:01 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3687155,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88477,\n            [Symbol(triggerId)]: 88473,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: [Circular *4],\n        _eventsCount: 3,\n        timings: {\n          start: 1730796601585,\n          socket: 1730796601585,\n          lookup: 1730796601586,\n          connect: 1730796601687,\n          secureConnect: 1730796601811,\n          upload: 1730796601811,\n          response: 1730796602053,\n          end: 1730796602057,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:01 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      aborted: false,\n      timeoutCb: null,\n      upgradeOrConnect: false,\n      parser: null,\n      maxHeadersCount: null,\n      reusedSocket: false,\n      host: 'api.spotify.com',\n      protocol: 'https:',\n      timings: {\n        start: 1730796601585,\n        socket: 1730796601585,\n        lookup: 1730796601586,\n        connect: 1730796601687,\n        secureConnect: 1730796601811,\n        upload: 1730796601811,\n        response: 1730796602053,\n        end: 1730796602057,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 0,\n          dns: 1,\n          tcp: 101,\n          tls: 124,\n          request: 0,\n          firstByte: 242,\n          download: 4,\n          total: 472\n        }\n      },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n      [Symbol(kChunkedLength)]: 0,\n      [Symbol(kSocket)]: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 4b 02 01 01 02 02 03 04 04 02 13 02 04 20 ba 75 a3 bd 9d e7 39 87 14 93 08 89 22 e5 42 e7 43 c4 01 3f 16 12 68 50 86 c1 f2 23 77 31 71 ac 04 ... 2077 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3687155,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88477,\n          [Symbol(triggerId)]: 88473,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 4b 02 01 01 02 02 03 04 04 02 13 02 04 20 ba 75 a3 bd 9d e7 39 87 14 93 08 89 22 e5 42 e7 43 c4 01 3f 16 12 68 50 86 c1 f2 23 77 31 71 ac 04 ... 2077 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      [Symbol(kOutHeaders)]: [Object: null prototype] {\n        'user-agent': [\n          'user-agent',\n          'got (https://github.com/sindresorhus/got)',\n          [length]: 2\n        ],\n        authorization: [\n          'authorization',\n          'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          [length]: 2\n        ],\n        accept: [ 'accept', 'application/json', [length]: 2 ],\n        'accept-encoding': [ 'accept-encoding', 'gzip, deflate, br', [length]: 2 ],\n        host: [ 'Host', 'api.spotify.com', [length]: 2 ]\n      },\n      [Symbol(errored)]: null,\n      [Symbol(kHighWaterMark)]: 65536,\n      [Symbol(kRejectNonStandardBodyWrites)]: false,\n      [Symbol(kUniqueHeaders)]: null,\n      [Symbol(reentry)]: true,\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [writableFinished]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableLength]: [Getter],\n      [writableHighWaterMark]: [Getter],\n      [writableCorked]: [Getter],\n      [_headers]: [Getter/Setter],\n      [connection]: [Getter/Setter],\n      [socket]: [Getter/Setter],\n      [_headerNames]: [Getter/Setter],\n      headersSent: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter]\n    },\n    _responseSize: 81,\n    _bodySize: 0,\n    _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n    _isFromCache: false,\n    _cannotHaveBody: true,\n    _triggerRead: true,\n    _cancelTimeouts: [Function: cancelTimeouts] { [length]: 0, [name]: 'cancelTimeouts' },\n    _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _nativeResponse: <ref *5> IncomingMessage {\n      _events: {\n        close: undefined,\n        error: undefined,\n        data: undefined,\n        end: [Function: responseOnEnd] {\n          [length]: 0,\n          [name]: 'responseOnEnd',\n          [prototype]: [Object]\n        },\n        readable: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 110892924,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _maxListeners: undefined,\n      socket: null,\n      httpVersionMajor: 1,\n      httpVersionMinor: 1,\n      httpVersion: '1.1',\n      complete: true,\n      rawHeaders: [\n        'www-authenticate',\n        'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin',\n        '*',\n        'access-control-allow-headers',\n        'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods',\n        'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials',\n        'true',\n        'access-control-max-age',\n        '604800',\n        'content-type',\n        'application/json',\n        'content-encoding',\n        'gzip',\n        'strict-transport-security',\n        'max-age=31536000',\n        'x-content-type-options',\n        'nosniff',\n        'date',\n        'Tue, 05 Nov 2024 08:50:01 GMT',\n        'server',\n        'envoy',\n        'Via',\n        'HTTP/2 edgeproxy, 1.1 google',\n        'Alt-Svc',\n        'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'Transfer-Encoding',\n        'chunked',\n        [length]: 30\n      ],\n      rawTrailers: [ [length]: 0 ],\n      joinDuplicateHeaders: undefined,\n      aborted: false,\n      upgrade: false,\n      url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      method: null,\n      statusCode: 401,\n      statusMessage: 'Unauthorized',\n      client: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 4b 02 01 01 02 02 03 04 04 02 13 02 04 20 ba 75 a3 bd 9d e7 39 87 14 93 08 89 22 e5 42 e7 43 c4 01 3f 16 12 68 50 86 c1 f2 23 77 31 71 ac 04 ... 2077 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3687155,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88477,\n          [Symbol(triggerId)]: 88473,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 4b 02 01 01 02 02 03 04 04 02 13 02 04 20 ba 75 a3 bd 9d e7 39 87 14 93 08 89 22 e5 42 e7 43 c4 01 3f 16 12 68 50 86 c1 f2 23 77 31 71 ac 04 ... 2077 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      _consuming: false,\n      _dumped: false,\n      req: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: [Circular *5],\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796601585,\n          socket: 1730796601585,\n          lookup: 1730796601586,\n          connect: 1730796601687,\n          secureConnect: 1730796601811,\n          upload: 1730796601811,\n          response: 1730796602053,\n          end: 1730796602057,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: <ref *7> TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3687155,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88477,\n            [Symbol(triggerId)]: 88473,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _eventsCount: 3,\n      timings: {\n        start: 1730796601585,\n        socket: 1730796601585,\n        lookup: 1730796601586,\n        connect: 1730796601687,\n        secureConnect: 1730796601811,\n        upload: 1730796601811,\n        response: 1730796602053,\n        end: 1730796602057,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 0,\n          dns: 1,\n          tcp: 101,\n          tls: 124,\n          request: 0,\n          firstByte: 242,\n          download: 4,\n          total: 472\n        }\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kHeaders)]: {\n        'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin': '*',\n        'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials': 'true',\n        'access-control-max-age': '604800',\n        'content-type': 'application/json',\n        'content-encoding': 'gzip',\n        'strict-transport-security': 'max-age=31536000',\n        'x-content-type-options': 'nosniff',\n        date: 'Tue, 05 Nov 2024 08:50:01 GMT',\n        server: 'envoy',\n        via: 'HTTP/2 edgeproxy, 1.1 google',\n        'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'transfer-encoding': 'chunked'\n      },\n      [Symbol(kHeadersCount)]: 30,\n      [Symbol(kTrailers)]: null,\n      [Symbol(kTrailersCount)]: 0,\n      [connection]: [Getter/Setter],\n      [headers]: [Getter/Setter],\n      [headersDistinct]: [Getter/Setter],\n      [trailers]: [Getter/Setter],\n      [trailersDistinct]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readableEnded]: [Getter]\n    },\n    _flushed: true,\n    _aborted: false,\n    _requestInitialized: true,\n    _jobs: [ [length]: 0 ],\n    _eventsCount: 10,\n    _requestOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined,\n      ALPNProtocols: undefined,\n      ca: undefined,\n      cert: undefined,\n      key: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: <ref *8> [Function: checkServerIdentity] {\n        [length]: 2,\n        [name]: 'checkServerIdentity',\n        [prototype]: { [constructor]: [Circular *8] }\n      },\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      sigalgs: undefined,\n      sessionTimeout: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      crl: undefined,\n      lookup: undefined,\n      family: undefined,\n      agent: undefined,\n      setHost: true,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      localAddress: undefined,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      createConnection: undefined,\n      timeout: undefined,\n      h2session: undefined\n    },\n    flush: [AsyncFunction (anonymous)] {\n      [length]: 0,\n      [name]: '',\n      [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n    },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [ip]: [Getter],\n    [isAborted]: [Getter],\n    [socket]: [Getter],\n    [downloadProgress]: [Getter],\n    [uploadProgress]: [Getter],\n    [timings]: [Getter],\n    [isFromCache]: [Getter],\n    [reusedSocket]: [Getter],\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter],\n    [readable]: [Getter/Setter],\n    [readableDidRead]: [Getter],\n    [readableAborted]: [Getter],\n    [readableHighWaterMark]: [Getter],\n    [readableBuffer]: [Getter],\n    [readableFlowing]: [Getter/Setter],\n    [readableLength]: [Getter],\n    [readableObjectMode]: [Getter],\n    [readableEncoding]: [Getter],\n    [errored]: [Getter],\n    [closed]: [Getter],\n    [readableEnded]: [Getter]\n  },\n  timings: {\n    start: 1730796601585,\n    socket: 1730796601585,\n    lookup: 1730796601586,\n    connect: 1730796601687,\n    secureConnect: 1730796601811,\n    upload: 1730796601811,\n    response: 1730796602053,\n    end: 1730796602057,\n    error: undefined,\n    abort: undefined,\n    phases: {\n      wait: 0,\n      dns: 1,\n      tcp: 101,\n      tls: 124,\n      request: 0,\n      firstByte: 242,\n      download: 4,\n      total: 472\n    }\n  },\n  name: 'HTTPError',\n  options: {\n    request: undefined,\n    agent: { http: undefined, https: undefined, http2: undefined },\n    h2session: undefined,\n    decompress: true,\n    timeout: {\n      connect: undefined,\n      lookup: undefined,\n      read: undefined,\n      request: undefined,\n      response: undefined,\n      secureConnect: undefined,\n      send: undefined,\n      socket: undefined\n    },\n    prefixUrl: '',\n    body: undefined,\n    form: undefined,\n    json: undefined,\n    cookieJar: undefined,\n    ignoreInvalidCookies: false,\n    searchParams: undefined,\n    dnsLookup: undefined,\n    dnsCache: undefined,\n    context: {},\n    hooks: {\n      init: [ [length]: 0 ],\n      beforeRequest: [ [length]: 0 ],\n      beforeError: [ [length]: 0 ],\n      beforeRedirect: [ [length]: 0 ],\n      beforeRetry: [ [length]: 0 ],\n      afterResponse: [ [length]: 0 ]\n    },\n    followRedirect: true,\n    maxRedirects: 10,\n    cache: undefined,\n    throwHttpErrors: true,\n    username: '',\n    password: '',\n    http2: false,\n    allowGetBody: false,\n    headers: {\n      'user-agent': 'got (https://github.com/sindresorhus/got)',\n      authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n      accept: 'application/json',\n      'accept-encoding': 'gzip, deflate, br'\n    },\n    methodRewriting: false,\n    dnsLookupIpVersion: undefined,\n    parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n    stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n    retry: {\n      limit: 2,\n      methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n      statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n      errorCodes: [\n        'ETIMEDOUT',\n        'ECONNRESET',\n        'EADDRINUSE',\n        'ECONNREFUSED',\n        'EPIPE',\n        'ENOTFOUND',\n        'ENETUNREACH',\n        'EAI_AGAIN',\n        [length]: 8\n      ],\n      maxRetryAfter: undefined,\n      calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n      backoffLimit: Infinity,\n      noise: 100\n    },\n    localAddress: undefined,\n    method: 'GET',\n    createConnection: undefined,\n    cacheOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined\n    },\n    https: {\n      alpnProtocols: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: undefined,\n      certificateAuthority: undefined,\n      key: undefined,\n      certificate: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      signatureAlgorithms: undefined,\n      tlsSessionLifetime: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      certificateRevocationLists: undefined\n    },\n    encoding: undefined,\n    resolveBodyOnly: false,\n    isStream: false,\n    responseType: 'json',\n    url: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    pagination: {\n      transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n      paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n      filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n      shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n      countLimit: Infinity,\n      backoff: 0,\n      requestLimit: 10000,\n      stackAllItems: false\n    },\n    setHost: true,\n    maxHeaderSize: undefined,\n    signal: undefined,\n    enableUnixSockets: false\n  }\n}","timestamp":"2024-11-05 19:50:02"}
{"level":"error","message":"Error fetching playlists: <ref *2> HTTPError: Response code 401 (Unauthorized)\n    at Request.<anonymous> (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/as-promise/index.js:92:42)\n    at Object.onceWrapper (node:events:635:26)\n    at Request.emit (node:events:532:35)\n    at Request._onResponseBase (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:609:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Request._onResponse (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:649:13) {\n  [stack]: [Getter/Setter],\n  [message]: 'Response code 401 (Unauthorized)',\n  [cause]: {},\n  input: undefined,\n  code: 'ERR_NON_2XX_3XX_RESPONSE',\n  [response]: <ref *3> PassThrough {\n    _events: {\n      close: undefined,\n      error: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 1, [name]: '' }\n      },\n      prefinish: <ref *1> [Function: prefinish] {\n        [length]: 0,\n        [name]: 'prefinish',\n        [prototype]: { [constructor]: [Circular *1] }\n      },\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n      unpipe: undefined,\n      aborted: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 0, [name]: '' }\n      }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 65536,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 9996040,\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 65536,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466504,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kWriteCbValue)]: null,\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n    _maxListeners: undefined,\n    _eventsCount: 4,\n    socket: [Getter/Setter],\n    httpVersionMajor: [Getter/Setter],\n    httpVersionMinor: [Getter/Setter],\n    httpVersion: [Getter/Setter],\n    complete: [Getter/Setter],\n    rawHeaders: [Getter/Setter],\n    rawTrailers: [Getter/Setter],\n    joinDuplicateHeaders: [Getter/Setter],\n    aborted: [Getter/Setter],\n    upgrade: [Getter/Setter],\n    url: [Getter/Setter],\n    method: [Getter/Setter],\n    statusCode: [Getter/Setter],\n    statusMessage: [Getter/Setter],\n    client: [Getter/Setter],\n    _consuming: [Getter/Setter],\n    _dumped: [Getter/Setter],\n    req: [Getter/Setter],\n    timings: [Getter/Setter],\n    headers: [Getter/Setter],\n    setTimeout: [Getter/Setter],\n    trailers: [Getter/Setter],\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    request: Request {\n      _events: {\n        close: undefined,\n        error: undefined,\n        prefinish: undefined,\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: undefined,\n        pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n        newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n        response: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        retry: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        request: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        redirect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        uploadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        downloadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n        pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 0,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 1574906,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 0,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466746,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      constructor: undefined,\n      _noPipe: true,\n      options: {\n        request: undefined,\n        agent: { http: undefined, https: undefined, http2: undefined },\n        h2session: undefined,\n        decompress: true,\n        timeout: {\n          connect: undefined,\n          lookup: undefined,\n          read: undefined,\n          request: undefined,\n          response: undefined,\n          secureConnect: undefined,\n          send: undefined,\n          socket: undefined\n        },\n        prefixUrl: '',\n        body: undefined,\n        form: undefined,\n        json: undefined,\n        cookieJar: undefined,\n        ignoreInvalidCookies: false,\n        searchParams: undefined,\n        dnsLookup: undefined,\n        dnsCache: undefined,\n        context: {},\n        hooks: {\n          init: [ [length]: 0 ],\n          beforeRequest: [ [length]: 0 ],\n          beforeError: [ [length]: 0 ],\n          beforeRedirect: [ [length]: 0 ],\n          beforeRetry: [ [length]: 0 ],\n          afterResponse: [ [length]: 0 ]\n        },\n        followRedirect: true,\n        maxRedirects: 10,\n        cache: undefined,\n        throwHttpErrors: true,\n        username: '',\n        password: '',\n        http2: false,\n        allowGetBody: false,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        methodRewriting: false,\n        dnsLookupIpVersion: undefined,\n        parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n        stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n        retry: {\n          limit: 2,\n          methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n          statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n          errorCodes: [\n            'ETIMEDOUT',\n            'ECONNRESET',\n            'EADDRINUSE',\n            'ECONNREFUSED',\n            'EPIPE',\n            'ENOTFOUND',\n            'ENETUNREACH',\n            'EAI_AGAIN',\n            [length]: 8\n          ],\n          maxRetryAfter: undefined,\n          calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n          backoffLimit: Infinity,\n          noise: 100\n        },\n        localAddress: undefined,\n        method: 'GET',\n        createConnection: undefined,\n        cacheOptions: {\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined\n        },\n        https: {\n          alpnProtocols: undefined,\n          rejectUnauthorized: undefined,\n          checkServerIdentity: undefined,\n          certificateAuthority: undefined,\n          key: undefined,\n          certificate: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          ciphers: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          signatureAlgorithms: undefined,\n          tlsSessionLifetime: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          certificateRevocationLists: undefined\n        },\n        encoding: undefined,\n        resolveBodyOnly: false,\n        isStream: false,\n        responseType: 'json',\n        url: URL {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          origin: 'https://api.spotify.com',\n          protocol: 'https:',\n          username: '',\n          password: '',\n          host: 'api.spotify.com',\n          hostname: 'api.spotify.com',\n          port: '',\n          pathname: '/v1/me/playlists',\n          search: '?limit=50',\n          searchParams: URLSearchParams { 'limit' => '50' },\n          hash: '',\n          [Symbol(context)]: URLContext {\n            href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n            protocol_end: 6,\n            username_end: 8,\n            host_start: 8,\n            host_end: 23,\n            pathname_start: 23,\n            search_start: 39,\n            hash_start: 4294967295,\n            port: 4294967295,\n            scheme_type: 2,\n            [hasPort]: [Getter],\n            [hasSearch]: [Getter],\n            [hasHash]: [Getter]\n          }\n        },\n        pagination: {\n          transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n          paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n          filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n          shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n          countLimit: Infinity,\n          backoff: 0,\n          requestLimit: 10000,\n          stackAllItems: false\n        },\n        setHost: true,\n        maxHeaderSize: undefined,\n        signal: undefined,\n        enableUnixSockets: false\n      },\n      response: [Circular *3],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      retryCount: 0,\n      _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _downloadedSize: 81,\n      _uploadedSize: 0,\n      _stopReading: true,\n      _pipedServerResponses: Set(0) {},\n      _request: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: IncomingMessage {\n          _events: [Object],\n          _readableState: [ReadableState],\n          _maxListeners: undefined,\n          socket: null,\n          httpVersionMajor: 1,\n          httpVersionMinor: 1,\n          httpVersion: '1.1',\n          complete: true,\n          rawHeaders: [Array],\n          rawTrailers: [Array],\n          joinDuplicateHeaders: undefined,\n          aborted: false,\n          upgrade: false,\n          url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          method: null,\n          statusCode: 401,\n          statusMessage: 'Unauthorized',\n          client: [TLSSocket],\n          _consuming: false,\n          _dumped: false,\n          req: [Circular *4],\n          _eventsCount: 3,\n          timings: [Object],\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kHeaders)]: [Object],\n          [Symbol(kHeadersCount)]: 30,\n          [Symbol(kTrailers)]: null,\n          [Symbol(kTrailersCount)]: 0,\n          [connection]: [Getter/Setter],\n          [headers]: [Getter/Setter],\n          [headersDistinct]: [Getter/Setter],\n          [trailers]: [Getter/Setter],\n          [trailersDistinct]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableDidRead]: [Getter],\n          [readableAborted]: [Getter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readableEnded]: [Getter]\n        },\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796614094,\n          socket: 1730796614094,\n          lookup: 1730796614095,\n          connect: 1730796614166,\n          secureConnect: 1730796614291,\n          upload: 1730796614291,\n          response: 1730796614501,\n          end: 1730796614502,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3699600,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88618,\n            [Symbol(triggerId)]: 88614,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _responseSize: 81,\n      _bodySize: 0,\n      _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n      _isFromCache: false,\n      _cannotHaveBody: true,\n      _triggerRead: true,\n      _cancelTimeouts: [Function: cancelTimeouts] {\n        [length]: 0,\n        [name]: 'cancelTimeouts'\n      },\n      _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _nativeResponse: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:14 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3699600,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88618,\n            [Symbol(triggerId)]: 88614,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: <ref *4> ClientRequest {\n          _events: [Object: null prototype],\n          _eventsCount: 8,\n          _maxListeners: undefined,\n          outputData: [Array],\n          outputSize: 0,\n          writable: true,\n          destroyed: true,\n          _last: true,\n          chunkedEncoding: false,\n          shouldKeepAlive: true,\n          maxRequestsOnConnectionReached: false,\n          _defaultKeepAlive: true,\n          useChunkedEncodingByDefault: false,\n          sendDate: false,\n          _removedConnection: false,\n          _removedContLen: false,\n          _removedTE: false,\n          strictContentLength: false,\n          _contentLength: 0,\n          _hasBody: true,\n          _trailer: '',\n          finished: true,\n          _headerSent: true,\n          _closed: true,\n          _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n            'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n            'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n            'accept: application/json\\r\\n' +\n            'accept-encoding: gzip, deflate, br\\r\\n' +\n            'Host: api.spotify.com\\r\\n' +\n            'Connection: keep-alive\\r\\n' +\n            '\\r\\n',\n          _keepAliveTimeout: 0,\n          _onPendingData: [Function],\n          agent: [Agent],\n          socketPath: undefined,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          insecureHTTPParser: undefined,\n          joinDuplicateHeaders: undefined,\n          path: '/v1/me/playlists?limit=50',\n          _ended: true,\n          res: [Circular *5],\n          aborted: false,\n          timeoutCb: null,\n          upgradeOrConnect: false,\n          parser: null,\n          maxHeadersCount: null,\n          reusedSocket: false,\n          host: 'api.spotify.com',\n          protocol: 'https:',\n          timings: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(kNeedDrain)]: false,\n          [Symbol(corked)]: 0,\n          [Symbol(kChunkedBuffer)]: [Array],\n          [Symbol(kChunkedLength)]: 0,\n          [Symbol(kSocket)]: [TLSSocket],\n          [Symbol(kOutHeaders)]: [Object: null prototype],\n          [Symbol(errored)]: null,\n          [Symbol(kHighWaterMark)]: 65536,\n          [Symbol(kRejectNonStandardBodyWrites)]: false,\n          [Symbol(kUniqueHeaders)]: null,\n          [Symbol(reentry)]: true,\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [writableFinished]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableLength]: [Getter],\n          [writableHighWaterMark]: [Getter],\n          [writableCorked]: [Getter],\n          [_headers]: [Getter/Setter],\n          [connection]: [Getter/Setter],\n          [socket]: [Getter/Setter],\n          [_headerNames]: [Getter/Setter],\n          headersSent: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter]\n        },\n        _eventsCount: 3,\n        timings: {\n          start: 1730796614094,\n          socket: 1730796614094,\n          lookup: 1730796614095,\n          connect: 1730796614166,\n          secureConnect: 1730796614291,\n          upload: 1730796614291,\n          response: 1730796614501,\n          end: 1730796614502,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:14 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      _flushed: true,\n      _aborted: false,\n      _requestInitialized: true,\n      _jobs: [ [length]: 0 ],\n      _eventsCount: 10,\n      _requestOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined,\n        ALPNProtocols: undefined,\n        ca: undefined,\n        cert: undefined,\n        key: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: [Function: checkServerIdentity] {\n          [length]: 2,\n          [name]: 'checkServerIdentity',\n          [prototype]: [Object]\n        },\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        sigalgs: undefined,\n        sessionTimeout: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        crl: undefined,\n        lookup: undefined,\n        family: undefined,\n        agent: undefined,\n        setHost: true,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        localAddress: undefined,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        createConnection: undefined,\n        timeout: undefined,\n        h2session: undefined\n      },\n      flush: [AsyncFunction (anonymous)] {\n        [length]: 0,\n        [name]: '',\n        [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [ip]: [Getter],\n      [isAborted]: [Getter],\n      [socket]: [Getter],\n      [downloadProgress]: [Getter],\n      [uploadProgress]: [Getter],\n      [timings]: [Getter],\n      [isFromCache]: [Getter],\n      [reusedSocket]: [Getter],\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [readableEnded]: [Getter]\n    },\n    isFromCache: false,\n    ip: '35.186.224.24',\n    retryCount: 0,\n    ok: false,\n    rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n    body: { error: { status: 401, message: 'The access token expired' } },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [Symbol(kCallback)]: null,\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter]\n  },\n  [request]: <ref *6> Request {\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: undefined,\n      pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n      newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n      response: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      retry: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 2, [name]: '' }\n      },\n      request: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      redirect: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      uploadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      downloadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n      pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 0,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 1574906,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 0,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466746,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    constructor: undefined,\n    _noPipe: true,\n    options: {\n      request: undefined,\n      agent: { http: undefined, https: undefined, http2: undefined },\n      h2session: undefined,\n      decompress: true,\n      timeout: {\n        connect: undefined,\n        lookup: undefined,\n        read: undefined,\n        request: undefined,\n        response: undefined,\n        secureConnect: undefined,\n        send: undefined,\n        socket: undefined\n      },\n      prefixUrl: '',\n      body: undefined,\n      form: undefined,\n      json: undefined,\n      cookieJar: undefined,\n      ignoreInvalidCookies: false,\n      searchParams: undefined,\n      dnsLookup: undefined,\n      dnsCache: undefined,\n      context: {},\n      hooks: {\n        init: [ [length]: 0 ],\n        beforeRequest: [ [length]: 0 ],\n        beforeError: [ [length]: 0 ],\n        beforeRedirect: [ [length]: 0 ],\n        beforeRetry: [ [length]: 0 ],\n        afterResponse: [ [length]: 0 ]\n      },\n      followRedirect: true,\n      maxRedirects: 10,\n      cache: undefined,\n      throwHttpErrors: true,\n      username: '',\n      password: '',\n      http2: false,\n      allowGetBody: false,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      methodRewriting: false,\n      dnsLookupIpVersion: undefined,\n      parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n      stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n      retry: {\n        limit: 2,\n        methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n        statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n        errorCodes: [\n          'ETIMEDOUT',\n          'ECONNRESET',\n          'EADDRINUSE',\n          'ECONNREFUSED',\n          'EPIPE',\n          'ENOTFOUND',\n          'ENETUNREACH',\n          'EAI_AGAIN',\n          [length]: 8\n        ],\n        maxRetryAfter: undefined,\n        calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n        backoffLimit: Infinity,\n        noise: 100\n      },\n      localAddress: undefined,\n      method: 'GET',\n      createConnection: undefined,\n      cacheOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined\n      },\n      https: {\n        alpnProtocols: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: undefined,\n        certificateAuthority: undefined,\n        key: undefined,\n        certificate: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        signatureAlgorithms: undefined,\n        tlsSessionLifetime: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        certificateRevocationLists: undefined\n      },\n      encoding: undefined,\n      resolveBodyOnly: false,\n      isStream: false,\n      responseType: 'json',\n      url: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      pagination: {\n        transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n        paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n        filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n        shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n        countLimit: Infinity,\n        backoff: 0,\n        requestLimit: 10000,\n        stackAllItems: false\n      },\n      setHost: true,\n      maxHeaderSize: undefined,\n      signal: undefined,\n      enableUnixSockets: false\n    },\n    response: <ref *3> PassThrough {\n      _events: {\n        close: undefined,\n        error: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        prefinish: <ref *1> [Function: prefinish] {\n          [length]: 0,\n          [name]: 'prefinish',\n          [prototype]: [Object]\n        },\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n        unpipe: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 9996040,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 65536,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466504,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kWriteCbValue)]: null,\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n      _maxListeners: undefined,\n      _eventsCount: 4,\n      socket: [Getter/Setter],\n      httpVersionMajor: [Getter/Setter],\n      httpVersionMinor: [Getter/Setter],\n      httpVersion: [Getter/Setter],\n      complete: [Getter/Setter],\n      rawHeaders: [Getter/Setter],\n      rawTrailers: [Getter/Setter],\n      joinDuplicateHeaders: [Getter/Setter],\n      aborted: [Getter/Setter],\n      upgrade: [Getter/Setter],\n      url: [Getter/Setter],\n      method: [Getter/Setter],\n      statusCode: [Getter/Setter],\n      statusMessage: [Getter/Setter],\n      client: [Getter/Setter],\n      _consuming: [Getter/Setter],\n      _dumped: [Getter/Setter],\n      req: [Getter/Setter],\n      timings: [Getter/Setter],\n      headers: [Getter/Setter],\n      setTimeout: [Getter/Setter],\n      trailers: [Getter/Setter],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      request: [Circular *6],\n      isFromCache: false,\n      ip: '35.186.224.24',\n      retryCount: 0,\n      ok: false,\n      rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n      body: { error: { status: 401, message: 'The access token expired' } },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kCallback)]: null,\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter]\n    },\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    retryCount: 0,\n    _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _downloadedSize: 81,\n    _uploadedSize: 0,\n    _stopReading: true,\n    _pipedServerResponses: Set(0) {},\n    _request: <ref *4> ClientRequest {\n      _events: [Object: null prototype] {\n        socket: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        error: [ [Function], [Function], [length]: 2 ],\n        connect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        continue: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        information: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        upgrade: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        finish: [Function: requestOnFinish] {\n          [length]: 0,\n          [name]: 'requestOnFinish',\n          [prototype]: [Object]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      outputData: [ [length]: 0 ],\n      outputSize: 0,\n      writable: true,\n      destroyed: true,\n      _last: true,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: false,\n      sendDate: false,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: 0,\n      _hasBody: true,\n      _trailer: '',\n      finished: true,\n      _headerSent: true,\n      _closed: true,\n      _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n        'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n        'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n        'accept: application/json\\r\\n' +\n        'accept-encoding: gzip, deflate, br\\r\\n' +\n        'Host: api.spotify.com\\r\\n' +\n        'Connection: keep-alive\\r\\n' +\n        '\\r\\n',\n      _keepAliveTimeout: 0,\n      _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n      agent: Agent {\n        _events: [Object: null prototype] {\n          free: [Function],\n          newListener: [Function]\n        },\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        defaultPort: 443,\n        protocol: 'https:',\n        options: [Object: null prototype] {\n          keepAlive: true,\n          scheduling: 'lifo',\n          timeout: 5000,\n          noDelay: true,\n          path: null\n        },\n        requests: [Object: null prototype] {},\n        sockets: [Object: null prototype] {},\n        freeSockets: [Object: null prototype] {\n          'api.spotify.com:443:::::::::::::::::::::': [Array]\n        },\n        keepAliveMsecs: 1000,\n        keepAlive: true,\n        maxSockets: Infinity,\n        maxFreeSockets: 256,\n        scheduling: 'lifo',\n        maxTotalSockets: Infinity,\n        totalSocketCount: 1,\n        maxCachedSessions: 100,\n        _sessionCache: { map: [Object], list: [Array] },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false\n      },\n      socketPath: undefined,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      joinDuplicateHeaders: undefined,\n      path: '/v1/me/playlists?limit=50',\n      _ended: true,\n      res: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:14 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3699600,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88618,\n            [Symbol(triggerId)]: 88614,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: [Circular *4],\n        _eventsCount: 3,\n        timings: {\n          start: 1730796614094,\n          socket: 1730796614094,\n          lookup: 1730796614095,\n          connect: 1730796614166,\n          secureConnect: 1730796614291,\n          upload: 1730796614291,\n          response: 1730796614501,\n          end: 1730796614502,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:14 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      aborted: false,\n      timeoutCb: null,\n      upgradeOrConnect: false,\n      parser: null,\n      maxHeadersCount: null,\n      reusedSocket: false,\n      host: 'api.spotify.com',\n      protocol: 'https:',\n      timings: {\n        start: 1730796614094,\n        socket: 1730796614094,\n        lookup: 1730796614095,\n        connect: 1730796614166,\n        secureConnect: 1730796614291,\n        upload: 1730796614291,\n        response: 1730796614501,\n        end: 1730796614502,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 0,\n          dns: 1,\n          tcp: 71,\n          tls: 125,\n          request: 0,\n          firstByte: 210,\n          download: 1,\n          total: 408\n        }\n      },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n      [Symbol(kChunkedLength)]: 0,\n      [Symbol(kSocket)]: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 89 4e eb 32 0d e2 12 b8 07 19 11 af 26 ba 03 6e d3 f5 48 ae ec 16 e6 a4 d5 f9 0b 6d e3 e6 ab 57 04 ... 2078 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3699600,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88618,\n          [Symbol(triggerId)]: 88614,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 89 4e eb 32 0d e2 12 b8 07 19 11 af 26 ba 03 6e d3 f5 48 ae ec 16 e6 a4 d5 f9 0b 6d e3 e6 ab 57 04 ... 2078 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      [Symbol(kOutHeaders)]: [Object: null prototype] {\n        'user-agent': [\n          'user-agent',\n          'got (https://github.com/sindresorhus/got)',\n          [length]: 2\n        ],\n        authorization: [\n          'authorization',\n          'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          [length]: 2\n        ],\n        accept: [ 'accept', 'application/json', [length]: 2 ],\n        'accept-encoding': [ 'accept-encoding', 'gzip, deflate, br', [length]: 2 ],\n        host: [ 'Host', 'api.spotify.com', [length]: 2 ]\n      },\n      [Symbol(errored)]: null,\n      [Symbol(kHighWaterMark)]: 65536,\n      [Symbol(kRejectNonStandardBodyWrites)]: false,\n      [Symbol(kUniqueHeaders)]: null,\n      [Symbol(reentry)]: true,\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [writableFinished]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableLength]: [Getter],\n      [writableHighWaterMark]: [Getter],\n      [writableCorked]: [Getter],\n      [_headers]: [Getter/Setter],\n      [connection]: [Getter/Setter],\n      [socket]: [Getter/Setter],\n      [_headerNames]: [Getter/Setter],\n      headersSent: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter]\n    },\n    _responseSize: 81,\n    _bodySize: 0,\n    _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n    _isFromCache: false,\n    _cannotHaveBody: true,\n    _triggerRead: true,\n    _cancelTimeouts: [Function: cancelTimeouts] { [length]: 0, [name]: 'cancelTimeouts' },\n    _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _nativeResponse: <ref *5> IncomingMessage {\n      _events: {\n        close: undefined,\n        error: undefined,\n        data: undefined,\n        end: [Function: responseOnEnd] {\n          [length]: 0,\n          [name]: 'responseOnEnd',\n          [prototype]: [Object]\n        },\n        readable: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 110892924,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _maxListeners: undefined,\n      socket: null,\n      httpVersionMajor: 1,\n      httpVersionMinor: 1,\n      httpVersion: '1.1',\n      complete: true,\n      rawHeaders: [\n        'www-authenticate',\n        'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin',\n        '*',\n        'access-control-allow-headers',\n        'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods',\n        'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials',\n        'true',\n        'access-control-max-age',\n        '604800',\n        'content-type',\n        'application/json',\n        'content-encoding',\n        'gzip',\n        'strict-transport-security',\n        'max-age=31536000',\n        'x-content-type-options',\n        'nosniff',\n        'date',\n        'Tue, 05 Nov 2024 08:50:14 GMT',\n        'server',\n        'envoy',\n        'Via',\n        'HTTP/2 edgeproxy, 1.1 google',\n        'Alt-Svc',\n        'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'Transfer-Encoding',\n        'chunked',\n        [length]: 30\n      ],\n      rawTrailers: [ [length]: 0 ],\n      joinDuplicateHeaders: undefined,\n      aborted: false,\n      upgrade: false,\n      url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      method: null,\n      statusCode: 401,\n      statusMessage: 'Unauthorized',\n      client: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 89 4e eb 32 0d e2 12 b8 07 19 11 af 26 ba 03 6e d3 f5 48 ae ec 16 e6 a4 d5 f9 0b 6d e3 e6 ab 57 04 ... 2078 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3699600,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88618,\n          [Symbol(triggerId)]: 88614,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 89 4e eb 32 0d e2 12 b8 07 19 11 af 26 ba 03 6e d3 f5 48 ae ec 16 e6 a4 d5 f9 0b 6d e3 e6 ab 57 04 ... 2078 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      _consuming: false,\n      _dumped: false,\n      req: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: [Circular *5],\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796614094,\n          socket: 1730796614094,\n          lookup: 1730796614095,\n          connect: 1730796614166,\n          secureConnect: 1730796614291,\n          upload: 1730796614291,\n          response: 1730796614501,\n          end: 1730796614502,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: <ref *7> TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3699600,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88618,\n            [Symbol(triggerId)]: 88614,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _eventsCount: 3,\n      timings: {\n        start: 1730796614094,\n        socket: 1730796614094,\n        lookup: 1730796614095,\n        connect: 1730796614166,\n        secureConnect: 1730796614291,\n        upload: 1730796614291,\n        response: 1730796614501,\n        end: 1730796614502,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 0,\n          dns: 1,\n          tcp: 71,\n          tls: 125,\n          request: 0,\n          firstByte: 210,\n          download: 1,\n          total: 408\n        }\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kHeaders)]: {\n        'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin': '*',\n        'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials': 'true',\n        'access-control-max-age': '604800',\n        'content-type': 'application/json',\n        'content-encoding': 'gzip',\n        'strict-transport-security': 'max-age=31536000',\n        'x-content-type-options': 'nosniff',\n        date: 'Tue, 05 Nov 2024 08:50:14 GMT',\n        server: 'envoy',\n        via: 'HTTP/2 edgeproxy, 1.1 google',\n        'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'transfer-encoding': 'chunked'\n      },\n      [Symbol(kHeadersCount)]: 30,\n      [Symbol(kTrailers)]: null,\n      [Symbol(kTrailersCount)]: 0,\n      [connection]: [Getter/Setter],\n      [headers]: [Getter/Setter],\n      [headersDistinct]: [Getter/Setter],\n      [trailers]: [Getter/Setter],\n      [trailersDistinct]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readableEnded]: [Getter]\n    },\n    _flushed: true,\n    _aborted: false,\n    _requestInitialized: true,\n    _jobs: [ [length]: 0 ],\n    _eventsCount: 10,\n    _requestOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined,\n      ALPNProtocols: undefined,\n      ca: undefined,\n      cert: undefined,\n      key: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: <ref *8> [Function: checkServerIdentity] {\n        [length]: 2,\n        [name]: 'checkServerIdentity',\n        [prototype]: { [constructor]: [Circular *8] }\n      },\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      sigalgs: undefined,\n      sessionTimeout: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      crl: undefined,\n      lookup: undefined,\n      family: undefined,\n      agent: undefined,\n      setHost: true,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      localAddress: undefined,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      createConnection: undefined,\n      timeout: undefined,\n      h2session: undefined\n    },\n    flush: [AsyncFunction (anonymous)] {\n      [length]: 0,\n      [name]: '',\n      [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n    },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [ip]: [Getter],\n    [isAborted]: [Getter],\n    [socket]: [Getter],\n    [downloadProgress]: [Getter],\n    [uploadProgress]: [Getter],\n    [timings]: [Getter],\n    [isFromCache]: [Getter],\n    [reusedSocket]: [Getter],\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter],\n    [readable]: [Getter/Setter],\n    [readableDidRead]: [Getter],\n    [readableAborted]: [Getter],\n    [readableHighWaterMark]: [Getter],\n    [readableBuffer]: [Getter],\n    [readableFlowing]: [Getter/Setter],\n    [readableLength]: [Getter],\n    [readableObjectMode]: [Getter],\n    [readableEncoding]: [Getter],\n    [errored]: [Getter],\n    [closed]: [Getter],\n    [readableEnded]: [Getter]\n  },\n  timings: {\n    start: 1730796614094,\n    socket: 1730796614094,\n    lookup: 1730796614095,\n    connect: 1730796614166,\n    secureConnect: 1730796614291,\n    upload: 1730796614291,\n    response: 1730796614501,\n    end: 1730796614502,\n    error: undefined,\n    abort: undefined,\n    phases: {\n      wait: 0,\n      dns: 1,\n      tcp: 71,\n      tls: 125,\n      request: 0,\n      firstByte: 210,\n      download: 1,\n      total: 408\n    }\n  },\n  name: 'HTTPError',\n  options: {\n    request: undefined,\n    agent: { http: undefined, https: undefined, http2: undefined },\n    h2session: undefined,\n    decompress: true,\n    timeout: {\n      connect: undefined,\n      lookup: undefined,\n      read: undefined,\n      request: undefined,\n      response: undefined,\n      secureConnect: undefined,\n      send: undefined,\n      socket: undefined\n    },\n    prefixUrl: '',\n    body: undefined,\n    form: undefined,\n    json: undefined,\n    cookieJar: undefined,\n    ignoreInvalidCookies: false,\n    searchParams: undefined,\n    dnsLookup: undefined,\n    dnsCache: undefined,\n    context: {},\n    hooks: {\n      init: [ [length]: 0 ],\n      beforeRequest: [ [length]: 0 ],\n      beforeError: [ [length]: 0 ],\n      beforeRedirect: [ [length]: 0 ],\n      beforeRetry: [ [length]: 0 ],\n      afterResponse: [ [length]: 0 ]\n    },\n    followRedirect: true,\n    maxRedirects: 10,\n    cache: undefined,\n    throwHttpErrors: true,\n    username: '',\n    password: '',\n    http2: false,\n    allowGetBody: false,\n    headers: {\n      'user-agent': 'got (https://github.com/sindresorhus/got)',\n      authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n      accept: 'application/json',\n      'accept-encoding': 'gzip, deflate, br'\n    },\n    methodRewriting: false,\n    dnsLookupIpVersion: undefined,\n    parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n    stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n    retry: {\n      limit: 2,\n      methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n      statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n      errorCodes: [\n        'ETIMEDOUT',\n        'ECONNRESET',\n        'EADDRINUSE',\n        'ECONNREFUSED',\n        'EPIPE',\n        'ENOTFOUND',\n        'ENETUNREACH',\n        'EAI_AGAIN',\n        [length]: 8\n      ],\n      maxRetryAfter: undefined,\n      calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n      backoffLimit: Infinity,\n      noise: 100\n    },\n    localAddress: undefined,\n    method: 'GET',\n    createConnection: undefined,\n    cacheOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined\n    },\n    https: {\n      alpnProtocols: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: undefined,\n      certificateAuthority: undefined,\n      key: undefined,\n      certificate: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      signatureAlgorithms: undefined,\n      tlsSessionLifetime: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      certificateRevocationLists: undefined\n    },\n    encoding: undefined,\n    resolveBodyOnly: false,\n    isStream: false,\n    responseType: 'json',\n    url: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    pagination: {\n      transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n      paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n      filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n      shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n      countLimit: Infinity,\n      backoff: 0,\n      requestLimit: 10000,\n      stackAllItems: false\n    },\n    setHost: true,\n    maxHeaderSize: undefined,\n    signal: undefined,\n    enableUnixSockets: false\n  }\n}","timestamp":"2024-11-05 19:50:14"}
{"level":"error","message":"Error fetching playlists: <ref *2> HTTPError: Response code 401 (Unauthorized)\n    at Request.<anonymous> (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/as-promise/index.js:92:42)\n    at Object.onceWrapper (node:events:635:26)\n    at Request.emit (node:events:532:35)\n    at Request._onResponseBase (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:609:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Request._onResponse (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:649:13) {\n  [stack]: [Getter/Setter],\n  [message]: 'Response code 401 (Unauthorized)',\n  [cause]: {},\n  input: undefined,\n  code: 'ERR_NON_2XX_3XX_RESPONSE',\n  [response]: <ref *3> PassThrough {\n    _events: {\n      close: undefined,\n      error: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 1, [name]: '' }\n      },\n      prefinish: <ref *1> [Function: prefinish] {\n        [length]: 0,\n        [name]: 'prefinish',\n        [prototype]: { [constructor]: [Circular *1] }\n      },\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n      unpipe: undefined,\n      aborted: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 0, [name]: '' }\n      }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 65536,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 9996040,\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 65536,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466504,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kWriteCbValue)]: null,\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n    _maxListeners: undefined,\n    _eventsCount: 4,\n    socket: [Getter/Setter],\n    httpVersionMajor: [Getter/Setter],\n    httpVersionMinor: [Getter/Setter],\n    httpVersion: [Getter/Setter],\n    complete: [Getter/Setter],\n    rawHeaders: [Getter/Setter],\n    rawTrailers: [Getter/Setter],\n    joinDuplicateHeaders: [Getter/Setter],\n    aborted: [Getter/Setter],\n    upgrade: [Getter/Setter],\n    url: [Getter/Setter],\n    method: [Getter/Setter],\n    statusCode: [Getter/Setter],\n    statusMessage: [Getter/Setter],\n    client: [Getter/Setter],\n    _consuming: [Getter/Setter],\n    _dumped: [Getter/Setter],\n    req: [Getter/Setter],\n    timings: [Getter/Setter],\n    headers: [Getter/Setter],\n    setTimeout: [Getter/Setter],\n    trailers: [Getter/Setter],\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    request: Request {\n      _events: {\n        close: undefined,\n        error: undefined,\n        prefinish: undefined,\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: undefined,\n        pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n        newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n        response: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        retry: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        request: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        redirect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        uploadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        downloadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n        pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 0,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 1574906,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 0,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466746,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      constructor: undefined,\n      _noPipe: true,\n      options: {\n        request: undefined,\n        agent: { http: undefined, https: undefined, http2: undefined },\n        h2session: undefined,\n        decompress: true,\n        timeout: {\n          connect: undefined,\n          lookup: undefined,\n          read: undefined,\n          request: undefined,\n          response: undefined,\n          secureConnect: undefined,\n          send: undefined,\n          socket: undefined\n        },\n        prefixUrl: '',\n        body: undefined,\n        form: undefined,\n        json: undefined,\n        cookieJar: undefined,\n        ignoreInvalidCookies: false,\n        searchParams: undefined,\n        dnsLookup: undefined,\n        dnsCache: undefined,\n        context: {},\n        hooks: {\n          init: [ [length]: 0 ],\n          beforeRequest: [ [length]: 0 ],\n          beforeError: [ [length]: 0 ],\n          beforeRedirect: [ [length]: 0 ],\n          beforeRetry: [ [length]: 0 ],\n          afterResponse: [ [length]: 0 ]\n        },\n        followRedirect: true,\n        maxRedirects: 10,\n        cache: undefined,\n        throwHttpErrors: true,\n        username: '',\n        password: '',\n        http2: false,\n        allowGetBody: false,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        methodRewriting: false,\n        dnsLookupIpVersion: undefined,\n        parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n        stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n        retry: {\n          limit: 2,\n          methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n          statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n          errorCodes: [\n            'ETIMEDOUT',\n            'ECONNRESET',\n            'EADDRINUSE',\n            'ECONNREFUSED',\n            'EPIPE',\n            'ENOTFOUND',\n            'ENETUNREACH',\n            'EAI_AGAIN',\n            [length]: 8\n          ],\n          maxRetryAfter: undefined,\n          calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n          backoffLimit: Infinity,\n          noise: 100\n        },\n        localAddress: undefined,\n        method: 'GET',\n        createConnection: undefined,\n        cacheOptions: {\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined\n        },\n        https: {\n          alpnProtocols: undefined,\n          rejectUnauthorized: undefined,\n          checkServerIdentity: undefined,\n          certificateAuthority: undefined,\n          key: undefined,\n          certificate: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          ciphers: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          signatureAlgorithms: undefined,\n          tlsSessionLifetime: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          certificateRevocationLists: undefined\n        },\n        encoding: undefined,\n        resolveBodyOnly: false,\n        isStream: false,\n        responseType: 'json',\n        url: URL {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          origin: 'https://api.spotify.com',\n          protocol: 'https:',\n          username: '',\n          password: '',\n          host: 'api.spotify.com',\n          hostname: 'api.spotify.com',\n          port: '',\n          pathname: '/v1/me/playlists',\n          search: '?limit=50',\n          searchParams: URLSearchParams { 'limit' => '50' },\n          hash: '',\n          [Symbol(context)]: URLContext {\n            href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n            protocol_end: 6,\n            username_end: 8,\n            host_start: 8,\n            host_end: 23,\n            pathname_start: 23,\n            search_start: 39,\n            hash_start: 4294967295,\n            port: 4294967295,\n            scheme_type: 2,\n            [hasPort]: [Getter],\n            [hasSearch]: [Getter],\n            [hasHash]: [Getter]\n          }\n        },\n        pagination: {\n          transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n          paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n          filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n          shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n          countLimit: Infinity,\n          backoff: 0,\n          requestLimit: 10000,\n          stackAllItems: false\n        },\n        setHost: true,\n        maxHeaderSize: undefined,\n        signal: undefined,\n        enableUnixSockets: false\n      },\n      response: [Circular *3],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      retryCount: 0,\n      _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _downloadedSize: 81,\n      _uploadedSize: 0,\n      _stopReading: true,\n      _pipedServerResponses: Set(0) {},\n      _request: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: IncomingMessage {\n          _events: [Object],\n          _readableState: [ReadableState],\n          _maxListeners: undefined,\n          socket: null,\n          httpVersionMajor: 1,\n          httpVersionMinor: 1,\n          httpVersion: '1.1',\n          complete: true,\n          rawHeaders: [Array],\n          rawTrailers: [Array],\n          joinDuplicateHeaders: undefined,\n          aborted: false,\n          upgrade: false,\n          url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          method: null,\n          statusCode: 401,\n          statusMessage: 'Unauthorized',\n          client: [TLSSocket],\n          _consuming: false,\n          _dumped: false,\n          req: [Circular *4],\n          _eventsCount: 3,\n          timings: [Object],\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kHeaders)]: [Object],\n          [Symbol(kHeadersCount)]: 30,\n          [Symbol(kTrailers)]: null,\n          [Symbol(kTrailersCount)]: 0,\n          [connection]: [Getter/Setter],\n          [headers]: [Getter/Setter],\n          [headersDistinct]: [Getter/Setter],\n          [trailers]: [Getter/Setter],\n          [trailersDistinct]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableDidRead]: [Getter],\n          [readableAborted]: [Getter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readableEnded]: [Getter]\n        },\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796614094,\n          socket: 1730796614094,\n          lookup: 1730796614095,\n          connect: 1730796614166,\n          secureConnect: 1730796614291,\n          upload: 1730796614291,\n          response: 1730796614501,\n          end: 1730796614502,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3699600,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88618,\n            [Symbol(triggerId)]: 88614,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _responseSize: 81,\n      _bodySize: 0,\n      _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n      _isFromCache: false,\n      _cannotHaveBody: true,\n      _triggerRead: true,\n      _cancelTimeouts: [Function: cancelTimeouts] {\n        [length]: 0,\n        [name]: 'cancelTimeouts'\n      },\n      _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _nativeResponse: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:14 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3699600,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88618,\n            [Symbol(triggerId)]: 88614,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: <ref *4> ClientRequest {\n          _events: [Object: null prototype],\n          _eventsCount: 8,\n          _maxListeners: undefined,\n          outputData: [Array],\n          outputSize: 0,\n          writable: true,\n          destroyed: true,\n          _last: true,\n          chunkedEncoding: false,\n          shouldKeepAlive: true,\n          maxRequestsOnConnectionReached: false,\n          _defaultKeepAlive: true,\n          useChunkedEncodingByDefault: false,\n          sendDate: false,\n          _removedConnection: false,\n          _removedContLen: false,\n          _removedTE: false,\n          strictContentLength: false,\n          _contentLength: 0,\n          _hasBody: true,\n          _trailer: '',\n          finished: true,\n          _headerSent: true,\n          _closed: true,\n          _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n            'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n            'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n            'accept: application/json\\r\\n' +\n            'accept-encoding: gzip, deflate, br\\r\\n' +\n            'Host: api.spotify.com\\r\\n' +\n            'Connection: keep-alive\\r\\n' +\n            '\\r\\n',\n          _keepAliveTimeout: 0,\n          _onPendingData: [Function],\n          agent: [Agent],\n          socketPath: undefined,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          insecureHTTPParser: undefined,\n          joinDuplicateHeaders: undefined,\n          path: '/v1/me/playlists?limit=50',\n          _ended: true,\n          res: [Circular *5],\n          aborted: false,\n          timeoutCb: null,\n          upgradeOrConnect: false,\n          parser: null,\n          maxHeadersCount: null,\n          reusedSocket: false,\n          host: 'api.spotify.com',\n          protocol: 'https:',\n          timings: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(kNeedDrain)]: false,\n          [Symbol(corked)]: 0,\n          [Symbol(kChunkedBuffer)]: [Array],\n          [Symbol(kChunkedLength)]: 0,\n          [Symbol(kSocket)]: [TLSSocket],\n          [Symbol(kOutHeaders)]: [Object: null prototype],\n          [Symbol(errored)]: null,\n          [Symbol(kHighWaterMark)]: 65536,\n          [Symbol(kRejectNonStandardBodyWrites)]: false,\n          [Symbol(kUniqueHeaders)]: null,\n          [Symbol(reentry)]: true,\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [writableFinished]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableLength]: [Getter],\n          [writableHighWaterMark]: [Getter],\n          [writableCorked]: [Getter],\n          [_headers]: [Getter/Setter],\n          [connection]: [Getter/Setter],\n          [socket]: [Getter/Setter],\n          [_headerNames]: [Getter/Setter],\n          headersSent: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter]\n        },\n        _eventsCount: 3,\n        timings: {\n          start: 1730796614094,\n          socket: 1730796614094,\n          lookup: 1730796614095,\n          connect: 1730796614166,\n          secureConnect: 1730796614291,\n          upload: 1730796614291,\n          response: 1730796614501,\n          end: 1730796614502,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:14 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      _flushed: true,\n      _aborted: false,\n      _requestInitialized: true,\n      _jobs: [ [length]: 0 ],\n      _eventsCount: 10,\n      _requestOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined,\n        ALPNProtocols: undefined,\n        ca: undefined,\n        cert: undefined,\n        key: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: [Function: checkServerIdentity] {\n          [length]: 2,\n          [name]: 'checkServerIdentity',\n          [prototype]: [Object]\n        },\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        sigalgs: undefined,\n        sessionTimeout: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        crl: undefined,\n        lookup: undefined,\n        family: undefined,\n        agent: undefined,\n        setHost: true,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        localAddress: undefined,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        createConnection: undefined,\n        timeout: undefined,\n        h2session: undefined\n      },\n      flush: [AsyncFunction (anonymous)] {\n        [length]: 0,\n        [name]: '',\n        [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [ip]: [Getter],\n      [isAborted]: [Getter],\n      [socket]: [Getter],\n      [downloadProgress]: [Getter],\n      [uploadProgress]: [Getter],\n      [timings]: [Getter],\n      [isFromCache]: [Getter],\n      [reusedSocket]: [Getter],\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [readableEnded]: [Getter]\n    },\n    isFromCache: false,\n    ip: '35.186.224.24',\n    retryCount: 0,\n    ok: false,\n    rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n    body: { error: { status: 401, message: 'The access token expired' } },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [Symbol(kCallback)]: null,\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter]\n  },\n  [request]: <ref *6> Request {\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: undefined,\n      pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n      newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n      response: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      retry: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 2, [name]: '' }\n      },\n      request: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      redirect: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      uploadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      downloadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n      pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 0,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 1574906,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 0,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466746,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    constructor: undefined,\n    _noPipe: true,\n    options: {\n      request: undefined,\n      agent: { http: undefined, https: undefined, http2: undefined },\n      h2session: undefined,\n      decompress: true,\n      timeout: {\n        connect: undefined,\n        lookup: undefined,\n        read: undefined,\n        request: undefined,\n        response: undefined,\n        secureConnect: undefined,\n        send: undefined,\n        socket: undefined\n      },\n      prefixUrl: '',\n      body: undefined,\n      form: undefined,\n      json: undefined,\n      cookieJar: undefined,\n      ignoreInvalidCookies: false,\n      searchParams: undefined,\n      dnsLookup: undefined,\n      dnsCache: undefined,\n      context: {},\n      hooks: {\n        init: [ [length]: 0 ],\n        beforeRequest: [ [length]: 0 ],\n        beforeError: [ [length]: 0 ],\n        beforeRedirect: [ [length]: 0 ],\n        beforeRetry: [ [length]: 0 ],\n        afterResponse: [ [length]: 0 ]\n      },\n      followRedirect: true,\n      maxRedirects: 10,\n      cache: undefined,\n      throwHttpErrors: true,\n      username: '',\n      password: '',\n      http2: false,\n      allowGetBody: false,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      methodRewriting: false,\n      dnsLookupIpVersion: undefined,\n      parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n      stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n      retry: {\n        limit: 2,\n        methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n        statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n        errorCodes: [\n          'ETIMEDOUT',\n          'ECONNRESET',\n          'EADDRINUSE',\n          'ECONNREFUSED',\n          'EPIPE',\n          'ENOTFOUND',\n          'ENETUNREACH',\n          'EAI_AGAIN',\n          [length]: 8\n        ],\n        maxRetryAfter: undefined,\n        calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n        backoffLimit: Infinity,\n        noise: 100\n      },\n      localAddress: undefined,\n      method: 'GET',\n      createConnection: undefined,\n      cacheOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined\n      },\n      https: {\n        alpnProtocols: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: undefined,\n        certificateAuthority: undefined,\n        key: undefined,\n        certificate: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        signatureAlgorithms: undefined,\n        tlsSessionLifetime: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        certificateRevocationLists: undefined\n      },\n      encoding: undefined,\n      resolveBodyOnly: false,\n      isStream: false,\n      responseType: 'json',\n      url: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      pagination: {\n        transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n        paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n        filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n        shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n        countLimit: Infinity,\n        backoff: 0,\n        requestLimit: 10000,\n        stackAllItems: false\n      },\n      setHost: true,\n      maxHeaderSize: undefined,\n      signal: undefined,\n      enableUnixSockets: false\n    },\n    response: <ref *3> PassThrough {\n      _events: {\n        close: undefined,\n        error: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        prefinish: <ref *1> [Function: prefinish] {\n          [length]: 0,\n          [name]: 'prefinish',\n          [prototype]: [Object]\n        },\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n        unpipe: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 9996040,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 65536,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466504,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kWriteCbValue)]: null,\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n      _maxListeners: undefined,\n      _eventsCount: 4,\n      socket: [Getter/Setter],\n      httpVersionMajor: [Getter/Setter],\n      httpVersionMinor: [Getter/Setter],\n      httpVersion: [Getter/Setter],\n      complete: [Getter/Setter],\n      rawHeaders: [Getter/Setter],\n      rawTrailers: [Getter/Setter],\n      joinDuplicateHeaders: [Getter/Setter],\n      aborted: [Getter/Setter],\n      upgrade: [Getter/Setter],\n      url: [Getter/Setter],\n      method: [Getter/Setter],\n      statusCode: [Getter/Setter],\n      statusMessage: [Getter/Setter],\n      client: [Getter/Setter],\n      _consuming: [Getter/Setter],\n      _dumped: [Getter/Setter],\n      req: [Getter/Setter],\n      timings: [Getter/Setter],\n      headers: [Getter/Setter],\n      setTimeout: [Getter/Setter],\n      trailers: [Getter/Setter],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      request: [Circular *6],\n      isFromCache: false,\n      ip: '35.186.224.24',\n      retryCount: 0,\n      ok: false,\n      rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n      body: { error: { status: 401, message: 'The access token expired' } },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kCallback)]: null,\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter]\n    },\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    retryCount: 0,\n    _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _downloadedSize: 81,\n    _uploadedSize: 0,\n    _stopReading: true,\n    _pipedServerResponses: Set(0) {},\n    _request: <ref *4> ClientRequest {\n      _events: [Object: null prototype] {\n        socket: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        error: [ [Function], [Function], [length]: 2 ],\n        connect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        continue: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        information: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        upgrade: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        finish: [Function: requestOnFinish] {\n          [length]: 0,\n          [name]: 'requestOnFinish',\n          [prototype]: [Object]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      outputData: [ [length]: 0 ],\n      outputSize: 0,\n      writable: true,\n      destroyed: true,\n      _last: true,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: false,\n      sendDate: false,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: 0,\n      _hasBody: true,\n      _trailer: '',\n      finished: true,\n      _headerSent: true,\n      _closed: true,\n      _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n        'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n        'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n        'accept: application/json\\r\\n' +\n        'accept-encoding: gzip, deflate, br\\r\\n' +\n        'Host: api.spotify.com\\r\\n' +\n        'Connection: keep-alive\\r\\n' +\n        '\\r\\n',\n      _keepAliveTimeout: 0,\n      _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n      agent: Agent {\n        _events: [Object: null prototype] {\n          free: [Function],\n          newListener: [Function]\n        },\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        defaultPort: 443,\n        protocol: 'https:',\n        options: [Object: null prototype] {\n          keepAlive: true,\n          scheduling: 'lifo',\n          timeout: 5000,\n          noDelay: true,\n          path: null\n        },\n        requests: [Object: null prototype] {},\n        sockets: [Object: null prototype] {},\n        freeSockets: [Object: null prototype] {\n          'api.spotify.com:443:::::::::::::::::::::': [Array]\n        },\n        keepAliveMsecs: 1000,\n        keepAlive: true,\n        maxSockets: Infinity,\n        maxFreeSockets: 256,\n        scheduling: 'lifo',\n        maxTotalSockets: Infinity,\n        totalSocketCount: 1,\n        maxCachedSessions: 100,\n        _sessionCache: { map: [Object], list: [Array] },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false\n      },\n      socketPath: undefined,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      joinDuplicateHeaders: undefined,\n      path: '/v1/me/playlists?limit=50',\n      _ended: true,\n      res: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:14 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3699600,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88618,\n            [Symbol(triggerId)]: 88614,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: [Circular *4],\n        _eventsCount: 3,\n        timings: {\n          start: 1730796614094,\n          socket: 1730796614094,\n          lookup: 1730796614095,\n          connect: 1730796614166,\n          secureConnect: 1730796614291,\n          upload: 1730796614291,\n          response: 1730796614501,\n          end: 1730796614502,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:14 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      aborted: false,\n      timeoutCb: null,\n      upgradeOrConnect: false,\n      parser: null,\n      maxHeadersCount: null,\n      reusedSocket: false,\n      host: 'api.spotify.com',\n      protocol: 'https:',\n      timings: {\n        start: 1730796614094,\n        socket: 1730796614094,\n        lookup: 1730796614095,\n        connect: 1730796614166,\n        secureConnect: 1730796614291,\n        upload: 1730796614291,\n        response: 1730796614501,\n        end: 1730796614502,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 0,\n          dns: 1,\n          tcp: 71,\n          tls: 125,\n          request: 0,\n          firstByte: 210,\n          download: 1,\n          total: 408\n        }\n      },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n      [Symbol(kChunkedLength)]: 0,\n      [Symbol(kSocket)]: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 89 4e eb 32 0d e2 12 b8 07 19 11 af 26 ba 03 6e d3 f5 48 ae ec 16 e6 a4 d5 f9 0b 6d e3 e6 ab 57 04 ... 2078 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3699600,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88618,\n          [Symbol(triggerId)]: 88614,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 89 4e eb 32 0d e2 12 b8 07 19 11 af 26 ba 03 6e d3 f5 48 ae ec 16 e6 a4 d5 f9 0b 6d e3 e6 ab 57 04 ... 2078 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      [Symbol(kOutHeaders)]: [Object: null prototype] {\n        'user-agent': [\n          'user-agent',\n          'got (https://github.com/sindresorhus/got)',\n          [length]: 2\n        ],\n        authorization: [\n          'authorization',\n          'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          [length]: 2\n        ],\n        accept: [ 'accept', 'application/json', [length]: 2 ],\n        'accept-encoding': [ 'accept-encoding', 'gzip, deflate, br', [length]: 2 ],\n        host: [ 'Host', 'api.spotify.com', [length]: 2 ]\n      },\n      [Symbol(errored)]: null,\n      [Symbol(kHighWaterMark)]: 65536,\n      [Symbol(kRejectNonStandardBodyWrites)]: false,\n      [Symbol(kUniqueHeaders)]: null,\n      [Symbol(reentry)]: true,\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [writableFinished]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableLength]: [Getter],\n      [writableHighWaterMark]: [Getter],\n      [writableCorked]: [Getter],\n      [_headers]: [Getter/Setter],\n      [connection]: [Getter/Setter],\n      [socket]: [Getter/Setter],\n      [_headerNames]: [Getter/Setter],\n      headersSent: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter]\n    },\n    _responseSize: 81,\n    _bodySize: 0,\n    _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n    _isFromCache: false,\n    _cannotHaveBody: true,\n    _triggerRead: true,\n    _cancelTimeouts: [Function: cancelTimeouts] { [length]: 0, [name]: 'cancelTimeouts' },\n    _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _nativeResponse: <ref *5> IncomingMessage {\n      _events: {\n        close: undefined,\n        error: undefined,\n        data: undefined,\n        end: [Function: responseOnEnd] {\n          [length]: 0,\n          [name]: 'responseOnEnd',\n          [prototype]: [Object]\n        },\n        readable: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 110892924,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _maxListeners: undefined,\n      socket: null,\n      httpVersionMajor: 1,\n      httpVersionMinor: 1,\n      httpVersion: '1.1',\n      complete: true,\n      rawHeaders: [\n        'www-authenticate',\n        'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin',\n        '*',\n        'access-control-allow-headers',\n        'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods',\n        'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials',\n        'true',\n        'access-control-max-age',\n        '604800',\n        'content-type',\n        'application/json',\n        'content-encoding',\n        'gzip',\n        'strict-transport-security',\n        'max-age=31536000',\n        'x-content-type-options',\n        'nosniff',\n        'date',\n        'Tue, 05 Nov 2024 08:50:14 GMT',\n        'server',\n        'envoy',\n        'Via',\n        'HTTP/2 edgeproxy, 1.1 google',\n        'Alt-Svc',\n        'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'Transfer-Encoding',\n        'chunked',\n        [length]: 30\n      ],\n      rawTrailers: [ [length]: 0 ],\n      joinDuplicateHeaders: undefined,\n      aborted: false,\n      upgrade: false,\n      url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      method: null,\n      statusCode: 401,\n      statusMessage: 'Unauthorized',\n      client: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 89 4e eb 32 0d e2 12 b8 07 19 11 af 26 ba 03 6e d3 f5 48 ae ec 16 e6 a4 d5 f9 0b 6d e3 e6 ab 57 04 ... 2078 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3699600,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88618,\n          [Symbol(triggerId)]: 88614,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 89 4e eb 32 0d e2 12 b8 07 19 11 af 26 ba 03 6e d3 f5 48 ae ec 16 e6 a4 d5 f9 0b 6d e3 e6 ab 57 04 ... 2078 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      _consuming: false,\n      _dumped: false,\n      req: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: [Circular *5],\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796614094,\n          socket: 1730796614094,\n          lookup: 1730796614095,\n          connect: 1730796614166,\n          secureConnect: 1730796614291,\n          upload: 1730796614291,\n          response: 1730796614501,\n          end: 1730796614502,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: <ref *7> TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3699600,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88618,\n            [Symbol(triggerId)]: 88614,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _eventsCount: 3,\n      timings: {\n        start: 1730796614094,\n        socket: 1730796614094,\n        lookup: 1730796614095,\n        connect: 1730796614166,\n        secureConnect: 1730796614291,\n        upload: 1730796614291,\n        response: 1730796614501,\n        end: 1730796614502,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 0,\n          dns: 1,\n          tcp: 71,\n          tls: 125,\n          request: 0,\n          firstByte: 210,\n          download: 1,\n          total: 408\n        }\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kHeaders)]: {\n        'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin': '*',\n        'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials': 'true',\n        'access-control-max-age': '604800',\n        'content-type': 'application/json',\n        'content-encoding': 'gzip',\n        'strict-transport-security': 'max-age=31536000',\n        'x-content-type-options': 'nosniff',\n        date: 'Tue, 05 Nov 2024 08:50:14 GMT',\n        server: 'envoy',\n        via: 'HTTP/2 edgeproxy, 1.1 google',\n        'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'transfer-encoding': 'chunked'\n      },\n      [Symbol(kHeadersCount)]: 30,\n      [Symbol(kTrailers)]: null,\n      [Symbol(kTrailersCount)]: 0,\n      [connection]: [Getter/Setter],\n      [headers]: [Getter/Setter],\n      [headersDistinct]: [Getter/Setter],\n      [trailers]: [Getter/Setter],\n      [trailersDistinct]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readableEnded]: [Getter]\n    },\n    _flushed: true,\n    _aborted: false,\n    _requestInitialized: true,\n    _jobs: [ [length]: 0 ],\n    _eventsCount: 10,\n    _requestOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined,\n      ALPNProtocols: undefined,\n      ca: undefined,\n      cert: undefined,\n      key: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: <ref *8> [Function: checkServerIdentity] {\n        [length]: 2,\n        [name]: 'checkServerIdentity',\n        [prototype]: { [constructor]: [Circular *8] }\n      },\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      sigalgs: undefined,\n      sessionTimeout: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      crl: undefined,\n      lookup: undefined,\n      family: undefined,\n      agent: undefined,\n      setHost: true,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      localAddress: undefined,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      createConnection: undefined,\n      timeout: undefined,\n      h2session: undefined\n    },\n    flush: [AsyncFunction (anonymous)] {\n      [length]: 0,\n      [name]: '',\n      [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n    },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [ip]: [Getter],\n    [isAborted]: [Getter],\n    [socket]: [Getter],\n    [downloadProgress]: [Getter],\n    [uploadProgress]: [Getter],\n    [timings]: [Getter],\n    [isFromCache]: [Getter],\n    [reusedSocket]: [Getter],\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter],\n    [readable]: [Getter/Setter],\n    [readableDidRead]: [Getter],\n    [readableAborted]: [Getter],\n    [readableHighWaterMark]: [Getter],\n    [readableBuffer]: [Getter],\n    [readableFlowing]: [Getter/Setter],\n    [readableLength]: [Getter],\n    [readableObjectMode]: [Getter],\n    [readableEncoding]: [Getter],\n    [errored]: [Getter],\n    [closed]: [Getter],\n    [readableEnded]: [Getter]\n  },\n  timings: {\n    start: 1730796614094,\n    socket: 1730796614094,\n    lookup: 1730796614095,\n    connect: 1730796614166,\n    secureConnect: 1730796614291,\n    upload: 1730796614291,\n    response: 1730796614501,\n    end: 1730796614502,\n    error: undefined,\n    abort: undefined,\n    phases: {\n      wait: 0,\n      dns: 1,\n      tcp: 71,\n      tls: 125,\n      request: 0,\n      firstByte: 210,\n      download: 1,\n      total: 408\n    }\n  },\n  name: 'HTTPError',\n  options: {\n    request: undefined,\n    agent: { http: undefined, https: undefined, http2: undefined },\n    h2session: undefined,\n    decompress: true,\n    timeout: {\n      connect: undefined,\n      lookup: undefined,\n      read: undefined,\n      request: undefined,\n      response: undefined,\n      secureConnect: undefined,\n      send: undefined,\n      socket: undefined\n    },\n    prefixUrl: '',\n    body: undefined,\n    form: undefined,\n    json: undefined,\n    cookieJar: undefined,\n    ignoreInvalidCookies: false,\n    searchParams: undefined,\n    dnsLookup: undefined,\n    dnsCache: undefined,\n    context: {},\n    hooks: {\n      init: [ [length]: 0 ],\n      beforeRequest: [ [length]: 0 ],\n      beforeError: [ [length]: 0 ],\n      beforeRedirect: [ [length]: 0 ],\n      beforeRetry: [ [length]: 0 ],\n      afterResponse: [ [length]: 0 ]\n    },\n    followRedirect: true,\n    maxRedirects: 10,\n    cache: undefined,\n    throwHttpErrors: true,\n    username: '',\n    password: '',\n    http2: false,\n    allowGetBody: false,\n    headers: {\n      'user-agent': 'got (https://github.com/sindresorhus/got)',\n      authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n      accept: 'application/json',\n      'accept-encoding': 'gzip, deflate, br'\n    },\n    methodRewriting: false,\n    dnsLookupIpVersion: undefined,\n    parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n    stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n    retry: {\n      limit: 2,\n      methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n      statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n      errorCodes: [\n        'ETIMEDOUT',\n        'ECONNRESET',\n        'EADDRINUSE',\n        'ECONNREFUSED',\n        'EPIPE',\n        'ENOTFOUND',\n        'ENETUNREACH',\n        'EAI_AGAIN',\n        [length]: 8\n      ],\n      maxRetryAfter: undefined,\n      calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n      backoffLimit: Infinity,\n      noise: 100\n    },\n    localAddress: undefined,\n    method: 'GET',\n    createConnection: undefined,\n    cacheOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined\n    },\n    https: {\n      alpnProtocols: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: undefined,\n      certificateAuthority: undefined,\n      key: undefined,\n      certificate: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      signatureAlgorithms: undefined,\n      tlsSessionLifetime: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      certificateRevocationLists: undefined\n    },\n    encoding: undefined,\n    resolveBodyOnly: false,\n    isStream: false,\n    responseType: 'json',\n    url: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    pagination: {\n      transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n      paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n      filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n      shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n      countLimit: Infinity,\n      backoff: 0,\n      requestLimit: 10000,\n      stackAllItems: false\n    },\n    setHost: true,\n    maxHeaderSize: undefined,\n    signal: undefined,\n    enableUnixSockets: false\n  }\n}","timestamp":"2024-11-05 19:50:14"}
{"level":"error","message":"Error occurred: <ref *2> HTTPError: Response code 401 (Unauthorized)\n    at Request.<anonymous> (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/as-promise/index.js:92:42)\n    at Object.onceWrapper (node:events:635:26)\n    at Request.emit (node:events:532:35)\n    at Request._onResponseBase (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:609:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Request._onResponse (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:649:13) {\n  [stack]: [Getter/Setter],\n  [message]: 'Response code 401 (Unauthorized)',\n  [cause]: {},\n  input: undefined,\n  code: 'ERR_NON_2XX_3XX_RESPONSE',\n  [response]: <ref *3> PassThrough {\n    _events: {\n      close: undefined,\n      error: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 1, [name]: '' }\n      },\n      prefinish: <ref *1> [Function: prefinish] {\n        [length]: 0,\n        [name]: 'prefinish',\n        [prototype]: { [constructor]: [Circular *1] }\n      },\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n      unpipe: undefined,\n      aborted: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 0, [name]: '' }\n      }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 65536,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 9996040,\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 65536,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466504,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kWriteCbValue)]: null,\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n    _maxListeners: undefined,\n    _eventsCount: 4,\n    socket: [Getter/Setter],\n    httpVersionMajor: [Getter/Setter],\n    httpVersionMinor: [Getter/Setter],\n    httpVersion: [Getter/Setter],\n    complete: [Getter/Setter],\n    rawHeaders: [Getter/Setter],\n    rawTrailers: [Getter/Setter],\n    joinDuplicateHeaders: [Getter/Setter],\n    aborted: [Getter/Setter],\n    upgrade: [Getter/Setter],\n    url: [Getter/Setter],\n    method: [Getter/Setter],\n    statusCode: [Getter/Setter],\n    statusMessage: [Getter/Setter],\n    client: [Getter/Setter],\n    _consuming: [Getter/Setter],\n    _dumped: [Getter/Setter],\n    req: [Getter/Setter],\n    timings: [Getter/Setter],\n    headers: [Getter/Setter],\n    setTimeout: [Getter/Setter],\n    trailers: [Getter/Setter],\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    request: Request {\n      _events: {\n        close: undefined,\n        error: undefined,\n        prefinish: undefined,\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: undefined,\n        pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n        newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n        response: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        retry: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        request: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        redirect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        uploadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        downloadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n        pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 0,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 1574906,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 0,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466746,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      constructor: undefined,\n      _noPipe: true,\n      options: {\n        request: undefined,\n        agent: { http: undefined, https: undefined, http2: undefined },\n        h2session: undefined,\n        decompress: true,\n        timeout: {\n          connect: undefined,\n          lookup: undefined,\n          read: undefined,\n          request: undefined,\n          response: undefined,\n          secureConnect: undefined,\n          send: undefined,\n          socket: undefined\n        },\n        prefixUrl: '',\n        body: undefined,\n        form: undefined,\n        json: undefined,\n        cookieJar: undefined,\n        ignoreInvalidCookies: false,\n        searchParams: undefined,\n        dnsLookup: undefined,\n        dnsCache: undefined,\n        context: {},\n        hooks: {\n          init: [ [length]: 0 ],\n          beforeRequest: [ [length]: 0 ],\n          beforeError: [ [length]: 0 ],\n          beforeRedirect: [ [length]: 0 ],\n          beforeRetry: [ [length]: 0 ],\n          afterResponse: [ [length]: 0 ]\n        },\n        followRedirect: true,\n        maxRedirects: 10,\n        cache: undefined,\n        throwHttpErrors: true,\n        username: '',\n        password: '',\n        http2: false,\n        allowGetBody: false,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        methodRewriting: false,\n        dnsLookupIpVersion: undefined,\n        parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n        stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n        retry: {\n          limit: 2,\n          methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n          statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n          errorCodes: [\n            'ETIMEDOUT',\n            'ECONNRESET',\n            'EADDRINUSE',\n            'ECONNREFUSED',\n            'EPIPE',\n            'ENOTFOUND',\n            'ENETUNREACH',\n            'EAI_AGAIN',\n            [length]: 8\n          ],\n          maxRetryAfter: undefined,\n          calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n          backoffLimit: Infinity,\n          noise: 100\n        },\n        localAddress: undefined,\n        method: 'GET',\n        createConnection: undefined,\n        cacheOptions: {\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined\n        },\n        https: {\n          alpnProtocols: undefined,\n          rejectUnauthorized: undefined,\n          checkServerIdentity: undefined,\n          certificateAuthority: undefined,\n          key: undefined,\n          certificate: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          ciphers: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          signatureAlgorithms: undefined,\n          tlsSessionLifetime: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          certificateRevocationLists: undefined\n        },\n        encoding: undefined,\n        resolveBodyOnly: false,\n        isStream: false,\n        responseType: 'json',\n        url: URL {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          origin: 'https://api.spotify.com',\n          protocol: 'https:',\n          username: '',\n          password: '',\n          host: 'api.spotify.com',\n          hostname: 'api.spotify.com',\n          port: '',\n          pathname: '/v1/me/playlists',\n          search: '?limit=50',\n          searchParams: URLSearchParams { 'limit' => '50' },\n          hash: '',\n          [Symbol(context)]: URLContext {\n            href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n            protocol_end: 6,\n            username_end: 8,\n            host_start: 8,\n            host_end: 23,\n            pathname_start: 23,\n            search_start: 39,\n            hash_start: 4294967295,\n            port: 4294967295,\n            scheme_type: 2,\n            [hasPort]: [Getter],\n            [hasSearch]: [Getter],\n            [hasHash]: [Getter]\n          }\n        },\n        pagination: {\n          transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n          paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n          filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n          shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n          countLimit: Infinity,\n          backoff: 0,\n          requestLimit: 10000,\n          stackAllItems: false\n        },\n        setHost: true,\n        maxHeaderSize: undefined,\n        signal: undefined,\n        enableUnixSockets: false\n      },\n      response: [Circular *3],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      retryCount: 0,\n      _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _downloadedSize: 81,\n      _uploadedSize: 0,\n      _stopReading: true,\n      _pipedServerResponses: Set(0) {},\n      _request: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: IncomingMessage {\n          _events: [Object],\n          _readableState: [ReadableState],\n          _maxListeners: undefined,\n          socket: null,\n          httpVersionMajor: 1,\n          httpVersionMinor: 1,\n          httpVersion: '1.1',\n          complete: true,\n          rawHeaders: [Array],\n          rawTrailers: [Array],\n          joinDuplicateHeaders: undefined,\n          aborted: false,\n          upgrade: false,\n          url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          method: null,\n          statusCode: 401,\n          statusMessage: 'Unauthorized',\n          client: [TLSSocket],\n          _consuming: false,\n          _dumped: false,\n          req: [Circular *4],\n          _eventsCount: 3,\n          timings: [Object],\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kHeaders)]: [Object],\n          [Symbol(kHeadersCount)]: 30,\n          [Symbol(kTrailers)]: null,\n          [Symbol(kTrailersCount)]: 0,\n          [connection]: [Getter/Setter],\n          [headers]: [Getter/Setter],\n          [headersDistinct]: [Getter/Setter],\n          [trailers]: [Getter/Setter],\n          [trailersDistinct]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableDidRead]: [Getter],\n          [readableAborted]: [Getter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readableEnded]: [Getter]\n        },\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796614094,\n          socket: 1730796614094,\n          lookup: 1730796614095,\n          connect: 1730796614166,\n          secureConnect: 1730796614291,\n          upload: 1730796614291,\n          response: 1730796614501,\n          end: 1730796614502,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3699600,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88618,\n            [Symbol(triggerId)]: 88614,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _responseSize: 81,\n      _bodySize: 0,\n      _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n      _isFromCache: false,\n      _cannotHaveBody: true,\n      _triggerRead: true,\n      _cancelTimeouts: [Function: cancelTimeouts] {\n        [length]: 0,\n        [name]: 'cancelTimeouts'\n      },\n      _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _nativeResponse: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:14 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3699600,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88618,\n            [Symbol(triggerId)]: 88614,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: <ref *4> ClientRequest {\n          _events: [Object: null prototype],\n          _eventsCount: 8,\n          _maxListeners: undefined,\n          outputData: [Array],\n          outputSize: 0,\n          writable: true,\n          destroyed: true,\n          _last: true,\n          chunkedEncoding: false,\n          shouldKeepAlive: true,\n          maxRequestsOnConnectionReached: false,\n          _defaultKeepAlive: true,\n          useChunkedEncodingByDefault: false,\n          sendDate: false,\n          _removedConnection: false,\n          _removedContLen: false,\n          _removedTE: false,\n          strictContentLength: false,\n          _contentLength: 0,\n          _hasBody: true,\n          _trailer: '',\n          finished: true,\n          _headerSent: true,\n          _closed: true,\n          _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n            'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n            'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n            'accept: application/json\\r\\n' +\n            'accept-encoding: gzip, deflate, br\\r\\n' +\n            'Host: api.spotify.com\\r\\n' +\n            'Connection: keep-alive\\r\\n' +\n            '\\r\\n',\n          _keepAliveTimeout: 0,\n          _onPendingData: [Function],\n          agent: [Agent],\n          socketPath: undefined,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          insecureHTTPParser: undefined,\n          joinDuplicateHeaders: undefined,\n          path: '/v1/me/playlists?limit=50',\n          _ended: true,\n          res: [Circular *5],\n          aborted: false,\n          timeoutCb: null,\n          upgradeOrConnect: false,\n          parser: null,\n          maxHeadersCount: null,\n          reusedSocket: false,\n          host: 'api.spotify.com',\n          protocol: 'https:',\n          timings: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(kNeedDrain)]: false,\n          [Symbol(corked)]: 0,\n          [Symbol(kChunkedBuffer)]: [Array],\n          [Symbol(kChunkedLength)]: 0,\n          [Symbol(kSocket)]: [TLSSocket],\n          [Symbol(kOutHeaders)]: [Object: null prototype],\n          [Symbol(errored)]: null,\n          [Symbol(kHighWaterMark)]: 65536,\n          [Symbol(kRejectNonStandardBodyWrites)]: false,\n          [Symbol(kUniqueHeaders)]: null,\n          [Symbol(reentry)]: true,\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [writableFinished]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableLength]: [Getter],\n          [writableHighWaterMark]: [Getter],\n          [writableCorked]: [Getter],\n          [_headers]: [Getter/Setter],\n          [connection]: [Getter/Setter],\n          [socket]: [Getter/Setter],\n          [_headerNames]: [Getter/Setter],\n          headersSent: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter]\n        },\n        _eventsCount: 3,\n        timings: {\n          start: 1730796614094,\n          socket: 1730796614094,\n          lookup: 1730796614095,\n          connect: 1730796614166,\n          secureConnect: 1730796614291,\n          upload: 1730796614291,\n          response: 1730796614501,\n          end: 1730796614502,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:14 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      _flushed: true,\n      _aborted: false,\n      _requestInitialized: true,\n      _jobs: [ [length]: 0 ],\n      _eventsCount: 10,\n      _requestOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined,\n        ALPNProtocols: undefined,\n        ca: undefined,\n        cert: undefined,\n        key: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: [Function: checkServerIdentity] {\n          [length]: 2,\n          [name]: 'checkServerIdentity',\n          [prototype]: [Object]\n        },\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        sigalgs: undefined,\n        sessionTimeout: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        crl: undefined,\n        lookup: undefined,\n        family: undefined,\n        agent: undefined,\n        setHost: true,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        localAddress: undefined,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        createConnection: undefined,\n        timeout: undefined,\n        h2session: undefined\n      },\n      flush: [AsyncFunction (anonymous)] {\n        [length]: 0,\n        [name]: '',\n        [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [ip]: [Getter],\n      [isAborted]: [Getter],\n      [socket]: [Getter],\n      [downloadProgress]: [Getter],\n      [uploadProgress]: [Getter],\n      [timings]: [Getter],\n      [isFromCache]: [Getter],\n      [reusedSocket]: [Getter],\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [readableEnded]: [Getter]\n    },\n    isFromCache: false,\n    ip: '35.186.224.24',\n    retryCount: 0,\n    ok: false,\n    rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n    body: { error: { status: 401, message: 'The access token expired' } },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [Symbol(kCallback)]: null,\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter]\n  },\n  [request]: <ref *6> Request {\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: undefined,\n      pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n      newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n      response: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      retry: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 2, [name]: '' }\n      },\n      request: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      redirect: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      uploadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      downloadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n      pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 0,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 1574906,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 0,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466746,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    constructor: undefined,\n    _noPipe: true,\n    options: {\n      request: undefined,\n      agent: { http: undefined, https: undefined, http2: undefined },\n      h2session: undefined,\n      decompress: true,\n      timeout: {\n        connect: undefined,\n        lookup: undefined,\n        read: undefined,\n        request: undefined,\n        response: undefined,\n        secureConnect: undefined,\n        send: undefined,\n        socket: undefined\n      },\n      prefixUrl: '',\n      body: undefined,\n      form: undefined,\n      json: undefined,\n      cookieJar: undefined,\n      ignoreInvalidCookies: false,\n      searchParams: undefined,\n      dnsLookup: undefined,\n      dnsCache: undefined,\n      context: {},\n      hooks: {\n        init: [ [length]: 0 ],\n        beforeRequest: [ [length]: 0 ],\n        beforeError: [ [length]: 0 ],\n        beforeRedirect: [ [length]: 0 ],\n        beforeRetry: [ [length]: 0 ],\n        afterResponse: [ [length]: 0 ]\n      },\n      followRedirect: true,\n      maxRedirects: 10,\n      cache: undefined,\n      throwHttpErrors: true,\n      username: '',\n      password: '',\n      http2: false,\n      allowGetBody: false,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      methodRewriting: false,\n      dnsLookupIpVersion: undefined,\n      parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n      stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n      retry: {\n        limit: 2,\n        methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n        statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n        errorCodes: [\n          'ETIMEDOUT',\n          'ECONNRESET',\n          'EADDRINUSE',\n          'ECONNREFUSED',\n          'EPIPE',\n          'ENOTFOUND',\n          'ENETUNREACH',\n          'EAI_AGAIN',\n          [length]: 8\n        ],\n        maxRetryAfter: undefined,\n        calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n        backoffLimit: Infinity,\n        noise: 100\n      },\n      localAddress: undefined,\n      method: 'GET',\n      createConnection: undefined,\n      cacheOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined\n      },\n      https: {\n        alpnProtocols: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: undefined,\n        certificateAuthority: undefined,\n        key: undefined,\n        certificate: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        signatureAlgorithms: undefined,\n        tlsSessionLifetime: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        certificateRevocationLists: undefined\n      },\n      encoding: undefined,\n      resolveBodyOnly: false,\n      isStream: false,\n      responseType: 'json',\n      url: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      pagination: {\n        transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n        paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n        filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n        shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n        countLimit: Infinity,\n        backoff: 0,\n        requestLimit: 10000,\n        stackAllItems: false\n      },\n      setHost: true,\n      maxHeaderSize: undefined,\n      signal: undefined,\n      enableUnixSockets: false\n    },\n    response: <ref *3> PassThrough {\n      _events: {\n        close: undefined,\n        error: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        prefinish: <ref *1> [Function: prefinish] {\n          [length]: 0,\n          [name]: 'prefinish',\n          [prototype]: [Object]\n        },\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n        unpipe: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 9996040,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 65536,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466504,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kWriteCbValue)]: null,\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n      _maxListeners: undefined,\n      _eventsCount: 4,\n      socket: [Getter/Setter],\n      httpVersionMajor: [Getter/Setter],\n      httpVersionMinor: [Getter/Setter],\n      httpVersion: [Getter/Setter],\n      complete: [Getter/Setter],\n      rawHeaders: [Getter/Setter],\n      rawTrailers: [Getter/Setter],\n      joinDuplicateHeaders: [Getter/Setter],\n      aborted: [Getter/Setter],\n      upgrade: [Getter/Setter],\n      url: [Getter/Setter],\n      method: [Getter/Setter],\n      statusCode: [Getter/Setter],\n      statusMessage: [Getter/Setter],\n      client: [Getter/Setter],\n      _consuming: [Getter/Setter],\n      _dumped: [Getter/Setter],\n      req: [Getter/Setter],\n      timings: [Getter/Setter],\n      headers: [Getter/Setter],\n      setTimeout: [Getter/Setter],\n      trailers: [Getter/Setter],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      request: [Circular *6],\n      isFromCache: false,\n      ip: '35.186.224.24',\n      retryCount: 0,\n      ok: false,\n      rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n      body: { error: { status: 401, message: 'The access token expired' } },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kCallback)]: null,\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter]\n    },\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    retryCount: 0,\n    _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _downloadedSize: 81,\n    _uploadedSize: 0,\n    _stopReading: true,\n    _pipedServerResponses: Set(0) {},\n    _request: <ref *4> ClientRequest {\n      _events: [Object: null prototype] {\n        socket: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        error: [ [Function], [Function], [length]: 2 ],\n        connect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        continue: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        information: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        upgrade: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        finish: [Function: requestOnFinish] {\n          [length]: 0,\n          [name]: 'requestOnFinish',\n          [prototype]: [Object]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      outputData: [ [length]: 0 ],\n      outputSize: 0,\n      writable: true,\n      destroyed: true,\n      _last: true,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: false,\n      sendDate: false,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: 0,\n      _hasBody: true,\n      _trailer: '',\n      finished: true,\n      _headerSent: true,\n      _closed: true,\n      _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n        'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n        'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n        'accept: application/json\\r\\n' +\n        'accept-encoding: gzip, deflate, br\\r\\n' +\n        'Host: api.spotify.com\\r\\n' +\n        'Connection: keep-alive\\r\\n' +\n        '\\r\\n',\n      _keepAliveTimeout: 0,\n      _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n      agent: Agent {\n        _events: [Object: null prototype] {\n          free: [Function],\n          newListener: [Function]\n        },\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        defaultPort: 443,\n        protocol: 'https:',\n        options: [Object: null prototype] {\n          keepAlive: true,\n          scheduling: 'lifo',\n          timeout: 5000,\n          noDelay: true,\n          path: null\n        },\n        requests: [Object: null prototype] {},\n        sockets: [Object: null prototype] {},\n        freeSockets: [Object: null prototype] {\n          'api.spotify.com:443:::::::::::::::::::::': [Array]\n        },\n        keepAliveMsecs: 1000,\n        keepAlive: true,\n        maxSockets: Infinity,\n        maxFreeSockets: 256,\n        scheduling: 'lifo',\n        maxTotalSockets: Infinity,\n        totalSocketCount: 1,\n        maxCachedSessions: 100,\n        _sessionCache: { map: [Object], list: [Array] },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false\n      },\n      socketPath: undefined,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      joinDuplicateHeaders: undefined,\n      path: '/v1/me/playlists?limit=50',\n      _ended: true,\n      res: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:14 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3699600,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88618,\n            [Symbol(triggerId)]: 88614,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: [Circular *4],\n        _eventsCount: 3,\n        timings: {\n          start: 1730796614094,\n          socket: 1730796614094,\n          lookup: 1730796614095,\n          connect: 1730796614166,\n          secureConnect: 1730796614291,\n          upload: 1730796614291,\n          response: 1730796614501,\n          end: 1730796614502,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:14 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      aborted: false,\n      timeoutCb: null,\n      upgradeOrConnect: false,\n      parser: null,\n      maxHeadersCount: null,\n      reusedSocket: false,\n      host: 'api.spotify.com',\n      protocol: 'https:',\n      timings: {\n        start: 1730796614094,\n        socket: 1730796614094,\n        lookup: 1730796614095,\n        connect: 1730796614166,\n        secureConnect: 1730796614291,\n        upload: 1730796614291,\n        response: 1730796614501,\n        end: 1730796614502,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 0,\n          dns: 1,\n          tcp: 71,\n          tls: 125,\n          request: 0,\n          firstByte: 210,\n          download: 1,\n          total: 408\n        }\n      },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n      [Symbol(kChunkedLength)]: 0,\n      [Symbol(kSocket)]: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 89 4e eb 32 0d e2 12 b8 07 19 11 af 26 ba 03 6e d3 f5 48 ae ec 16 e6 a4 d5 f9 0b 6d e3 e6 ab 57 04 ... 2078 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3699600,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88618,\n          [Symbol(triggerId)]: 88614,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 89 4e eb 32 0d e2 12 b8 07 19 11 af 26 ba 03 6e d3 f5 48 ae ec 16 e6 a4 d5 f9 0b 6d e3 e6 ab 57 04 ... 2078 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      [Symbol(kOutHeaders)]: [Object: null prototype] {\n        'user-agent': [\n          'user-agent',\n          'got (https://github.com/sindresorhus/got)',\n          [length]: 2\n        ],\n        authorization: [\n          'authorization',\n          'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          [length]: 2\n        ],\n        accept: [ 'accept', 'application/json', [length]: 2 ],\n        'accept-encoding': [ 'accept-encoding', 'gzip, deflate, br', [length]: 2 ],\n        host: [ 'Host', 'api.spotify.com', [length]: 2 ]\n      },\n      [Symbol(errored)]: null,\n      [Symbol(kHighWaterMark)]: 65536,\n      [Symbol(kRejectNonStandardBodyWrites)]: false,\n      [Symbol(kUniqueHeaders)]: null,\n      [Symbol(reentry)]: true,\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [writableFinished]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableLength]: [Getter],\n      [writableHighWaterMark]: [Getter],\n      [writableCorked]: [Getter],\n      [_headers]: [Getter/Setter],\n      [connection]: [Getter/Setter],\n      [socket]: [Getter/Setter],\n      [_headerNames]: [Getter/Setter],\n      headersSent: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter]\n    },\n    _responseSize: 81,\n    _bodySize: 0,\n    _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n    _isFromCache: false,\n    _cannotHaveBody: true,\n    _triggerRead: true,\n    _cancelTimeouts: [Function: cancelTimeouts] { [length]: 0, [name]: 'cancelTimeouts' },\n    _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _nativeResponse: <ref *5> IncomingMessage {\n      _events: {\n        close: undefined,\n        error: undefined,\n        data: undefined,\n        end: [Function: responseOnEnd] {\n          [length]: 0,\n          [name]: 'responseOnEnd',\n          [prototype]: [Object]\n        },\n        readable: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 110892924,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _maxListeners: undefined,\n      socket: null,\n      httpVersionMajor: 1,\n      httpVersionMinor: 1,\n      httpVersion: '1.1',\n      complete: true,\n      rawHeaders: [\n        'www-authenticate',\n        'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin',\n        '*',\n        'access-control-allow-headers',\n        'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods',\n        'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials',\n        'true',\n        'access-control-max-age',\n        '604800',\n        'content-type',\n        'application/json',\n        'content-encoding',\n        'gzip',\n        'strict-transport-security',\n        'max-age=31536000',\n        'x-content-type-options',\n        'nosniff',\n        'date',\n        'Tue, 05 Nov 2024 08:50:14 GMT',\n        'server',\n        'envoy',\n        'Via',\n        'HTTP/2 edgeproxy, 1.1 google',\n        'Alt-Svc',\n        'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'Transfer-Encoding',\n        'chunked',\n        [length]: 30\n      ],\n      rawTrailers: [ [length]: 0 ],\n      joinDuplicateHeaders: undefined,\n      aborted: false,\n      upgrade: false,\n      url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      method: null,\n      statusCode: 401,\n      statusMessage: 'Unauthorized',\n      client: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 89 4e eb 32 0d e2 12 b8 07 19 11 af 26 ba 03 6e d3 f5 48 ae ec 16 e6 a4 d5 f9 0b 6d e3 e6 ab 57 04 ... 2078 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3699600,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88618,\n          [Symbol(triggerId)]: 88614,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 4c 02 01 01 02 02 03 04 04 02 13 02 04 20 89 4e eb 32 0d e2 12 b8 07 19 11 af 26 ba 03 6e d3 f5 48 ae ec 16 e6 a4 d5 f9 0b 6d e3 e6 ab 57 04 ... 2078 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      _consuming: false,\n      _dumped: false,\n      req: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: [Circular *5],\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796614094,\n          socket: 1730796614094,\n          lookup: 1730796614095,\n          connect: 1730796614166,\n          secureConnect: 1730796614291,\n          upload: 1730796614291,\n          response: 1730796614501,\n          end: 1730796614502,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: <ref *7> TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3699600,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88618,\n            [Symbol(triggerId)]: 88614,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _eventsCount: 3,\n      timings: {\n        start: 1730796614094,\n        socket: 1730796614094,\n        lookup: 1730796614095,\n        connect: 1730796614166,\n        secureConnect: 1730796614291,\n        upload: 1730796614291,\n        response: 1730796614501,\n        end: 1730796614502,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 0,\n          dns: 1,\n          tcp: 71,\n          tls: 125,\n          request: 0,\n          firstByte: 210,\n          download: 1,\n          total: 408\n        }\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kHeaders)]: {\n        'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin': '*',\n        'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials': 'true',\n        'access-control-max-age': '604800',\n        'content-type': 'application/json',\n        'content-encoding': 'gzip',\n        'strict-transport-security': 'max-age=31536000',\n        'x-content-type-options': 'nosniff',\n        date: 'Tue, 05 Nov 2024 08:50:14 GMT',\n        server: 'envoy',\n        via: 'HTTP/2 edgeproxy, 1.1 google',\n        'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'transfer-encoding': 'chunked'\n      },\n      [Symbol(kHeadersCount)]: 30,\n      [Symbol(kTrailers)]: null,\n      [Symbol(kTrailersCount)]: 0,\n      [connection]: [Getter/Setter],\n      [headers]: [Getter/Setter],\n      [headersDistinct]: [Getter/Setter],\n      [trailers]: [Getter/Setter],\n      [trailersDistinct]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readableEnded]: [Getter]\n    },\n    _flushed: true,\n    _aborted: false,\n    _requestInitialized: true,\n    _jobs: [ [length]: 0 ],\n    _eventsCount: 10,\n    _requestOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined,\n      ALPNProtocols: undefined,\n      ca: undefined,\n      cert: undefined,\n      key: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: <ref *8> [Function: checkServerIdentity] {\n        [length]: 2,\n        [name]: 'checkServerIdentity',\n        [prototype]: { [constructor]: [Circular *8] }\n      },\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      sigalgs: undefined,\n      sessionTimeout: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      crl: undefined,\n      lookup: undefined,\n      family: undefined,\n      agent: undefined,\n      setHost: true,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      localAddress: undefined,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      createConnection: undefined,\n      timeout: undefined,\n      h2session: undefined\n    },\n    flush: [AsyncFunction (anonymous)] {\n      [length]: 0,\n      [name]: '',\n      [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n    },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [ip]: [Getter],\n    [isAborted]: [Getter],\n    [socket]: [Getter],\n    [downloadProgress]: [Getter],\n    [uploadProgress]: [Getter],\n    [timings]: [Getter],\n    [isFromCache]: [Getter],\n    [reusedSocket]: [Getter],\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter],\n    [readable]: [Getter/Setter],\n    [readableDidRead]: [Getter],\n    [readableAborted]: [Getter],\n    [readableHighWaterMark]: [Getter],\n    [readableBuffer]: [Getter],\n    [readableFlowing]: [Getter/Setter],\n    [readableLength]: [Getter],\n    [readableObjectMode]: [Getter],\n    [readableEncoding]: [Getter],\n    [errored]: [Getter],\n    [closed]: [Getter],\n    [readableEnded]: [Getter]\n  },\n  timings: {\n    start: 1730796614094,\n    socket: 1730796614094,\n    lookup: 1730796614095,\n    connect: 1730796614166,\n    secureConnect: 1730796614291,\n    upload: 1730796614291,\n    response: 1730796614501,\n    end: 1730796614502,\n    error: undefined,\n    abort: undefined,\n    phases: {\n      wait: 0,\n      dns: 1,\n      tcp: 71,\n      tls: 125,\n      request: 0,\n      firstByte: 210,\n      download: 1,\n      total: 408\n    }\n  },\n  name: 'HTTPError',\n  options: {\n    request: undefined,\n    agent: { http: undefined, https: undefined, http2: undefined },\n    h2session: undefined,\n    decompress: true,\n    timeout: {\n      connect: undefined,\n      lookup: undefined,\n      read: undefined,\n      request: undefined,\n      response: undefined,\n      secureConnect: undefined,\n      send: undefined,\n      socket: undefined\n    },\n    prefixUrl: '',\n    body: undefined,\n    form: undefined,\n    json: undefined,\n    cookieJar: undefined,\n    ignoreInvalidCookies: false,\n    searchParams: undefined,\n    dnsLookup: undefined,\n    dnsCache: undefined,\n    context: {},\n    hooks: {\n      init: [ [length]: 0 ],\n      beforeRequest: [ [length]: 0 ],\n      beforeError: [ [length]: 0 ],\n      beforeRedirect: [ [length]: 0 ],\n      beforeRetry: [ [length]: 0 ],\n      afterResponse: [ [length]: 0 ]\n    },\n    followRedirect: true,\n    maxRedirects: 10,\n    cache: undefined,\n    throwHttpErrors: true,\n    username: '',\n    password: '',\n    http2: false,\n    allowGetBody: false,\n    headers: {\n      'user-agent': 'got (https://github.com/sindresorhus/got)',\n      authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n      accept: 'application/json',\n      'accept-encoding': 'gzip, deflate, br'\n    },\n    methodRewriting: false,\n    dnsLookupIpVersion: undefined,\n    parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n    stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n    retry: {\n      limit: 2,\n      methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n      statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n      errorCodes: [\n        'ETIMEDOUT',\n        'ECONNRESET',\n        'EADDRINUSE',\n        'ECONNREFUSED',\n        'EPIPE',\n        'ENOTFOUND',\n        'ENETUNREACH',\n        'EAI_AGAIN',\n        [length]: 8\n      ],\n      maxRetryAfter: undefined,\n      calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n      backoffLimit: Infinity,\n      noise: 100\n    },\n    localAddress: undefined,\n    method: 'GET',\n    createConnection: undefined,\n    cacheOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined\n    },\n    https: {\n      alpnProtocols: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: undefined,\n      certificateAuthority: undefined,\n      key: undefined,\n      certificate: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      signatureAlgorithms: undefined,\n      tlsSessionLifetime: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      certificateRevocationLists: undefined\n    },\n    encoding: undefined,\n    resolveBodyOnly: false,\n    isStream: false,\n    responseType: 'json',\n    url: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    pagination: {\n      transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n      paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n      filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n      shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n      countLimit: Infinity,\n      backoff: 0,\n      requestLimit: 10000,\n      stackAllItems: false\n    },\n    setHost: true,\n    maxHeaderSize: undefined,\n    signal: undefined,\n    enableUnixSockets: false\n  }\n}","timestamp":"2024-11-05 19:50:14"}
{"level":"error","message":"Error fetching playlists: <ref *2> HTTPError: Response code 401 (Unauthorized)\n    at Request.<anonymous> (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/as-promise/index.js:92:42)\n    at Object.onceWrapper (node:events:635:26)\n    at Request.emit (node:events:532:35)\n    at Request._onResponseBase (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:609:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Request._onResponse (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:649:13) {\n  [stack]: [Getter/Setter],\n  [message]: 'Response code 401 (Unauthorized)',\n  [cause]: {},\n  input: undefined,\n  code: 'ERR_NON_2XX_3XX_RESPONSE',\n  [response]: <ref *3> PassThrough {\n    _events: {\n      close: undefined,\n      error: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 1, [name]: '' }\n      },\n      prefinish: <ref *1> [Function: prefinish] {\n        [length]: 0,\n        [name]: 'prefinish',\n        [prototype]: { [constructor]: [Circular *1] }\n      },\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n      unpipe: undefined,\n      aborted: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 0, [name]: '' }\n      }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 65536,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 9996040,\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 65536,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466504,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kWriteCbValue)]: null,\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n    _maxListeners: undefined,\n    _eventsCount: 4,\n    socket: [Getter/Setter],\n    httpVersionMajor: [Getter/Setter],\n    httpVersionMinor: [Getter/Setter],\n    httpVersion: [Getter/Setter],\n    complete: [Getter/Setter],\n    rawHeaders: [Getter/Setter],\n    rawTrailers: [Getter/Setter],\n    joinDuplicateHeaders: [Getter/Setter],\n    aborted: [Getter/Setter],\n    upgrade: [Getter/Setter],\n    url: [Getter/Setter],\n    method: [Getter/Setter],\n    statusCode: [Getter/Setter],\n    statusMessage: [Getter/Setter],\n    client: [Getter/Setter],\n    _consuming: [Getter/Setter],\n    _dumped: [Getter/Setter],\n    req: [Getter/Setter],\n    timings: [Getter/Setter],\n    headers: [Getter/Setter],\n    setTimeout: [Getter/Setter],\n    trailers: [Getter/Setter],\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    request: Request {\n      _events: {\n        close: undefined,\n        error: undefined,\n        prefinish: undefined,\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: undefined,\n        pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n        newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n        response: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        retry: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        request: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        redirect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        uploadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        downloadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n        pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 0,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 1574906,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 0,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466746,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      constructor: undefined,\n      _noPipe: true,\n      options: {\n        request: undefined,\n        agent: { http: undefined, https: undefined, http2: undefined },\n        h2session: undefined,\n        decompress: true,\n        timeout: {\n          connect: undefined,\n          lookup: undefined,\n          read: undefined,\n          request: undefined,\n          response: undefined,\n          secureConnect: undefined,\n          send: undefined,\n          socket: undefined\n        },\n        prefixUrl: '',\n        body: undefined,\n        form: undefined,\n        json: undefined,\n        cookieJar: undefined,\n        ignoreInvalidCookies: false,\n        searchParams: undefined,\n        dnsLookup: undefined,\n        dnsCache: undefined,\n        context: {},\n        hooks: {\n          init: [ [length]: 0 ],\n          beforeRequest: [ [length]: 0 ],\n          beforeError: [ [length]: 0 ],\n          beforeRedirect: [ [length]: 0 ],\n          beforeRetry: [ [length]: 0 ],\n          afterResponse: [ [length]: 0 ]\n        },\n        followRedirect: true,\n        maxRedirects: 10,\n        cache: undefined,\n        throwHttpErrors: true,\n        username: '',\n        password: '',\n        http2: false,\n        allowGetBody: false,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        methodRewriting: false,\n        dnsLookupIpVersion: undefined,\n        parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n        stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n        retry: {\n          limit: 2,\n          methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n          statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n          errorCodes: [\n            'ETIMEDOUT',\n            'ECONNRESET',\n            'EADDRINUSE',\n            'ECONNREFUSED',\n            'EPIPE',\n            'ENOTFOUND',\n            'ENETUNREACH',\n            'EAI_AGAIN',\n            [length]: 8\n          ],\n          maxRetryAfter: undefined,\n          calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n          backoffLimit: Infinity,\n          noise: 100\n        },\n        localAddress: undefined,\n        method: 'GET',\n        createConnection: undefined,\n        cacheOptions: {\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined\n        },\n        https: {\n          alpnProtocols: undefined,\n          rejectUnauthorized: undefined,\n          checkServerIdentity: undefined,\n          certificateAuthority: undefined,\n          key: undefined,\n          certificate: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          ciphers: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          signatureAlgorithms: undefined,\n          tlsSessionLifetime: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          certificateRevocationLists: undefined\n        },\n        encoding: undefined,\n        resolveBodyOnly: false,\n        isStream: false,\n        responseType: 'json',\n        url: URL {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          origin: 'https://api.spotify.com',\n          protocol: 'https:',\n          username: '',\n          password: '',\n          host: 'api.spotify.com',\n          hostname: 'api.spotify.com',\n          port: '',\n          pathname: '/v1/me/playlists',\n          search: '?limit=50',\n          searchParams: URLSearchParams { 'limit' => '50' },\n          hash: '',\n          [Symbol(context)]: URLContext {\n            href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n            protocol_end: 6,\n            username_end: 8,\n            host_start: 8,\n            host_end: 23,\n            pathname_start: 23,\n            search_start: 39,\n            hash_start: 4294967295,\n            port: 4294967295,\n            scheme_type: 2,\n            [hasPort]: [Getter],\n            [hasSearch]: [Getter],\n            [hasHash]: [Getter]\n          }\n        },\n        pagination: {\n          transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n          paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n          filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n          shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n          countLimit: Infinity,\n          backoff: 0,\n          requestLimit: 10000,\n          stackAllItems: false\n        },\n        setHost: true,\n        maxHeaderSize: undefined,\n        signal: undefined,\n        enableUnixSockets: false\n      },\n      response: [Circular *3],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      retryCount: 0,\n      _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _downloadedSize: 81,\n      _uploadedSize: 0,\n      _stopReading: true,\n      _pipedServerResponses: Set(0) {},\n      _request: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: IncomingMessage {\n          _events: [Object],\n          _readableState: [ReadableState],\n          _maxListeners: undefined,\n          socket: null,\n          httpVersionMajor: 1,\n          httpVersionMinor: 1,\n          httpVersion: '1.1',\n          complete: true,\n          rawHeaders: [Array],\n          rawTrailers: [Array],\n          joinDuplicateHeaders: undefined,\n          aborted: false,\n          upgrade: false,\n          url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          method: null,\n          statusCode: 401,\n          statusMessage: 'Unauthorized',\n          client: [TLSSocket],\n          _consuming: false,\n          _dumped: false,\n          req: [Circular *4],\n          _eventsCount: 3,\n          timings: [Object],\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kHeaders)]: [Object],\n          [Symbol(kHeadersCount)]: 30,\n          [Symbol(kTrailers)]: null,\n          [Symbol(kTrailersCount)]: 0,\n          [connection]: [Getter/Setter],\n          [headers]: [Getter/Setter],\n          [headersDistinct]: [Getter/Setter],\n          [trailers]: [Getter/Setter],\n          [trailersDistinct]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableDidRead]: [Getter],\n          [readableAborted]: [Getter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readableEnded]: [Getter]\n        },\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796623955,\n          socket: 1730796623956,\n          lookup: 1730796623956,\n          connect: 1730796624002,\n          secureConnect: 1730796624147,\n          upload: 1730796624147,\n          response: 1730796624356,\n          end: 1730796624358,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3709457,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88763,\n            [Symbol(triggerId)]: 88759,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _responseSize: 81,\n      _bodySize: 0,\n      _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n      _isFromCache: false,\n      _cannotHaveBody: true,\n      _triggerRead: true,\n      _cancelTimeouts: [Function: cancelTimeouts] {\n        [length]: 0,\n        [name]: 'cancelTimeouts'\n      },\n      _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _nativeResponse: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:24 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3709457,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88763,\n            [Symbol(triggerId)]: 88759,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: <ref *4> ClientRequest {\n          _events: [Object: null prototype],\n          _eventsCount: 8,\n          _maxListeners: undefined,\n          outputData: [Array],\n          outputSize: 0,\n          writable: true,\n          destroyed: true,\n          _last: true,\n          chunkedEncoding: false,\n          shouldKeepAlive: true,\n          maxRequestsOnConnectionReached: false,\n          _defaultKeepAlive: true,\n          useChunkedEncodingByDefault: false,\n          sendDate: false,\n          _removedConnection: false,\n          _removedContLen: false,\n          _removedTE: false,\n          strictContentLength: false,\n          _contentLength: 0,\n          _hasBody: true,\n          _trailer: '',\n          finished: true,\n          _headerSent: true,\n          _closed: true,\n          _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n            'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n            'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n            'accept: application/json\\r\\n' +\n            'accept-encoding: gzip, deflate, br\\r\\n' +\n            'Host: api.spotify.com\\r\\n' +\n            'Connection: keep-alive\\r\\n' +\n            '\\r\\n',\n          _keepAliveTimeout: 0,\n          _onPendingData: [Function],\n          agent: [Agent],\n          socketPath: undefined,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          insecureHTTPParser: undefined,\n          joinDuplicateHeaders: undefined,\n          path: '/v1/me/playlists?limit=50',\n          _ended: true,\n          res: [Circular *5],\n          aborted: false,\n          timeoutCb: null,\n          upgradeOrConnect: false,\n          parser: null,\n          maxHeadersCount: null,\n          reusedSocket: false,\n          host: 'api.spotify.com',\n          protocol: 'https:',\n          timings: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(kNeedDrain)]: false,\n          [Symbol(corked)]: 0,\n          [Symbol(kChunkedBuffer)]: [Array],\n          [Symbol(kChunkedLength)]: 0,\n          [Symbol(kSocket)]: [TLSSocket],\n          [Symbol(kOutHeaders)]: [Object: null prototype],\n          [Symbol(errored)]: null,\n          [Symbol(kHighWaterMark)]: 65536,\n          [Symbol(kRejectNonStandardBodyWrites)]: false,\n          [Symbol(kUniqueHeaders)]: null,\n          [Symbol(reentry)]: true,\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [writableFinished]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableLength]: [Getter],\n          [writableHighWaterMark]: [Getter],\n          [writableCorked]: [Getter],\n          [_headers]: [Getter/Setter],\n          [connection]: [Getter/Setter],\n          [socket]: [Getter/Setter],\n          [_headerNames]: [Getter/Setter],\n          headersSent: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter]\n        },\n        _eventsCount: 3,\n        timings: {\n          start: 1730796623955,\n          socket: 1730796623956,\n          lookup: 1730796623956,\n          connect: 1730796624002,\n          secureConnect: 1730796624147,\n          upload: 1730796624147,\n          response: 1730796624356,\n          end: 1730796624358,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:24 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      _flushed: true,\n      _aborted: false,\n      _requestInitialized: true,\n      _jobs: [ [length]: 0 ],\n      _eventsCount: 10,\n      _requestOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined,\n        ALPNProtocols: undefined,\n        ca: undefined,\n        cert: undefined,\n        key: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: [Function: checkServerIdentity] {\n          [length]: 2,\n          [name]: 'checkServerIdentity',\n          [prototype]: [Object]\n        },\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        sigalgs: undefined,\n        sessionTimeout: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        crl: undefined,\n        lookup: undefined,\n        family: undefined,\n        agent: undefined,\n        setHost: true,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        localAddress: undefined,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        createConnection: undefined,\n        timeout: undefined,\n        h2session: undefined\n      },\n      flush: [AsyncFunction (anonymous)] {\n        [length]: 0,\n        [name]: '',\n        [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [ip]: [Getter],\n      [isAborted]: [Getter],\n      [socket]: [Getter],\n      [downloadProgress]: [Getter],\n      [uploadProgress]: [Getter],\n      [timings]: [Getter],\n      [isFromCache]: [Getter],\n      [reusedSocket]: [Getter],\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [readableEnded]: [Getter]\n    },\n    isFromCache: false,\n    ip: '35.186.224.24',\n    retryCount: 0,\n    ok: false,\n    rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n    body: { error: { status: 401, message: 'The access token expired' } },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [Symbol(kCallback)]: null,\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter]\n  },\n  [request]: <ref *6> Request {\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: undefined,\n      pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n      newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n      response: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      retry: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 2, [name]: '' }\n      },\n      request: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      redirect: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      uploadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      downloadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n      pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 0,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 1574906,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 0,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466746,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    constructor: undefined,\n    _noPipe: true,\n    options: {\n      request: undefined,\n      agent: { http: undefined, https: undefined, http2: undefined },\n      h2session: undefined,\n      decompress: true,\n      timeout: {\n        connect: undefined,\n        lookup: undefined,\n        read: undefined,\n        request: undefined,\n        response: undefined,\n        secureConnect: undefined,\n        send: undefined,\n        socket: undefined\n      },\n      prefixUrl: '',\n      body: undefined,\n      form: undefined,\n      json: undefined,\n      cookieJar: undefined,\n      ignoreInvalidCookies: false,\n      searchParams: undefined,\n      dnsLookup: undefined,\n      dnsCache: undefined,\n      context: {},\n      hooks: {\n        init: [ [length]: 0 ],\n        beforeRequest: [ [length]: 0 ],\n        beforeError: [ [length]: 0 ],\n        beforeRedirect: [ [length]: 0 ],\n        beforeRetry: [ [length]: 0 ],\n        afterResponse: [ [length]: 0 ]\n      },\n      followRedirect: true,\n      maxRedirects: 10,\n      cache: undefined,\n      throwHttpErrors: true,\n      username: '',\n      password: '',\n      http2: false,\n      allowGetBody: false,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      methodRewriting: false,\n      dnsLookupIpVersion: undefined,\n      parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n      stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n      retry: {\n        limit: 2,\n        methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n        statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n        errorCodes: [\n          'ETIMEDOUT',\n          'ECONNRESET',\n          'EADDRINUSE',\n          'ECONNREFUSED',\n          'EPIPE',\n          'ENOTFOUND',\n          'ENETUNREACH',\n          'EAI_AGAIN',\n          [length]: 8\n        ],\n        maxRetryAfter: undefined,\n        calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n        backoffLimit: Infinity,\n        noise: 100\n      },\n      localAddress: undefined,\n      method: 'GET',\n      createConnection: undefined,\n      cacheOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined\n      },\n      https: {\n        alpnProtocols: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: undefined,\n        certificateAuthority: undefined,\n        key: undefined,\n        certificate: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        signatureAlgorithms: undefined,\n        tlsSessionLifetime: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        certificateRevocationLists: undefined\n      },\n      encoding: undefined,\n      resolveBodyOnly: false,\n      isStream: false,\n      responseType: 'json',\n      url: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      pagination: {\n        transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n        paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n        filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n        shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n        countLimit: Infinity,\n        backoff: 0,\n        requestLimit: 10000,\n        stackAllItems: false\n      },\n      setHost: true,\n      maxHeaderSize: undefined,\n      signal: undefined,\n      enableUnixSockets: false\n    },\n    response: <ref *3> PassThrough {\n      _events: {\n        close: undefined,\n        error: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        prefinish: <ref *1> [Function: prefinish] {\n          [length]: 0,\n          [name]: 'prefinish',\n          [prototype]: [Object]\n        },\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n        unpipe: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 9996040,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 65536,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466504,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kWriteCbValue)]: null,\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n      _maxListeners: undefined,\n      _eventsCount: 4,\n      socket: [Getter/Setter],\n      httpVersionMajor: [Getter/Setter],\n      httpVersionMinor: [Getter/Setter],\n      httpVersion: [Getter/Setter],\n      complete: [Getter/Setter],\n      rawHeaders: [Getter/Setter],\n      rawTrailers: [Getter/Setter],\n      joinDuplicateHeaders: [Getter/Setter],\n      aborted: [Getter/Setter],\n      upgrade: [Getter/Setter],\n      url: [Getter/Setter],\n      method: [Getter/Setter],\n      statusCode: [Getter/Setter],\n      statusMessage: [Getter/Setter],\n      client: [Getter/Setter],\n      _consuming: [Getter/Setter],\n      _dumped: [Getter/Setter],\n      req: [Getter/Setter],\n      timings: [Getter/Setter],\n      headers: [Getter/Setter],\n      setTimeout: [Getter/Setter],\n      trailers: [Getter/Setter],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      request: [Circular *6],\n      isFromCache: false,\n      ip: '35.186.224.24',\n      retryCount: 0,\n      ok: false,\n      rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n      body: { error: { status: 401, message: 'The access token expired' } },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kCallback)]: null,\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter]\n    },\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    retryCount: 0,\n    _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _downloadedSize: 81,\n    _uploadedSize: 0,\n    _stopReading: true,\n    _pipedServerResponses: Set(0) {},\n    _request: <ref *4> ClientRequest {\n      _events: [Object: null prototype] {\n        socket: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        error: [ [Function], [Function], [length]: 2 ],\n        connect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        continue: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        information: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        upgrade: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        finish: [Function: requestOnFinish] {\n          [length]: 0,\n          [name]: 'requestOnFinish',\n          [prototype]: [Object]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      outputData: [ [length]: 0 ],\n      outputSize: 0,\n      writable: true,\n      destroyed: true,\n      _last: true,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: false,\n      sendDate: false,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: 0,\n      _hasBody: true,\n      _trailer: '',\n      finished: true,\n      _headerSent: true,\n      _closed: true,\n      _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n        'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n        'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n        'accept: application/json\\r\\n' +\n        'accept-encoding: gzip, deflate, br\\r\\n' +\n        'Host: api.spotify.com\\r\\n' +\n        'Connection: keep-alive\\r\\n' +\n        '\\r\\n',\n      _keepAliveTimeout: 0,\n      _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n      agent: Agent {\n        _events: [Object: null prototype] {\n          free: [Function],\n          newListener: [Function]\n        },\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        defaultPort: 443,\n        protocol: 'https:',\n        options: [Object: null prototype] {\n          keepAlive: true,\n          scheduling: 'lifo',\n          timeout: 5000,\n          noDelay: true,\n          path: null\n        },\n        requests: [Object: null prototype] {},\n        sockets: [Object: null prototype] {},\n        freeSockets: [Object: null prototype] {\n          'api.spotify.com:443:::::::::::::::::::::': [Array]\n        },\n        keepAliveMsecs: 1000,\n        keepAlive: true,\n        maxSockets: Infinity,\n        maxFreeSockets: 256,\n        scheduling: 'lifo',\n        maxTotalSockets: Infinity,\n        totalSocketCount: 1,\n        maxCachedSessions: 100,\n        _sessionCache: { map: [Object], list: [Array] },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false\n      },\n      socketPath: undefined,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      joinDuplicateHeaders: undefined,\n      path: '/v1/me/playlists?limit=50',\n      _ended: true,\n      res: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:24 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3709457,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88763,\n            [Symbol(triggerId)]: 88759,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: [Circular *4],\n        _eventsCount: 3,\n        timings: {\n          start: 1730796623955,\n          socket: 1730796623956,\n          lookup: 1730796623956,\n          connect: 1730796624002,\n          secureConnect: 1730796624147,\n          upload: 1730796624147,\n          response: 1730796624356,\n          end: 1730796624358,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:24 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      aborted: false,\n      timeoutCb: null,\n      upgradeOrConnect: false,\n      parser: null,\n      maxHeadersCount: null,\n      reusedSocket: false,\n      host: 'api.spotify.com',\n      protocol: 'https:',\n      timings: {\n        start: 1730796623955,\n        socket: 1730796623956,\n        lookup: 1730796623956,\n        connect: 1730796624002,\n        secureConnect: 1730796624147,\n        upload: 1730796624147,\n        response: 1730796624356,\n        end: 1730796624358,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 1,\n          dns: 0,\n          tcp: 46,\n          tls: 145,\n          request: 0,\n          firstByte: 209,\n          download: 2,\n          total: 403\n        }\n      },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n      [Symbol(kChunkedLength)]: 0,\n      [Symbol(kSocket)]: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 5f 02 01 01 02 02 03 04 04 02 13 02 04 20 ff 98 ad 8a 64 0b 93 4c 99 61 f9 82 7d ac a5 18 d8 15 b9 36 07 70 54 ed b2 f9 8e f3 46 23 e8 d1 04 ... 2097 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3709457,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88763,\n          [Symbol(triggerId)]: 88759,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 5f 02 01 01 02 02 03 04 04 02 13 02 04 20 ff 98 ad 8a 64 0b 93 4c 99 61 f9 82 7d ac a5 18 d8 15 b9 36 07 70 54 ed b2 f9 8e f3 46 23 e8 d1 04 ... 2097 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      [Symbol(kOutHeaders)]: [Object: null prototype] {\n        'user-agent': [\n          'user-agent',\n          'got (https://github.com/sindresorhus/got)',\n          [length]: 2\n        ],\n        authorization: [\n          'authorization',\n          'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          [length]: 2\n        ],\n        accept: [ 'accept', 'application/json', [length]: 2 ],\n        'accept-encoding': [ 'accept-encoding', 'gzip, deflate, br', [length]: 2 ],\n        host: [ 'Host', 'api.spotify.com', [length]: 2 ]\n      },\n      [Symbol(errored)]: null,\n      [Symbol(kHighWaterMark)]: 65536,\n      [Symbol(kRejectNonStandardBodyWrites)]: false,\n      [Symbol(kUniqueHeaders)]: null,\n      [Symbol(reentry)]: true,\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [writableFinished]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableLength]: [Getter],\n      [writableHighWaterMark]: [Getter],\n      [writableCorked]: [Getter],\n      [_headers]: [Getter/Setter],\n      [connection]: [Getter/Setter],\n      [socket]: [Getter/Setter],\n      [_headerNames]: [Getter/Setter],\n      headersSent: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter]\n    },\n    _responseSize: 81,\n    _bodySize: 0,\n    _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n    _isFromCache: false,\n    _cannotHaveBody: true,\n    _triggerRead: true,\n    _cancelTimeouts: [Function: cancelTimeouts] { [length]: 0, [name]: 'cancelTimeouts' },\n    _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _nativeResponse: <ref *5> IncomingMessage {\n      _events: {\n        close: undefined,\n        error: undefined,\n        data: undefined,\n        end: [Function: responseOnEnd] {\n          [length]: 0,\n          [name]: 'responseOnEnd',\n          [prototype]: [Object]\n        },\n        readable: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 110892924,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _maxListeners: undefined,\n      socket: null,\n      httpVersionMajor: 1,\n      httpVersionMinor: 1,\n      httpVersion: '1.1',\n      complete: true,\n      rawHeaders: [\n        'www-authenticate',\n        'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin',\n        '*',\n        'access-control-allow-headers',\n        'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods',\n        'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials',\n        'true',\n        'access-control-max-age',\n        '604800',\n        'content-type',\n        'application/json',\n        'content-encoding',\n        'gzip',\n        'strict-transport-security',\n        'max-age=31536000',\n        'x-content-type-options',\n        'nosniff',\n        'date',\n        'Tue, 05 Nov 2024 08:50:24 GMT',\n        'server',\n        'envoy',\n        'Via',\n        'HTTP/2 edgeproxy, 1.1 google',\n        'Alt-Svc',\n        'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'Transfer-Encoding',\n        'chunked',\n        [length]: 30\n      ],\n      rawTrailers: [ [length]: 0 ],\n      joinDuplicateHeaders: undefined,\n      aborted: false,\n      upgrade: false,\n      url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      method: null,\n      statusCode: 401,\n      statusMessage: 'Unauthorized',\n      client: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 5f 02 01 01 02 02 03 04 04 02 13 02 04 20 ff 98 ad 8a 64 0b 93 4c 99 61 f9 82 7d ac a5 18 d8 15 b9 36 07 70 54 ed b2 f9 8e f3 46 23 e8 d1 04 ... 2097 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3709457,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88763,\n          [Symbol(triggerId)]: 88759,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 5f 02 01 01 02 02 03 04 04 02 13 02 04 20 ff 98 ad 8a 64 0b 93 4c 99 61 f9 82 7d ac a5 18 d8 15 b9 36 07 70 54 ed b2 f9 8e f3 46 23 e8 d1 04 ... 2097 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      _consuming: false,\n      _dumped: false,\n      req: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: [Circular *5],\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796623955,\n          socket: 1730796623956,\n          lookup: 1730796623956,\n          connect: 1730796624002,\n          secureConnect: 1730796624147,\n          upload: 1730796624147,\n          response: 1730796624356,\n          end: 1730796624358,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: <ref *7> TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3709457,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88763,\n            [Symbol(triggerId)]: 88759,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _eventsCount: 3,\n      timings: {\n        start: 1730796623955,\n        socket: 1730796623956,\n        lookup: 1730796623956,\n        connect: 1730796624002,\n        secureConnect: 1730796624147,\n        upload: 1730796624147,\n        response: 1730796624356,\n        end: 1730796624358,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 1,\n          dns: 0,\n          tcp: 46,\n          tls: 145,\n          request: 0,\n          firstByte: 209,\n          download: 2,\n          total: 403\n        }\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kHeaders)]: {\n        'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin': '*',\n        'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials': 'true',\n        'access-control-max-age': '604800',\n        'content-type': 'application/json',\n        'content-encoding': 'gzip',\n        'strict-transport-security': 'max-age=31536000',\n        'x-content-type-options': 'nosniff',\n        date: 'Tue, 05 Nov 2024 08:50:24 GMT',\n        server: 'envoy',\n        via: 'HTTP/2 edgeproxy, 1.1 google',\n        'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'transfer-encoding': 'chunked'\n      },\n      [Symbol(kHeadersCount)]: 30,\n      [Symbol(kTrailers)]: null,\n      [Symbol(kTrailersCount)]: 0,\n      [connection]: [Getter/Setter],\n      [headers]: [Getter/Setter],\n      [headersDistinct]: [Getter/Setter],\n      [trailers]: [Getter/Setter],\n      [trailersDistinct]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readableEnded]: [Getter]\n    },\n    _flushed: true,\n    _aborted: false,\n    _requestInitialized: true,\n    _jobs: [ [length]: 0 ],\n    _eventsCount: 10,\n    _requestOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined,\n      ALPNProtocols: undefined,\n      ca: undefined,\n      cert: undefined,\n      key: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: <ref *8> [Function: checkServerIdentity] {\n        [length]: 2,\n        [name]: 'checkServerIdentity',\n        [prototype]: { [constructor]: [Circular *8] }\n      },\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      sigalgs: undefined,\n      sessionTimeout: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      crl: undefined,\n      lookup: undefined,\n      family: undefined,\n      agent: undefined,\n      setHost: true,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      localAddress: undefined,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      createConnection: undefined,\n      timeout: undefined,\n      h2session: undefined\n    },\n    flush: [AsyncFunction (anonymous)] {\n      [length]: 0,\n      [name]: '',\n      [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n    },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [ip]: [Getter],\n    [isAborted]: [Getter],\n    [socket]: [Getter],\n    [downloadProgress]: [Getter],\n    [uploadProgress]: [Getter],\n    [timings]: [Getter],\n    [isFromCache]: [Getter],\n    [reusedSocket]: [Getter],\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter],\n    [readable]: [Getter/Setter],\n    [readableDidRead]: [Getter],\n    [readableAborted]: [Getter],\n    [readableHighWaterMark]: [Getter],\n    [readableBuffer]: [Getter],\n    [readableFlowing]: [Getter/Setter],\n    [readableLength]: [Getter],\n    [readableObjectMode]: [Getter],\n    [readableEncoding]: [Getter],\n    [errored]: [Getter],\n    [closed]: [Getter],\n    [readableEnded]: [Getter]\n  },\n  timings: {\n    start: 1730796623955,\n    socket: 1730796623956,\n    lookup: 1730796623956,\n    connect: 1730796624002,\n    secureConnect: 1730796624147,\n    upload: 1730796624147,\n    response: 1730796624356,\n    end: 1730796624358,\n    error: undefined,\n    abort: undefined,\n    phases: {\n      wait: 1,\n      dns: 0,\n      tcp: 46,\n      tls: 145,\n      request: 0,\n      firstByte: 209,\n      download: 2,\n      total: 403\n    }\n  },\n  name: 'HTTPError',\n  options: {\n    request: undefined,\n    agent: { http: undefined, https: undefined, http2: undefined },\n    h2session: undefined,\n    decompress: true,\n    timeout: {\n      connect: undefined,\n      lookup: undefined,\n      read: undefined,\n      request: undefined,\n      response: undefined,\n      secureConnect: undefined,\n      send: undefined,\n      socket: undefined\n    },\n    prefixUrl: '',\n    body: undefined,\n    form: undefined,\n    json: undefined,\n    cookieJar: undefined,\n    ignoreInvalidCookies: false,\n    searchParams: undefined,\n    dnsLookup: undefined,\n    dnsCache: undefined,\n    context: {},\n    hooks: {\n      init: [ [length]: 0 ],\n      beforeRequest: [ [length]: 0 ],\n      beforeError: [ [length]: 0 ],\n      beforeRedirect: [ [length]: 0 ],\n      beforeRetry: [ [length]: 0 ],\n      afterResponse: [ [length]: 0 ]\n    },\n    followRedirect: true,\n    maxRedirects: 10,\n    cache: undefined,\n    throwHttpErrors: true,\n    username: '',\n    password: '',\n    http2: false,\n    allowGetBody: false,\n    headers: {\n      'user-agent': 'got (https://github.com/sindresorhus/got)',\n      authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n      accept: 'application/json',\n      'accept-encoding': 'gzip, deflate, br'\n    },\n    methodRewriting: false,\n    dnsLookupIpVersion: undefined,\n    parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n    stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n    retry: {\n      limit: 2,\n      methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n      statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n      errorCodes: [\n        'ETIMEDOUT',\n        'ECONNRESET',\n        'EADDRINUSE',\n        'ECONNREFUSED',\n        'EPIPE',\n        'ENOTFOUND',\n        'ENETUNREACH',\n        'EAI_AGAIN',\n        [length]: 8\n      ],\n      maxRetryAfter: undefined,\n      calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n      backoffLimit: Infinity,\n      noise: 100\n    },\n    localAddress: undefined,\n    method: 'GET',\n    createConnection: undefined,\n    cacheOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined\n    },\n    https: {\n      alpnProtocols: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: undefined,\n      certificateAuthority: undefined,\n      key: undefined,\n      certificate: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      signatureAlgorithms: undefined,\n      tlsSessionLifetime: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      certificateRevocationLists: undefined\n    },\n    encoding: undefined,\n    resolveBodyOnly: false,\n    isStream: false,\n    responseType: 'json',\n    url: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    pagination: {\n      transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n      paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n      filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n      shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n      countLimit: Infinity,\n      backoff: 0,\n      requestLimit: 10000,\n      stackAllItems: false\n    },\n    setHost: true,\n    maxHeaderSize: undefined,\n    signal: undefined,\n    enableUnixSockets: false\n  }\n}","timestamp":"2024-11-05 19:50:24"}
{"level":"error","message":"Error fetching playlists: <ref *2> HTTPError: Response code 401 (Unauthorized)\n    at Request.<anonymous> (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/as-promise/index.js:92:42)\n    at Object.onceWrapper (node:events:635:26)\n    at Request.emit (node:events:532:35)\n    at Request._onResponseBase (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:609:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Request._onResponse (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:649:13) {\n  [stack]: [Getter/Setter],\n  [message]: 'Response code 401 (Unauthorized)',\n  [cause]: {},\n  input: undefined,\n  code: 'ERR_NON_2XX_3XX_RESPONSE',\n  [response]: <ref *3> PassThrough {\n    _events: {\n      close: undefined,\n      error: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 1, [name]: '' }\n      },\n      prefinish: <ref *1> [Function: prefinish] {\n        [length]: 0,\n        [name]: 'prefinish',\n        [prototype]: { [constructor]: [Circular *1] }\n      },\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n      unpipe: undefined,\n      aborted: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 0, [name]: '' }\n      }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 65536,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 9996040,\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 65536,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466504,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kWriteCbValue)]: null,\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n    _maxListeners: undefined,\n    _eventsCount: 4,\n    socket: [Getter/Setter],\n    httpVersionMajor: [Getter/Setter],\n    httpVersionMinor: [Getter/Setter],\n    httpVersion: [Getter/Setter],\n    complete: [Getter/Setter],\n    rawHeaders: [Getter/Setter],\n    rawTrailers: [Getter/Setter],\n    joinDuplicateHeaders: [Getter/Setter],\n    aborted: [Getter/Setter],\n    upgrade: [Getter/Setter],\n    url: [Getter/Setter],\n    method: [Getter/Setter],\n    statusCode: [Getter/Setter],\n    statusMessage: [Getter/Setter],\n    client: [Getter/Setter],\n    _consuming: [Getter/Setter],\n    _dumped: [Getter/Setter],\n    req: [Getter/Setter],\n    timings: [Getter/Setter],\n    headers: [Getter/Setter],\n    setTimeout: [Getter/Setter],\n    trailers: [Getter/Setter],\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    request: Request {\n      _events: {\n        close: undefined,\n        error: undefined,\n        prefinish: undefined,\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: undefined,\n        pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n        newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n        response: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        retry: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        request: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        redirect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        uploadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        downloadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n        pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 0,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 1574906,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 0,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466746,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      constructor: undefined,\n      _noPipe: true,\n      options: {\n        request: undefined,\n        agent: { http: undefined, https: undefined, http2: undefined },\n        h2session: undefined,\n        decompress: true,\n        timeout: {\n          connect: undefined,\n          lookup: undefined,\n          read: undefined,\n          request: undefined,\n          response: undefined,\n          secureConnect: undefined,\n          send: undefined,\n          socket: undefined\n        },\n        prefixUrl: '',\n        body: undefined,\n        form: undefined,\n        json: undefined,\n        cookieJar: undefined,\n        ignoreInvalidCookies: false,\n        searchParams: undefined,\n        dnsLookup: undefined,\n        dnsCache: undefined,\n        context: {},\n        hooks: {\n          init: [ [length]: 0 ],\n          beforeRequest: [ [length]: 0 ],\n          beforeError: [ [length]: 0 ],\n          beforeRedirect: [ [length]: 0 ],\n          beforeRetry: [ [length]: 0 ],\n          afterResponse: [ [length]: 0 ]\n        },\n        followRedirect: true,\n        maxRedirects: 10,\n        cache: undefined,\n        throwHttpErrors: true,\n        username: '',\n        password: '',\n        http2: false,\n        allowGetBody: false,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        methodRewriting: false,\n        dnsLookupIpVersion: undefined,\n        parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n        stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n        retry: {\n          limit: 2,\n          methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n          statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n          errorCodes: [\n            'ETIMEDOUT',\n            'ECONNRESET',\n            'EADDRINUSE',\n            'ECONNREFUSED',\n            'EPIPE',\n            'ENOTFOUND',\n            'ENETUNREACH',\n            'EAI_AGAIN',\n            [length]: 8\n          ],\n          maxRetryAfter: undefined,\n          calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n          backoffLimit: Infinity,\n          noise: 100\n        },\n        localAddress: undefined,\n        method: 'GET',\n        createConnection: undefined,\n        cacheOptions: {\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined\n        },\n        https: {\n          alpnProtocols: undefined,\n          rejectUnauthorized: undefined,\n          checkServerIdentity: undefined,\n          certificateAuthority: undefined,\n          key: undefined,\n          certificate: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          ciphers: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          signatureAlgorithms: undefined,\n          tlsSessionLifetime: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          certificateRevocationLists: undefined\n        },\n        encoding: undefined,\n        resolveBodyOnly: false,\n        isStream: false,\n        responseType: 'json',\n        url: URL {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          origin: 'https://api.spotify.com',\n          protocol: 'https:',\n          username: '',\n          password: '',\n          host: 'api.spotify.com',\n          hostname: 'api.spotify.com',\n          port: '',\n          pathname: '/v1/me/playlists',\n          search: '?limit=50',\n          searchParams: URLSearchParams { 'limit' => '50' },\n          hash: '',\n          [Symbol(context)]: URLContext {\n            href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n            protocol_end: 6,\n            username_end: 8,\n            host_start: 8,\n            host_end: 23,\n            pathname_start: 23,\n            search_start: 39,\n            hash_start: 4294967295,\n            port: 4294967295,\n            scheme_type: 2,\n            [hasPort]: [Getter],\n            [hasSearch]: [Getter],\n            [hasHash]: [Getter]\n          }\n        },\n        pagination: {\n          transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n          paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n          filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n          shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n          countLimit: Infinity,\n          backoff: 0,\n          requestLimit: 10000,\n          stackAllItems: false\n        },\n        setHost: true,\n        maxHeaderSize: undefined,\n        signal: undefined,\n        enableUnixSockets: false\n      },\n      response: [Circular *3],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      retryCount: 0,\n      _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _downloadedSize: 81,\n      _uploadedSize: 0,\n      _stopReading: true,\n      _pipedServerResponses: Set(0) {},\n      _request: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: IncomingMessage {\n          _events: [Object],\n          _readableState: [ReadableState],\n          _maxListeners: undefined,\n          socket: null,\n          httpVersionMajor: 1,\n          httpVersionMinor: 1,\n          httpVersion: '1.1',\n          complete: true,\n          rawHeaders: [Array],\n          rawTrailers: [Array],\n          joinDuplicateHeaders: undefined,\n          aborted: false,\n          upgrade: false,\n          url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          method: null,\n          statusCode: 401,\n          statusMessage: 'Unauthorized',\n          client: [TLSSocket],\n          _consuming: false,\n          _dumped: false,\n          req: [Circular *4],\n          _eventsCount: 3,\n          timings: [Object],\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kHeaders)]: [Object],\n          [Symbol(kHeadersCount)]: 30,\n          [Symbol(kTrailers)]: null,\n          [Symbol(kTrailersCount)]: 0,\n          [connection]: [Getter/Setter],\n          [headers]: [Getter/Setter],\n          [headersDistinct]: [Getter/Setter],\n          [trailers]: [Getter/Setter],\n          [trailersDistinct]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableDidRead]: [Getter],\n          [readableAborted]: [Getter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readableEnded]: [Getter]\n        },\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796623955,\n          socket: 1730796623956,\n          lookup: 1730796623956,\n          connect: 1730796624002,\n          secureConnect: 1730796624147,\n          upload: 1730796624147,\n          response: 1730796624356,\n          end: 1730796624358,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3709457,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88763,\n            [Symbol(triggerId)]: 88759,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _responseSize: 81,\n      _bodySize: 0,\n      _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n      _isFromCache: false,\n      _cannotHaveBody: true,\n      _triggerRead: true,\n      _cancelTimeouts: [Function: cancelTimeouts] {\n        [length]: 0,\n        [name]: 'cancelTimeouts'\n      },\n      _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _nativeResponse: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:24 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3709457,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88763,\n            [Symbol(triggerId)]: 88759,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: <ref *4> ClientRequest {\n          _events: [Object: null prototype],\n          _eventsCount: 8,\n          _maxListeners: undefined,\n          outputData: [Array],\n          outputSize: 0,\n          writable: true,\n          destroyed: true,\n          _last: true,\n          chunkedEncoding: false,\n          shouldKeepAlive: true,\n          maxRequestsOnConnectionReached: false,\n          _defaultKeepAlive: true,\n          useChunkedEncodingByDefault: false,\n          sendDate: false,\n          _removedConnection: false,\n          _removedContLen: false,\n          _removedTE: false,\n          strictContentLength: false,\n          _contentLength: 0,\n          _hasBody: true,\n          _trailer: '',\n          finished: true,\n          _headerSent: true,\n          _closed: true,\n          _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n            'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n            'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n            'accept: application/json\\r\\n' +\n            'accept-encoding: gzip, deflate, br\\r\\n' +\n            'Host: api.spotify.com\\r\\n' +\n            'Connection: keep-alive\\r\\n' +\n            '\\r\\n',\n          _keepAliveTimeout: 0,\n          _onPendingData: [Function],\n          agent: [Agent],\n          socketPath: undefined,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          insecureHTTPParser: undefined,\n          joinDuplicateHeaders: undefined,\n          path: '/v1/me/playlists?limit=50',\n          _ended: true,\n          res: [Circular *5],\n          aborted: false,\n          timeoutCb: null,\n          upgradeOrConnect: false,\n          parser: null,\n          maxHeadersCount: null,\n          reusedSocket: false,\n          host: 'api.spotify.com',\n          protocol: 'https:',\n          timings: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(kNeedDrain)]: false,\n          [Symbol(corked)]: 0,\n          [Symbol(kChunkedBuffer)]: [Array],\n          [Symbol(kChunkedLength)]: 0,\n          [Symbol(kSocket)]: [TLSSocket],\n          [Symbol(kOutHeaders)]: [Object: null prototype],\n          [Symbol(errored)]: null,\n          [Symbol(kHighWaterMark)]: 65536,\n          [Symbol(kRejectNonStandardBodyWrites)]: false,\n          [Symbol(kUniqueHeaders)]: null,\n          [Symbol(reentry)]: true,\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [writableFinished]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableLength]: [Getter],\n          [writableHighWaterMark]: [Getter],\n          [writableCorked]: [Getter],\n          [_headers]: [Getter/Setter],\n          [connection]: [Getter/Setter],\n          [socket]: [Getter/Setter],\n          [_headerNames]: [Getter/Setter],\n          headersSent: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter]\n        },\n        _eventsCount: 3,\n        timings: {\n          start: 1730796623955,\n          socket: 1730796623956,\n          lookup: 1730796623956,\n          connect: 1730796624002,\n          secureConnect: 1730796624147,\n          upload: 1730796624147,\n          response: 1730796624356,\n          end: 1730796624358,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:24 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      _flushed: true,\n      _aborted: false,\n      _requestInitialized: true,\n      _jobs: [ [length]: 0 ],\n      _eventsCount: 10,\n      _requestOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined,\n        ALPNProtocols: undefined,\n        ca: undefined,\n        cert: undefined,\n        key: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: [Function: checkServerIdentity] {\n          [length]: 2,\n          [name]: 'checkServerIdentity',\n          [prototype]: [Object]\n        },\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        sigalgs: undefined,\n        sessionTimeout: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        crl: undefined,\n        lookup: undefined,\n        family: undefined,\n        agent: undefined,\n        setHost: true,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        localAddress: undefined,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        createConnection: undefined,\n        timeout: undefined,\n        h2session: undefined\n      },\n      flush: [AsyncFunction (anonymous)] {\n        [length]: 0,\n        [name]: '',\n        [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [ip]: [Getter],\n      [isAborted]: [Getter],\n      [socket]: [Getter],\n      [downloadProgress]: [Getter],\n      [uploadProgress]: [Getter],\n      [timings]: [Getter],\n      [isFromCache]: [Getter],\n      [reusedSocket]: [Getter],\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [readableEnded]: [Getter]\n    },\n    isFromCache: false,\n    ip: '35.186.224.24',\n    retryCount: 0,\n    ok: false,\n    rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n    body: { error: { status: 401, message: 'The access token expired' } },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [Symbol(kCallback)]: null,\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter]\n  },\n  [request]: <ref *6> Request {\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: undefined,\n      pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n      newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n      response: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      retry: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 2, [name]: '' }\n      },\n      request: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      redirect: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      uploadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      downloadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n      pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 0,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 1574906,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 0,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466746,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    constructor: undefined,\n    _noPipe: true,\n    options: {\n      request: undefined,\n      agent: { http: undefined, https: undefined, http2: undefined },\n      h2session: undefined,\n      decompress: true,\n      timeout: {\n        connect: undefined,\n        lookup: undefined,\n        read: undefined,\n        request: undefined,\n        response: undefined,\n        secureConnect: undefined,\n        send: undefined,\n        socket: undefined\n      },\n      prefixUrl: '',\n      body: undefined,\n      form: undefined,\n      json: undefined,\n      cookieJar: undefined,\n      ignoreInvalidCookies: false,\n      searchParams: undefined,\n      dnsLookup: undefined,\n      dnsCache: undefined,\n      context: {},\n      hooks: {\n        init: [ [length]: 0 ],\n        beforeRequest: [ [length]: 0 ],\n        beforeError: [ [length]: 0 ],\n        beforeRedirect: [ [length]: 0 ],\n        beforeRetry: [ [length]: 0 ],\n        afterResponse: [ [length]: 0 ]\n      },\n      followRedirect: true,\n      maxRedirects: 10,\n      cache: undefined,\n      throwHttpErrors: true,\n      username: '',\n      password: '',\n      http2: false,\n      allowGetBody: false,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      methodRewriting: false,\n      dnsLookupIpVersion: undefined,\n      parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n      stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n      retry: {\n        limit: 2,\n        methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n        statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n        errorCodes: [\n          'ETIMEDOUT',\n          'ECONNRESET',\n          'EADDRINUSE',\n          'ECONNREFUSED',\n          'EPIPE',\n          'ENOTFOUND',\n          'ENETUNREACH',\n          'EAI_AGAIN',\n          [length]: 8\n        ],\n        maxRetryAfter: undefined,\n        calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n        backoffLimit: Infinity,\n        noise: 100\n      },\n      localAddress: undefined,\n      method: 'GET',\n      createConnection: undefined,\n      cacheOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined\n      },\n      https: {\n        alpnProtocols: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: undefined,\n        certificateAuthority: undefined,\n        key: undefined,\n        certificate: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        signatureAlgorithms: undefined,\n        tlsSessionLifetime: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        certificateRevocationLists: undefined\n      },\n      encoding: undefined,\n      resolveBodyOnly: false,\n      isStream: false,\n      responseType: 'json',\n      url: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      pagination: {\n        transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n        paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n        filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n        shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n        countLimit: Infinity,\n        backoff: 0,\n        requestLimit: 10000,\n        stackAllItems: false\n      },\n      setHost: true,\n      maxHeaderSize: undefined,\n      signal: undefined,\n      enableUnixSockets: false\n    },\n    response: <ref *3> PassThrough {\n      _events: {\n        close: undefined,\n        error: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        prefinish: <ref *1> [Function: prefinish] {\n          [length]: 0,\n          [name]: 'prefinish',\n          [prototype]: [Object]\n        },\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n        unpipe: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 9996040,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 65536,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466504,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kWriteCbValue)]: null,\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n      _maxListeners: undefined,\n      _eventsCount: 4,\n      socket: [Getter/Setter],\n      httpVersionMajor: [Getter/Setter],\n      httpVersionMinor: [Getter/Setter],\n      httpVersion: [Getter/Setter],\n      complete: [Getter/Setter],\n      rawHeaders: [Getter/Setter],\n      rawTrailers: [Getter/Setter],\n      joinDuplicateHeaders: [Getter/Setter],\n      aborted: [Getter/Setter],\n      upgrade: [Getter/Setter],\n      url: [Getter/Setter],\n      method: [Getter/Setter],\n      statusCode: [Getter/Setter],\n      statusMessage: [Getter/Setter],\n      client: [Getter/Setter],\n      _consuming: [Getter/Setter],\n      _dumped: [Getter/Setter],\n      req: [Getter/Setter],\n      timings: [Getter/Setter],\n      headers: [Getter/Setter],\n      setTimeout: [Getter/Setter],\n      trailers: [Getter/Setter],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      request: [Circular *6],\n      isFromCache: false,\n      ip: '35.186.224.24',\n      retryCount: 0,\n      ok: false,\n      rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n      body: { error: { status: 401, message: 'The access token expired' } },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kCallback)]: null,\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter]\n    },\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    retryCount: 0,\n    _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _downloadedSize: 81,\n    _uploadedSize: 0,\n    _stopReading: true,\n    _pipedServerResponses: Set(0) {},\n    _request: <ref *4> ClientRequest {\n      _events: [Object: null prototype] {\n        socket: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        error: [ [Function], [Function], [length]: 2 ],\n        connect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        continue: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        information: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        upgrade: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        finish: [Function: requestOnFinish] {\n          [length]: 0,\n          [name]: 'requestOnFinish',\n          [prototype]: [Object]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      outputData: [ [length]: 0 ],\n      outputSize: 0,\n      writable: true,\n      destroyed: true,\n      _last: true,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: false,\n      sendDate: false,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: 0,\n      _hasBody: true,\n      _trailer: '',\n      finished: true,\n      _headerSent: true,\n      _closed: true,\n      _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n        'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n        'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n        'accept: application/json\\r\\n' +\n        'accept-encoding: gzip, deflate, br\\r\\n' +\n        'Host: api.spotify.com\\r\\n' +\n        'Connection: keep-alive\\r\\n' +\n        '\\r\\n',\n      _keepAliveTimeout: 0,\n      _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n      agent: Agent {\n        _events: [Object: null prototype] {\n          free: [Function],\n          newListener: [Function]\n        },\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        defaultPort: 443,\n        protocol: 'https:',\n        options: [Object: null prototype] {\n          keepAlive: true,\n          scheduling: 'lifo',\n          timeout: 5000,\n          noDelay: true,\n          path: null\n        },\n        requests: [Object: null prototype] {},\n        sockets: [Object: null prototype] {},\n        freeSockets: [Object: null prototype] {\n          'api.spotify.com:443:::::::::::::::::::::': [Array]\n        },\n        keepAliveMsecs: 1000,\n        keepAlive: true,\n        maxSockets: Infinity,\n        maxFreeSockets: 256,\n        scheduling: 'lifo',\n        maxTotalSockets: Infinity,\n        totalSocketCount: 1,\n        maxCachedSessions: 100,\n        _sessionCache: { map: [Object], list: [Array] },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false\n      },\n      socketPath: undefined,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      joinDuplicateHeaders: undefined,\n      path: '/v1/me/playlists?limit=50',\n      _ended: true,\n      res: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:24 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3709457,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88763,\n            [Symbol(triggerId)]: 88759,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: [Circular *4],\n        _eventsCount: 3,\n        timings: {\n          start: 1730796623955,\n          socket: 1730796623956,\n          lookup: 1730796623956,\n          connect: 1730796624002,\n          secureConnect: 1730796624147,\n          upload: 1730796624147,\n          response: 1730796624356,\n          end: 1730796624358,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:24 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      aborted: false,\n      timeoutCb: null,\n      upgradeOrConnect: false,\n      parser: null,\n      maxHeadersCount: null,\n      reusedSocket: false,\n      host: 'api.spotify.com',\n      protocol: 'https:',\n      timings: {\n        start: 1730796623955,\n        socket: 1730796623956,\n        lookup: 1730796623956,\n        connect: 1730796624002,\n        secureConnect: 1730796624147,\n        upload: 1730796624147,\n        response: 1730796624356,\n        end: 1730796624358,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 1,\n          dns: 0,\n          tcp: 46,\n          tls: 145,\n          request: 0,\n          firstByte: 209,\n          download: 2,\n          total: 403\n        }\n      },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n      [Symbol(kChunkedLength)]: 0,\n      [Symbol(kSocket)]: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 5f 02 01 01 02 02 03 04 04 02 13 02 04 20 ff 98 ad 8a 64 0b 93 4c 99 61 f9 82 7d ac a5 18 d8 15 b9 36 07 70 54 ed b2 f9 8e f3 46 23 e8 d1 04 ... 2097 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3709457,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88763,\n          [Symbol(triggerId)]: 88759,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 5f 02 01 01 02 02 03 04 04 02 13 02 04 20 ff 98 ad 8a 64 0b 93 4c 99 61 f9 82 7d ac a5 18 d8 15 b9 36 07 70 54 ed b2 f9 8e f3 46 23 e8 d1 04 ... 2097 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      [Symbol(kOutHeaders)]: [Object: null prototype] {\n        'user-agent': [\n          'user-agent',\n          'got (https://github.com/sindresorhus/got)',\n          [length]: 2\n        ],\n        authorization: [\n          'authorization',\n          'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          [length]: 2\n        ],\n        accept: [ 'accept', 'application/json', [length]: 2 ],\n        'accept-encoding': [ 'accept-encoding', 'gzip, deflate, br', [length]: 2 ],\n        host: [ 'Host', 'api.spotify.com', [length]: 2 ]\n      },\n      [Symbol(errored)]: null,\n      [Symbol(kHighWaterMark)]: 65536,\n      [Symbol(kRejectNonStandardBodyWrites)]: false,\n      [Symbol(kUniqueHeaders)]: null,\n      [Symbol(reentry)]: true,\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [writableFinished]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableLength]: [Getter],\n      [writableHighWaterMark]: [Getter],\n      [writableCorked]: [Getter],\n      [_headers]: [Getter/Setter],\n      [connection]: [Getter/Setter],\n      [socket]: [Getter/Setter],\n      [_headerNames]: [Getter/Setter],\n      headersSent: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter]\n    },\n    _responseSize: 81,\n    _bodySize: 0,\n    _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n    _isFromCache: false,\n    _cannotHaveBody: true,\n    _triggerRead: true,\n    _cancelTimeouts: [Function: cancelTimeouts] { [length]: 0, [name]: 'cancelTimeouts' },\n    _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _nativeResponse: <ref *5> IncomingMessage {\n      _events: {\n        close: undefined,\n        error: undefined,\n        data: undefined,\n        end: [Function: responseOnEnd] {\n          [length]: 0,\n          [name]: 'responseOnEnd',\n          [prototype]: [Object]\n        },\n        readable: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 110892924,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _maxListeners: undefined,\n      socket: null,\n      httpVersionMajor: 1,\n      httpVersionMinor: 1,\n      httpVersion: '1.1',\n      complete: true,\n      rawHeaders: [\n        'www-authenticate',\n        'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin',\n        '*',\n        'access-control-allow-headers',\n        'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods',\n        'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials',\n        'true',\n        'access-control-max-age',\n        '604800',\n        'content-type',\n        'application/json',\n        'content-encoding',\n        'gzip',\n        'strict-transport-security',\n        'max-age=31536000',\n        'x-content-type-options',\n        'nosniff',\n        'date',\n        'Tue, 05 Nov 2024 08:50:24 GMT',\n        'server',\n        'envoy',\n        'Via',\n        'HTTP/2 edgeproxy, 1.1 google',\n        'Alt-Svc',\n        'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'Transfer-Encoding',\n        'chunked',\n        [length]: 30\n      ],\n      rawTrailers: [ [length]: 0 ],\n      joinDuplicateHeaders: undefined,\n      aborted: false,\n      upgrade: false,\n      url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      method: null,\n      statusCode: 401,\n      statusMessage: 'Unauthorized',\n      client: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 5f 02 01 01 02 02 03 04 04 02 13 02 04 20 ff 98 ad 8a 64 0b 93 4c 99 61 f9 82 7d ac a5 18 d8 15 b9 36 07 70 54 ed b2 f9 8e f3 46 23 e8 d1 04 ... 2097 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3709457,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88763,\n          [Symbol(triggerId)]: 88759,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 5f 02 01 01 02 02 03 04 04 02 13 02 04 20 ff 98 ad 8a 64 0b 93 4c 99 61 f9 82 7d ac a5 18 d8 15 b9 36 07 70 54 ed b2 f9 8e f3 46 23 e8 d1 04 ... 2097 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      _consuming: false,\n      _dumped: false,\n      req: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: [Circular *5],\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796623955,\n          socket: 1730796623956,\n          lookup: 1730796623956,\n          connect: 1730796624002,\n          secureConnect: 1730796624147,\n          upload: 1730796624147,\n          response: 1730796624356,\n          end: 1730796624358,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: <ref *7> TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3709457,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88763,\n            [Symbol(triggerId)]: 88759,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _eventsCount: 3,\n      timings: {\n        start: 1730796623955,\n        socket: 1730796623956,\n        lookup: 1730796623956,\n        connect: 1730796624002,\n        secureConnect: 1730796624147,\n        upload: 1730796624147,\n        response: 1730796624356,\n        end: 1730796624358,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 1,\n          dns: 0,\n          tcp: 46,\n          tls: 145,\n          request: 0,\n          firstByte: 209,\n          download: 2,\n          total: 403\n        }\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kHeaders)]: {\n        'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin': '*',\n        'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials': 'true',\n        'access-control-max-age': '604800',\n        'content-type': 'application/json',\n        'content-encoding': 'gzip',\n        'strict-transport-security': 'max-age=31536000',\n        'x-content-type-options': 'nosniff',\n        date: 'Tue, 05 Nov 2024 08:50:24 GMT',\n        server: 'envoy',\n        via: 'HTTP/2 edgeproxy, 1.1 google',\n        'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'transfer-encoding': 'chunked'\n      },\n      [Symbol(kHeadersCount)]: 30,\n      [Symbol(kTrailers)]: null,\n      [Symbol(kTrailersCount)]: 0,\n      [connection]: [Getter/Setter],\n      [headers]: [Getter/Setter],\n      [headersDistinct]: [Getter/Setter],\n      [trailers]: [Getter/Setter],\n      [trailersDistinct]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readableEnded]: [Getter]\n    },\n    _flushed: true,\n    _aborted: false,\n    _requestInitialized: true,\n    _jobs: [ [length]: 0 ],\n    _eventsCount: 10,\n    _requestOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined,\n      ALPNProtocols: undefined,\n      ca: undefined,\n      cert: undefined,\n      key: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: <ref *8> [Function: checkServerIdentity] {\n        [length]: 2,\n        [name]: 'checkServerIdentity',\n        [prototype]: { [constructor]: [Circular *8] }\n      },\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      sigalgs: undefined,\n      sessionTimeout: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      crl: undefined,\n      lookup: undefined,\n      family: undefined,\n      agent: undefined,\n      setHost: true,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      localAddress: undefined,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      createConnection: undefined,\n      timeout: undefined,\n      h2session: undefined\n    },\n    flush: [AsyncFunction (anonymous)] {\n      [length]: 0,\n      [name]: '',\n      [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n    },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [ip]: [Getter],\n    [isAborted]: [Getter],\n    [socket]: [Getter],\n    [downloadProgress]: [Getter],\n    [uploadProgress]: [Getter],\n    [timings]: [Getter],\n    [isFromCache]: [Getter],\n    [reusedSocket]: [Getter],\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter],\n    [readable]: [Getter/Setter],\n    [readableDidRead]: [Getter],\n    [readableAborted]: [Getter],\n    [readableHighWaterMark]: [Getter],\n    [readableBuffer]: [Getter],\n    [readableFlowing]: [Getter/Setter],\n    [readableLength]: [Getter],\n    [readableObjectMode]: [Getter],\n    [readableEncoding]: [Getter],\n    [errored]: [Getter],\n    [closed]: [Getter],\n    [readableEnded]: [Getter]\n  },\n  timings: {\n    start: 1730796623955,\n    socket: 1730796623956,\n    lookup: 1730796623956,\n    connect: 1730796624002,\n    secureConnect: 1730796624147,\n    upload: 1730796624147,\n    response: 1730796624356,\n    end: 1730796624358,\n    error: undefined,\n    abort: undefined,\n    phases: {\n      wait: 1,\n      dns: 0,\n      tcp: 46,\n      tls: 145,\n      request: 0,\n      firstByte: 209,\n      download: 2,\n      total: 403\n    }\n  },\n  name: 'HTTPError',\n  options: {\n    request: undefined,\n    agent: { http: undefined, https: undefined, http2: undefined },\n    h2session: undefined,\n    decompress: true,\n    timeout: {\n      connect: undefined,\n      lookup: undefined,\n      read: undefined,\n      request: undefined,\n      response: undefined,\n      secureConnect: undefined,\n      send: undefined,\n      socket: undefined\n    },\n    prefixUrl: '',\n    body: undefined,\n    form: undefined,\n    json: undefined,\n    cookieJar: undefined,\n    ignoreInvalidCookies: false,\n    searchParams: undefined,\n    dnsLookup: undefined,\n    dnsCache: undefined,\n    context: {},\n    hooks: {\n      init: [ [length]: 0 ],\n      beforeRequest: [ [length]: 0 ],\n      beforeError: [ [length]: 0 ],\n      beforeRedirect: [ [length]: 0 ],\n      beforeRetry: [ [length]: 0 ],\n      afterResponse: [ [length]: 0 ]\n    },\n    followRedirect: true,\n    maxRedirects: 10,\n    cache: undefined,\n    throwHttpErrors: true,\n    username: '',\n    password: '',\n    http2: false,\n    allowGetBody: false,\n    headers: {\n      'user-agent': 'got (https://github.com/sindresorhus/got)',\n      authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n      accept: 'application/json',\n      'accept-encoding': 'gzip, deflate, br'\n    },\n    methodRewriting: false,\n    dnsLookupIpVersion: undefined,\n    parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n    stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n    retry: {\n      limit: 2,\n      methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n      statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n      errorCodes: [\n        'ETIMEDOUT',\n        'ECONNRESET',\n        'EADDRINUSE',\n        'ECONNREFUSED',\n        'EPIPE',\n        'ENOTFOUND',\n        'ENETUNREACH',\n        'EAI_AGAIN',\n        [length]: 8\n      ],\n      maxRetryAfter: undefined,\n      calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n      backoffLimit: Infinity,\n      noise: 100\n    },\n    localAddress: undefined,\n    method: 'GET',\n    createConnection: undefined,\n    cacheOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined\n    },\n    https: {\n      alpnProtocols: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: undefined,\n      certificateAuthority: undefined,\n      key: undefined,\n      certificate: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      signatureAlgorithms: undefined,\n      tlsSessionLifetime: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      certificateRevocationLists: undefined\n    },\n    encoding: undefined,\n    resolveBodyOnly: false,\n    isStream: false,\n    responseType: 'json',\n    url: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    pagination: {\n      transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n      paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n      filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n      shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n      countLimit: Infinity,\n      backoff: 0,\n      requestLimit: 10000,\n      stackAllItems: false\n    },\n    setHost: true,\n    maxHeaderSize: undefined,\n    signal: undefined,\n    enableUnixSockets: false\n  }\n}","timestamp":"2024-11-05 19:50:24"}
{"level":"error","message":"Error occurred: <ref *2> HTTPError: Response code 401 (Unauthorized)\n    at Request.<anonymous> (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/as-promise/index.js:92:42)\n    at Object.onceWrapper (node:events:635:26)\n    at Request.emit (node:events:532:35)\n    at Request._onResponseBase (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:609:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Request._onResponse (file:///Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/got/dist/source/core/index.js:649:13) {\n  [stack]: [Getter/Setter],\n  [message]: 'Response code 401 (Unauthorized)',\n  [cause]: {},\n  input: undefined,\n  code: 'ERR_NON_2XX_3XX_RESPONSE',\n  [response]: <ref *3> PassThrough {\n    _events: {\n      close: undefined,\n      error: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 1, [name]: '' }\n      },\n      prefinish: <ref *1> [Function: prefinish] {\n        [length]: 0,\n        [name]: 'prefinish',\n        [prototype]: { [constructor]: [Circular *1] }\n      },\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n      unpipe: undefined,\n      aborted: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 0, [name]: '' }\n      }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 65536,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 9996040,\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 65536,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466504,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kWriteCbValue)]: null,\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n    _maxListeners: undefined,\n    _eventsCount: 4,\n    socket: [Getter/Setter],\n    httpVersionMajor: [Getter/Setter],\n    httpVersionMinor: [Getter/Setter],\n    httpVersion: [Getter/Setter],\n    complete: [Getter/Setter],\n    rawHeaders: [Getter/Setter],\n    rawTrailers: [Getter/Setter],\n    joinDuplicateHeaders: [Getter/Setter],\n    aborted: [Getter/Setter],\n    upgrade: [Getter/Setter],\n    url: [Getter/Setter],\n    method: [Getter/Setter],\n    statusCode: [Getter/Setter],\n    statusMessage: [Getter/Setter],\n    client: [Getter/Setter],\n    _consuming: [Getter/Setter],\n    _dumped: [Getter/Setter],\n    req: [Getter/Setter],\n    timings: [Getter/Setter],\n    headers: [Getter/Setter],\n    setTimeout: [Getter/Setter],\n    trailers: [Getter/Setter],\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    request: Request {\n      _events: {\n        close: undefined,\n        error: undefined,\n        prefinish: undefined,\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: undefined,\n        pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n        newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n        response: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        retry: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        request: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        redirect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        uploadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        downloadProgress: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n        pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 0,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 1574906,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 0,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466746,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kErroredValue)]: [Circular *2],\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      constructor: undefined,\n      _noPipe: true,\n      options: {\n        request: undefined,\n        agent: { http: undefined, https: undefined, http2: undefined },\n        h2session: undefined,\n        decompress: true,\n        timeout: {\n          connect: undefined,\n          lookup: undefined,\n          read: undefined,\n          request: undefined,\n          response: undefined,\n          secureConnect: undefined,\n          send: undefined,\n          socket: undefined\n        },\n        prefixUrl: '',\n        body: undefined,\n        form: undefined,\n        json: undefined,\n        cookieJar: undefined,\n        ignoreInvalidCookies: false,\n        searchParams: undefined,\n        dnsLookup: undefined,\n        dnsCache: undefined,\n        context: {},\n        hooks: {\n          init: [ [length]: 0 ],\n          beforeRequest: [ [length]: 0 ],\n          beforeError: [ [length]: 0 ],\n          beforeRedirect: [ [length]: 0 ],\n          beforeRetry: [ [length]: 0 ],\n          afterResponse: [ [length]: 0 ]\n        },\n        followRedirect: true,\n        maxRedirects: 10,\n        cache: undefined,\n        throwHttpErrors: true,\n        username: '',\n        password: '',\n        http2: false,\n        allowGetBody: false,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        methodRewriting: false,\n        dnsLookupIpVersion: undefined,\n        parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n        stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n        retry: {\n          limit: 2,\n          methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n          statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n          errorCodes: [\n            'ETIMEDOUT',\n            'ECONNRESET',\n            'EADDRINUSE',\n            'ECONNREFUSED',\n            'EPIPE',\n            'ENOTFOUND',\n            'ENETUNREACH',\n            'EAI_AGAIN',\n            [length]: 8\n          ],\n          maxRetryAfter: undefined,\n          calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n          backoffLimit: Infinity,\n          noise: 100\n        },\n        localAddress: undefined,\n        method: 'GET',\n        createConnection: undefined,\n        cacheOptions: {\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined\n        },\n        https: {\n          alpnProtocols: undefined,\n          rejectUnauthorized: undefined,\n          checkServerIdentity: undefined,\n          certificateAuthority: undefined,\n          key: undefined,\n          certificate: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          ciphers: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          signatureAlgorithms: undefined,\n          tlsSessionLifetime: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          certificateRevocationLists: undefined\n        },\n        encoding: undefined,\n        resolveBodyOnly: false,\n        isStream: false,\n        responseType: 'json',\n        url: URL {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          origin: 'https://api.spotify.com',\n          protocol: 'https:',\n          username: '',\n          password: '',\n          host: 'api.spotify.com',\n          hostname: 'api.spotify.com',\n          port: '',\n          pathname: '/v1/me/playlists',\n          search: '?limit=50',\n          searchParams: URLSearchParams { 'limit' => '50' },\n          hash: '',\n          [Symbol(context)]: URLContext {\n            href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n            protocol_end: 6,\n            username_end: 8,\n            host_start: 8,\n            host_end: 23,\n            pathname_start: 23,\n            search_start: 39,\n            hash_start: 4294967295,\n            port: 4294967295,\n            scheme_type: 2,\n            [hasPort]: [Getter],\n            [hasSearch]: [Getter],\n            [hasHash]: [Getter]\n          }\n        },\n        pagination: {\n          transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n          paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n          filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n          shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n          countLimit: Infinity,\n          backoff: 0,\n          requestLimit: 10000,\n          stackAllItems: false\n        },\n        setHost: true,\n        maxHeaderSize: undefined,\n        signal: undefined,\n        enableUnixSockets: false\n      },\n      response: [Circular *3],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      retryCount: 0,\n      _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _downloadedSize: 81,\n      _uploadedSize: 0,\n      _stopReading: true,\n      _pipedServerResponses: Set(0) {},\n      _request: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: IncomingMessage {\n          _events: [Object],\n          _readableState: [ReadableState],\n          _maxListeners: undefined,\n          socket: null,\n          httpVersionMajor: 1,\n          httpVersionMinor: 1,\n          httpVersion: '1.1',\n          complete: true,\n          rawHeaders: [Array],\n          rawTrailers: [Array],\n          joinDuplicateHeaders: undefined,\n          aborted: false,\n          upgrade: false,\n          url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          method: null,\n          statusCode: 401,\n          statusMessage: 'Unauthorized',\n          client: [TLSSocket],\n          _consuming: false,\n          _dumped: false,\n          req: [Circular *4],\n          _eventsCount: 3,\n          timings: [Object],\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kHeaders)]: [Object],\n          [Symbol(kHeadersCount)]: 30,\n          [Symbol(kTrailers)]: null,\n          [Symbol(kTrailersCount)]: 0,\n          [connection]: [Getter/Setter],\n          [headers]: [Getter/Setter],\n          [headersDistinct]: [Getter/Setter],\n          [trailers]: [Getter/Setter],\n          [trailersDistinct]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableDidRead]: [Getter],\n          [readableAborted]: [Getter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readableEnded]: [Getter]\n        },\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796623955,\n          socket: 1730796623956,\n          lookup: 1730796623956,\n          connect: 1730796624002,\n          secureConnect: 1730796624147,\n          upload: 1730796624147,\n          response: 1730796624356,\n          end: 1730796624358,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3709457,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88763,\n            [Symbol(triggerId)]: 88759,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _responseSize: 81,\n      _bodySize: 0,\n      _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n      _isFromCache: false,\n      _cannotHaveBody: true,\n      _triggerRead: true,\n      _cancelTimeouts: [Function: cancelTimeouts] {\n        [length]: 0,\n        [name]: 'cancelTimeouts'\n      },\n      _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n      _nativeResponse: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:24 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3709457,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88763,\n            [Symbol(triggerId)]: 88759,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: <ref *4> ClientRequest {\n          _events: [Object: null prototype],\n          _eventsCount: 8,\n          _maxListeners: undefined,\n          outputData: [Array],\n          outputSize: 0,\n          writable: true,\n          destroyed: true,\n          _last: true,\n          chunkedEncoding: false,\n          shouldKeepAlive: true,\n          maxRequestsOnConnectionReached: false,\n          _defaultKeepAlive: true,\n          useChunkedEncodingByDefault: false,\n          sendDate: false,\n          _removedConnection: false,\n          _removedContLen: false,\n          _removedTE: false,\n          strictContentLength: false,\n          _contentLength: 0,\n          _hasBody: true,\n          _trailer: '',\n          finished: true,\n          _headerSent: true,\n          _closed: true,\n          _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n            'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n            'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n            'accept: application/json\\r\\n' +\n            'accept-encoding: gzip, deflate, br\\r\\n' +\n            'Host: api.spotify.com\\r\\n' +\n            'Connection: keep-alive\\r\\n' +\n            '\\r\\n',\n          _keepAliveTimeout: 0,\n          _onPendingData: [Function],\n          agent: [Agent],\n          socketPath: undefined,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          insecureHTTPParser: undefined,\n          joinDuplicateHeaders: undefined,\n          path: '/v1/me/playlists?limit=50',\n          _ended: true,\n          res: [Circular *5],\n          aborted: false,\n          timeoutCb: null,\n          upgradeOrConnect: false,\n          parser: null,\n          maxHeadersCount: null,\n          reusedSocket: false,\n          host: 'api.spotify.com',\n          protocol: 'https:',\n          timings: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(kNeedDrain)]: false,\n          [Symbol(corked)]: 0,\n          [Symbol(kChunkedBuffer)]: [Array],\n          [Symbol(kChunkedLength)]: 0,\n          [Symbol(kSocket)]: [TLSSocket],\n          [Symbol(kOutHeaders)]: [Object: null prototype],\n          [Symbol(errored)]: null,\n          [Symbol(kHighWaterMark)]: 65536,\n          [Symbol(kRejectNonStandardBodyWrites)]: false,\n          [Symbol(kUniqueHeaders)]: null,\n          [Symbol(reentry)]: true,\n          [errored]: [Getter],\n          [closed]: [Getter],\n          [writableFinished]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableLength]: [Getter],\n          [writableHighWaterMark]: [Getter],\n          [writableCorked]: [Getter],\n          [_headers]: [Getter/Setter],\n          [connection]: [Getter/Setter],\n          [socket]: [Getter/Setter],\n          [_headerNames]: [Getter/Setter],\n          headersSent: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter]\n        },\n        _eventsCount: 3,\n        timings: {\n          start: 1730796623955,\n          socket: 1730796623956,\n          lookup: 1730796623956,\n          connect: 1730796624002,\n          secureConnect: 1730796624147,\n          upload: 1730796624147,\n          response: 1730796624356,\n          end: 1730796624358,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:24 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      _flushed: true,\n      _aborted: false,\n      _requestInitialized: true,\n      _jobs: [ [length]: 0 ],\n      _eventsCount: 10,\n      _requestOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined,\n        ALPNProtocols: undefined,\n        ca: undefined,\n        cert: undefined,\n        key: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: [Function: checkServerIdentity] {\n          [length]: 2,\n          [name]: 'checkServerIdentity',\n          [prototype]: [Object]\n        },\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        sigalgs: undefined,\n        sessionTimeout: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        crl: undefined,\n        lookup: undefined,\n        family: undefined,\n        agent: undefined,\n        setHost: true,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        localAddress: undefined,\n        headers: {\n          'user-agent': 'got (https://github.com/sindresorhus/got)',\n          authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          accept: 'application/json',\n          'accept-encoding': 'gzip, deflate, br'\n        },\n        createConnection: undefined,\n        timeout: undefined,\n        h2session: undefined\n      },\n      flush: [AsyncFunction (anonymous)] {\n        [length]: 0,\n        [name]: '',\n        [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [ip]: [Getter],\n      [isAborted]: [Getter],\n      [socket]: [Getter],\n      [downloadProgress]: [Getter],\n      [uploadProgress]: [Getter],\n      [timings]: [Getter],\n      [isFromCache]: [Getter],\n      [reusedSocket]: [Getter],\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [readableEnded]: [Getter]\n    },\n    isFromCache: false,\n    ip: '35.186.224.24',\n    retryCount: 0,\n    ok: false,\n    rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n    body: { error: { status: 401, message: 'The access token expired' } },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [Symbol(kCallback)]: null,\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter]\n  },\n  [request]: <ref *6> Request {\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: undefined,\n      readable: undefined,\n      pipe: [Function (anonymous)] { [length]: 1, [name]: '' },\n      newListener: [Function (anonymous)] { [length]: 1, [name]: '' },\n      response: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      retry: [Function: bound onceWrapper] {\n        [length]: 0,\n        [name]: 'bound onceWrapper',\n        listener: [Function (anonymous)] { [length]: 2, [name]: '' }\n      },\n      request: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      redirect: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      uploadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      downloadProgress: [Function: eventFunction] { [length]: 0, [name]: 'eventFunction' },\n      resume: [Function (anonymous)] { [length]: 0, [name]: '' },\n      pause: [Function (anonymous)] { [length]: 0, [name]: '' }\n    },\n    _readableState: ReadableState {\n      highWaterMark: 0,\n      buffer: [ [length]: 0 ],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [ [length]: 0 ],\n      awaitDrainWriters: null,\n      [Symbol(kState)]: 1574906,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [endEmitted]: [Getter/Setter],\n      [reading]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [needReadable]: [Getter/Setter],\n      [emittedReadable]: [Getter/Setter],\n      [readableListening]: [Getter/Setter],\n      [resumeScheduled]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [multiAwaitDrain]: [Getter/Setter],\n      [readingMore]: [Getter/Setter],\n      [dataEmitted]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [decoder]: [Getter/Setter],\n      [encoding]: [Getter/Setter],\n      [flowing]: [Getter/Setter],\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    _writableState: WritableState {\n      highWaterMark: 0,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      [Symbol(kState)]: 1091466746,\n      [Symbol(kBufferedValue)]: null,\n      [Symbol(kErroredValue)]: [Circular *2],\n      [objectMode]: [Getter/Setter],\n      [finalCalled]: [Getter/Setter],\n      [needDrain]: [Getter/Setter],\n      [ending]: [Getter/Setter],\n      [ended]: [Getter/Setter],\n      [finished]: [Getter/Setter],\n      [destroyed]: [Getter/Setter],\n      [decodeStrings]: [Getter/Setter],\n      [writing]: [Getter/Setter],\n      [sync]: [Getter/Setter],\n      [bufferProcessing]: [Getter/Setter],\n      [constructed]: [Getter/Setter],\n      [prefinished]: [Getter/Setter],\n      [errorEmitted]: [Getter/Setter],\n      [emitClose]: [Getter/Setter],\n      [autoDestroy]: [Getter/Setter],\n      [closed]: [Getter/Setter],\n      [closeEmitted]: [Getter/Setter],\n      [allBuffers]: [Getter/Setter],\n      [allNoop]: [Getter/Setter],\n      [errored]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [defaultEncoding]: [Getter/Setter],\n      [writecb]: [Getter/Setter],\n      [afterWriteTickInfo]: [Getter/Setter],\n      [buffered]: [Getter/Setter],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    constructor: undefined,\n    _noPipe: true,\n    options: {\n      request: undefined,\n      agent: { http: undefined, https: undefined, http2: undefined },\n      h2session: undefined,\n      decompress: true,\n      timeout: {\n        connect: undefined,\n        lookup: undefined,\n        read: undefined,\n        request: undefined,\n        response: undefined,\n        secureConnect: undefined,\n        send: undefined,\n        socket: undefined\n      },\n      prefixUrl: '',\n      body: undefined,\n      form: undefined,\n      json: undefined,\n      cookieJar: undefined,\n      ignoreInvalidCookies: false,\n      searchParams: undefined,\n      dnsLookup: undefined,\n      dnsCache: undefined,\n      context: {},\n      hooks: {\n        init: [ [length]: 0 ],\n        beforeRequest: [ [length]: 0 ],\n        beforeError: [ [length]: 0 ],\n        beforeRedirect: [ [length]: 0 ],\n        beforeRetry: [ [length]: 0 ],\n        afterResponse: [ [length]: 0 ]\n      },\n      followRedirect: true,\n      maxRedirects: 10,\n      cache: undefined,\n      throwHttpErrors: true,\n      username: '',\n      password: '',\n      http2: false,\n      allowGetBody: false,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      methodRewriting: false,\n      dnsLookupIpVersion: undefined,\n      parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n      stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n      retry: {\n        limit: 2,\n        methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n        statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n        errorCodes: [\n          'ETIMEDOUT',\n          'ECONNRESET',\n          'EADDRINUSE',\n          'ECONNREFUSED',\n          'EPIPE',\n          'ENOTFOUND',\n          'ENETUNREACH',\n          'EAI_AGAIN',\n          [length]: 8\n        ],\n        maxRetryAfter: undefined,\n        calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n        backoffLimit: Infinity,\n        noise: 100\n      },\n      localAddress: undefined,\n      method: 'GET',\n      createConnection: undefined,\n      cacheOptions: {\n        shared: undefined,\n        cacheHeuristic: undefined,\n        immutableMinTimeToLive: undefined,\n        ignoreCargoCult: undefined\n      },\n      https: {\n        alpnProtocols: undefined,\n        rejectUnauthorized: undefined,\n        checkServerIdentity: undefined,\n        certificateAuthority: undefined,\n        key: undefined,\n        certificate: undefined,\n        passphrase: undefined,\n        pfx: undefined,\n        ciphers: undefined,\n        honorCipherOrder: undefined,\n        minVersion: undefined,\n        maxVersion: undefined,\n        signatureAlgorithms: undefined,\n        tlsSessionLifetime: undefined,\n        dhparam: undefined,\n        ecdhCurve: undefined,\n        certificateRevocationLists: undefined\n      },\n      encoding: undefined,\n      resolveBodyOnly: false,\n      isStream: false,\n      responseType: 'json',\n      url: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      pagination: {\n        transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n        paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n        filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n        shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n        countLimit: Infinity,\n        backoff: 0,\n        requestLimit: 10000,\n        stackAllItems: false\n      },\n      setHost: true,\n      maxHeaderSize: undefined,\n      signal: undefined,\n      enableUnixSockets: false\n    },\n    response: <ref *3> PassThrough {\n      _events: {\n        close: undefined,\n        error: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        prefinish: <ref *1> [Function: prefinish] {\n          [length]: 0,\n          [name]: 'prefinish',\n          [prototype]: [Object]\n        },\n        finish: undefined,\n        drain: undefined,\n        data: undefined,\n        end: undefined,\n        readable: [Function (anonymous)] { [length]: 0, [name]: '' },\n        unpipe: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 9996040,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 65536,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 1091466504,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kWriteCbValue)]: null,\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: true,\n      _destroy: [Function: destroy] { [length]: 2, [name]: 'destroy' },\n      _maxListeners: undefined,\n      _eventsCount: 4,\n      socket: [Getter/Setter],\n      httpVersionMajor: [Getter/Setter],\n      httpVersionMinor: [Getter/Setter],\n      httpVersion: [Getter/Setter],\n      complete: [Getter/Setter],\n      rawHeaders: [Getter/Setter],\n      rawTrailers: [Getter/Setter],\n      joinDuplicateHeaders: [Getter/Setter],\n      aborted: [Getter/Setter],\n      upgrade: [Getter/Setter],\n      url: [Getter/Setter],\n      method: [Getter/Setter],\n      statusCode: [Getter/Setter],\n      statusMessage: [Getter/Setter],\n      client: [Getter/Setter],\n      _consuming: [Getter/Setter],\n      _dumped: [Getter/Setter],\n      req: [Getter/Setter],\n      timings: [Getter/Setter],\n      headers: [Getter/Setter],\n      setTimeout: [Getter/Setter],\n      trailers: [Getter/Setter],\n      requestUrl: URL {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        origin: 'https://api.spotify.com',\n        protocol: 'https:',\n        username: '',\n        password: '',\n        host: 'api.spotify.com',\n        hostname: 'api.spotify.com',\n        port: '',\n        pathname: '/v1/me/playlists',\n        search: '?limit=50',\n        searchParams: URLSearchParams { 'limit' => '50' },\n        hash: '',\n        [Symbol(context)]: URLContext {\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          protocol_end: 6,\n          username_end: 8,\n          host_start: 8,\n          host_end: 23,\n          pathname_start: 23,\n          search_start: 39,\n          hash_start: 4294967295,\n          port: 4294967295,\n          scheme_type: 2,\n          [hasPort]: [Getter],\n          [hasSearch]: [Getter],\n          [hasHash]: [Getter]\n        }\n      },\n      redirectUrls: [ [length]: 0 ],\n      request: [Circular *6],\n      isFromCache: false,\n      ip: '35.186.224.24',\n      retryCount: 0,\n      ok: false,\n      rawBody: <Buffer 7b 0a 20 20 22 65 72 72 6f 72 22 3a 20 7b 0a 20 20 20 20 22 73 74 61 74 75 73 22 3a 20 34 30 31 2c 0a 20 20 20 20 22 6d 65 73 73 61 67 65 22 3a 20 22 ... 31 more bytes>,\n      body: { error: { status: 401, message: 'The access token expired' } },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kCallback)]: null,\n      _writev: null,\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter]\n    },\n    requestUrl: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    redirectUrls: [ [length]: 0 ],\n    retryCount: 0,\n    _stopRetry: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _downloadedSize: 81,\n    _uploadedSize: 0,\n    _stopReading: true,\n    _pipedServerResponses: Set(0) {},\n    _request: <ref *4> ClientRequest {\n      _events: [Object: null prototype] {\n        socket: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        error: [ [Function], [Function], [length]: 2 ],\n        connect: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        continue: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        information: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        upgrade: [Function: eventFunction] {\n          [length]: 0,\n          [name]: 'eventFunction'\n        },\n        finish: [Function: requestOnFinish] {\n          [length]: 0,\n          [name]: 'requestOnFinish',\n          [prototype]: [Object]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      outputData: [ [length]: 0 ],\n      outputSize: 0,\n      writable: true,\n      destroyed: true,\n      _last: true,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: false,\n      sendDate: false,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: 0,\n      _hasBody: true,\n      _trailer: '',\n      finished: true,\n      _headerSent: true,\n      _closed: true,\n      _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n        'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n        'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n        'accept: application/json\\r\\n' +\n        'accept-encoding: gzip, deflate, br\\r\\n' +\n        'Host: api.spotify.com\\r\\n' +\n        'Connection: keep-alive\\r\\n' +\n        '\\r\\n',\n      _keepAliveTimeout: 0,\n      _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n      agent: Agent {\n        _events: [Object: null prototype] {\n          free: [Function],\n          newListener: [Function]\n        },\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        defaultPort: 443,\n        protocol: 'https:',\n        options: [Object: null prototype] {\n          keepAlive: true,\n          scheduling: 'lifo',\n          timeout: 5000,\n          noDelay: true,\n          path: null\n        },\n        requests: [Object: null prototype] {},\n        sockets: [Object: null prototype] {},\n        freeSockets: [Object: null prototype] {\n          'api.spotify.com:443:::::::::::::::::::::': [Array]\n        },\n        keepAliveMsecs: 1000,\n        keepAlive: true,\n        maxSockets: Infinity,\n        maxFreeSockets: 256,\n        scheduling: 'lifo',\n        maxTotalSockets: Infinity,\n        totalSocketCount: 1,\n        maxCachedSessions: 100,\n        _sessionCache: { map: [Object], list: [Array] },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false\n      },\n      socketPath: undefined,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      joinDuplicateHeaders: undefined,\n      path: '/v1/me/playlists?limit=50',\n      _ended: true,\n      res: <ref *5> IncomingMessage {\n        _events: {\n          close: undefined,\n          error: undefined,\n          data: undefined,\n          end: [Function],\n          readable: undefined,\n          aborted: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 110892924,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'www-authenticate',\n          'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin',\n          '*',\n          'access-control-allow-headers',\n          'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods',\n          'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials',\n          'true',\n          'access-control-max-age',\n          '604800',\n          'content-type',\n          'application/json',\n          'content-encoding',\n          'gzip',\n          'strict-transport-security',\n          'max-age=31536000',\n          'x-content-type-options',\n          'nosniff',\n          'date',\n          'Tue, 05 Nov 2024 08:50:24 GMT',\n          'server',\n          'envoy',\n          'Via',\n          'HTTP/2 edgeproxy, 1.1 google',\n          'Alt-Svc',\n          'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'Transfer-Encoding',\n          'chunked',\n          [length]: 30\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        method: null,\n        statusCode: 401,\n        statusMessage: 'Unauthorized',\n        client: TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3709457,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88763,\n            [Symbol(triggerId)]: 88759,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: [Circular *4],\n        _eventsCount: 3,\n        timings: {\n          start: 1730796623955,\n          socket: 1730796623956,\n          lookup: 1730796623956,\n          connect: 1730796624002,\n          secureConnect: 1730796624147,\n          upload: 1730796624147,\n          response: 1730796624356,\n          end: 1730796624358,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n          'access-control-allow-origin': '*',\n          'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n          'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n          'access-control-allow-credentials': 'true',\n          'access-control-max-age': '604800',\n          'content-type': 'application/json',\n          'content-encoding': 'gzip',\n          'strict-transport-security': 'max-age=31536000',\n          'x-content-type-options': 'nosniff',\n          date: 'Tue, 05 Nov 2024 08:50:24 GMT',\n          server: 'envoy',\n          via: 'HTTP/2 edgeproxy, 1.1 google',\n          'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n          'transfer-encoding': 'chunked'\n        },\n        [Symbol(kHeadersCount)]: 30,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      aborted: false,\n      timeoutCb: null,\n      upgradeOrConnect: false,\n      parser: null,\n      maxHeadersCount: null,\n      reusedSocket: false,\n      host: 'api.spotify.com',\n      protocol: 'https:',\n      timings: {\n        start: 1730796623955,\n        socket: 1730796623956,\n        lookup: 1730796623956,\n        connect: 1730796624002,\n        secureConnect: 1730796624147,\n        upload: 1730796624147,\n        response: 1730796624356,\n        end: 1730796624358,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 1,\n          dns: 0,\n          tcp: 46,\n          tls: 145,\n          request: 0,\n          firstByte: 209,\n          download: 2,\n          total: 403\n        }\n      },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n      [Symbol(kChunkedLength)]: 0,\n      [Symbol(kSocket)]: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 5f 02 01 01 02 02 03 04 04 02 13 02 04 20 ff 98 ad 8a 64 0b 93 4c 99 61 f9 82 7d ac a5 18 d8 15 b9 36 07 70 54 ed b2 f9 8e f3 46 23 e8 d1 04 ... 2097 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3709457,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88763,\n          [Symbol(triggerId)]: 88759,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 5f 02 01 01 02 02 03 04 04 02 13 02 04 20 ff 98 ad 8a 64 0b 93 4c 99 61 f9 82 7d ac a5 18 d8 15 b9 36 07 70 54 ed b2 f9 8e f3 46 23 e8 d1 04 ... 2097 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      [Symbol(kOutHeaders)]: [Object: null prototype] {\n        'user-agent': [\n          'user-agent',\n          'got (https://github.com/sindresorhus/got)',\n          [length]: 2\n        ],\n        authorization: [\n          'authorization',\n          'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n          [length]: 2\n        ],\n        accept: [ 'accept', 'application/json', [length]: 2 ],\n        'accept-encoding': [ 'accept-encoding', 'gzip, deflate, br', [length]: 2 ],\n        host: [ 'Host', 'api.spotify.com', [length]: 2 ]\n      },\n      [Symbol(errored)]: null,\n      [Symbol(kHighWaterMark)]: 65536,\n      [Symbol(kRejectNonStandardBodyWrites)]: false,\n      [Symbol(kUniqueHeaders)]: null,\n      [Symbol(reentry)]: true,\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [writableFinished]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableLength]: [Getter],\n      [writableHighWaterMark]: [Getter],\n      [writableCorked]: [Getter],\n      [_headers]: [Getter/Setter],\n      [connection]: [Getter/Setter],\n      [socket]: [Getter/Setter],\n      [_headerNames]: [Getter/Setter],\n      headersSent: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter]\n    },\n    _responseSize: 81,\n    _bodySize: 0,\n    _unproxyEvents: [Function (anonymous)] { [length]: 0, [name]: '' },\n    _isFromCache: false,\n    _cannotHaveBody: true,\n    _triggerRead: true,\n    _cancelTimeouts: [Function: cancelTimeouts] { [length]: 0, [name]: 'cancelTimeouts' },\n    _removeListeners: [Function: noop] { [length]: 0, [name]: 'noop' },\n    _nativeResponse: <ref *5> IncomingMessage {\n      _events: {\n        close: undefined,\n        error: undefined,\n        data: undefined,\n        end: [Function: responseOnEnd] {\n          [length]: 0,\n          [name]: 'responseOnEnd',\n          [prototype]: [Object]\n        },\n        readable: undefined,\n        aborted: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        [Symbol(events.errorMonitor)]: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 65536,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 110892924,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _maxListeners: undefined,\n      socket: null,\n      httpVersionMajor: 1,\n      httpVersionMinor: 1,\n      httpVersion: '1.1',\n      complete: true,\n      rawHeaders: [\n        'www-authenticate',\n        'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin',\n        '*',\n        'access-control-allow-headers',\n        'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods',\n        'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials',\n        'true',\n        'access-control-max-age',\n        '604800',\n        'content-type',\n        'application/json',\n        'content-encoding',\n        'gzip',\n        'strict-transport-security',\n        'max-age=31536000',\n        'x-content-type-options',\n        'nosniff',\n        'date',\n        'Tue, 05 Nov 2024 08:50:24 GMT',\n        'server',\n        'envoy',\n        'Via',\n        'HTTP/2 edgeproxy, 1.1 google',\n        'Alt-Svc',\n        'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'Transfer-Encoding',\n        'chunked',\n        [length]: 30\n      ],\n      rawTrailers: [ [length]: 0 ],\n      joinDuplicateHeaders: undefined,\n      aborted: false,\n      upgrade: false,\n      url: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      method: null,\n      statusCode: 401,\n      statusMessage: 'Unauthorized',\n      client: <ref *7> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 08 5f 02 01 01 02 02 03 04 04 02 13 02 04 20 ff 98 ad 8a 64 0b 93 4c 99 61 f9 82 7d ac a5 18 d8 15 b9 36 07 70 54 ed b2 f9 8e f3 46 23 e8 d1 04 ... 2097 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'api.spotify.com',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined,\n          lookup: undefined,\n          secureConnect: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'api.spotify.com',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 65536,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 65536,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        _peername: { address: '35.186.224.24', family: 'IPv4', port: 443 },\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *7],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [Timeout],\n          _idleStart: 3709457,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 88763,\n          [Symbol(triggerId)]: 88759,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: undefined,\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 08 5f 02 01 01 02 02 03 04 04 02 13 02 04 20 ff 98 ad 8a 64 0b 93 4c 99 61 f9 82 7d ac a5 18 d8 15 b9 36 07 70 54 ed b2 f9 8e f3 46 23 e8 d1 04 ... 2097 more bytes>,\n          protocol: 'https:',\n          hostname: 'api.spotify.com',\n          hash: '',\n          search: '?limit=50',\n          pathname: '/v1/me/playlists',\n          path: null,\n          href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n          shared: undefined,\n          cacheHeuristic: undefined,\n          immutableMinTimeToLive: undefined,\n          ignoreCargoCult: undefined,\n          ALPNProtocols: undefined,\n          ca: undefined,\n          cert: undefined,\n          key: undefined,\n          passphrase: undefined,\n          pfx: undefined,\n          honorCipherOrder: undefined,\n          minVersion: undefined,\n          maxVersion: undefined,\n          sigalgs: undefined,\n          sessionTimeout: undefined,\n          dhparam: undefined,\n          ecdhCurve: undefined,\n          crl: undefined,\n          lookup: undefined,\n          family: undefined,\n          agent: undefined,\n          setHost: true,\n          method: 'GET',\n          maxHeaderSize: undefined,\n          localAddress: undefined,\n          headers: [Object],\n          createConnection: undefined,\n          timeout: 5000,\n          h2session: undefined,\n          _defaultAgent: [Agent],\n          port: 443,\n          host: 'api.spotify.com',\n          keepAlive: true,\n          scheduling: 'lifo',\n          noDelay: true,\n          servername: 'api.spotify.com',\n          _agentKey: 'api.spotify.com:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      _consuming: false,\n      _dumped: false,\n      req: <ref *4> ClientRequest {\n        _events: [Object: null prototype] {\n          socket: [Function],\n          error: [Array],\n          connect: [Function],\n          continue: [Function],\n          information: [Function],\n          upgrade: [Function],\n          finish: [Function],\n          [Symbol(events.errorMonitor)]: [Function]\n        },\n        _eventsCount: 8,\n        _maxListeners: undefined,\n        outputData: [ [length]: 0 ],\n        outputSize: 0,\n        writable: true,\n        destroyed: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        maxRequestsOnConnectionReached: false,\n        _defaultKeepAlive: true,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        strictContentLength: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        _closed: true,\n        _header: 'GET /v1/me/playlists?limit=50 HTTP/1.1\\r\\n' +\n          'user-agent: got (https://github.com/sindresorhus/got)\\r\\n' +\n          'authorization: Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug\\r\\n' +\n          'accept: application/json\\r\\n' +\n          'accept-encoding: gzip, deflate, br\\r\\n' +\n          'Host: api.spotify.com\\r\\n' +\n          'Connection: keep-alive\\r\\n' +\n          '\\r\\n',\n        _keepAliveTimeout: 0,\n        _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n        agent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        socketPath: undefined,\n        method: 'GET',\n        maxHeaderSize: undefined,\n        insecureHTTPParser: undefined,\n        joinDuplicateHeaders: undefined,\n        path: '/v1/me/playlists?limit=50',\n        _ended: true,\n        res: [Circular *5],\n        aborted: false,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        reusedSocket: false,\n        host: 'api.spotify.com',\n        protocol: 'https:',\n        timings: {\n          start: 1730796623955,\n          socket: 1730796623956,\n          lookup: 1730796623956,\n          connect: 1730796624002,\n          secureConnect: 1730796624147,\n          upload: 1730796624147,\n          response: 1730796624356,\n          end: 1730796624358,\n          error: undefined,\n          abort: undefined,\n          phases: [Object]\n        },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(kNeedDrain)]: false,\n        [Symbol(corked)]: 0,\n        [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n        [Symbol(kChunkedLength)]: 0,\n        [Symbol(kSocket)]: <ref *7> TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'api.spotify.com',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'api.spotify.com',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          _peername: [Object],\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [Timeout],\n            _idleStart: 3709457,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 88763,\n            [Symbol(triggerId)]: 88759,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        [Symbol(kOutHeaders)]: [Object: null prototype] {\n          'user-agent': [Array],\n          authorization: [Array],\n          accept: [Array],\n          'accept-encoding': [Array],\n          host: [Array]\n        },\n        [Symbol(errored)]: null,\n        [Symbol(kHighWaterMark)]: 65536,\n        [Symbol(kRejectNonStandardBodyWrites)]: false,\n        [Symbol(kUniqueHeaders)]: null,\n        [Symbol(reentry)]: true,\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableLength]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [_headers]: [Getter/Setter],\n        [connection]: [Getter/Setter],\n        [socket]: [Getter/Setter],\n        [_headerNames]: [Getter/Setter],\n        headersSent: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter]\n      },\n      _eventsCount: 3,\n      timings: {\n        start: 1730796623955,\n        socket: 1730796623956,\n        lookup: 1730796623956,\n        connect: 1730796624002,\n        secureConnect: 1730796624147,\n        upload: 1730796624147,\n        response: 1730796624356,\n        end: 1730796624358,\n        error: undefined,\n        abort: undefined,\n        phases: {\n          wait: 1,\n          dns: 0,\n          tcp: 46,\n          tls: 145,\n          request: 0,\n          firstByte: 209,\n          download: 2,\n          total: 403\n        }\n      },\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kHeaders)]: {\n        'www-authenticate': 'Bearer realm=\"spotify\", error=\"invalid_token\", error_description=\"The access token expired\"',\n        'access-control-allow-origin': '*',\n        'access-control-allow-headers': 'Accept, App-Platform, Authorization, Content-Type, Origin, Retry-After, Spotify-App-Version, X-Cloud-Trace-Context, client-token, content-access-token',\n        'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, DELETE, PATCH',\n        'access-control-allow-credentials': 'true',\n        'access-control-max-age': '604800',\n        'content-type': 'application/json',\n        'content-encoding': 'gzip',\n        'strict-transport-security': 'max-age=31536000',\n        'x-content-type-options': 'nosniff',\n        date: 'Tue, 05 Nov 2024 08:50:24 GMT',\n        server: 'envoy',\n        via: 'HTTP/2 edgeproxy, 1.1 google',\n        'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000',\n        'transfer-encoding': 'chunked'\n      },\n      [Symbol(kHeadersCount)]: 30,\n      [Symbol(kTrailers)]: null,\n      [Symbol(kTrailersCount)]: 0,\n      [connection]: [Getter/Setter],\n      [headers]: [Getter/Setter],\n      [headersDistinct]: [Getter/Setter],\n      [trailers]: [Getter/Setter],\n      [trailersDistinct]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readableEnded]: [Getter]\n    },\n    _flushed: true,\n    _aborted: false,\n    _requestInitialized: true,\n    _jobs: [ [length]: 0 ],\n    _eventsCount: 10,\n    _requestOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined,\n      ALPNProtocols: undefined,\n      ca: undefined,\n      cert: undefined,\n      key: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: <ref *8> [Function: checkServerIdentity] {\n        [length]: 2,\n        [name]: 'checkServerIdentity',\n        [prototype]: { [constructor]: [Circular *8] }\n      },\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      sigalgs: undefined,\n      sessionTimeout: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      crl: undefined,\n      lookup: undefined,\n      family: undefined,\n      agent: undefined,\n      setHost: true,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      localAddress: undefined,\n      headers: {\n        'user-agent': 'got (https://github.com/sindresorhus/got)',\n        authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n        accept: 'application/json',\n        'accept-encoding': 'gzip, deflate, br'\n      },\n      createConnection: undefined,\n      timeout: undefined,\n      h2session: undefined\n    },\n    flush: [AsyncFunction (anonymous)] {\n      [length]: 0,\n      [name]: '',\n      [Symbol(Symbol.toStringTag)]: 'AsyncFunction'\n    },\n    [Symbol(shapeMode)]: true,\n    [Symbol(kCapture)]: false,\n    [ip]: [Getter],\n    [isAborted]: [Getter],\n    [socket]: [Getter],\n    [downloadProgress]: [Getter],\n    [uploadProgress]: [Getter],\n    [timings]: [Getter],\n    [isFromCache]: [Getter],\n    [reusedSocket]: [Getter],\n    _writev: null,\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter],\n    [readable]: [Getter/Setter],\n    [readableDidRead]: [Getter],\n    [readableAborted]: [Getter],\n    [readableHighWaterMark]: [Getter],\n    [readableBuffer]: [Getter],\n    [readableFlowing]: [Getter/Setter],\n    [readableLength]: [Getter],\n    [readableObjectMode]: [Getter],\n    [readableEncoding]: [Getter],\n    [errored]: [Getter],\n    [closed]: [Getter],\n    [readableEnded]: [Getter]\n  },\n  timings: {\n    start: 1730796623955,\n    socket: 1730796623956,\n    lookup: 1730796623956,\n    connect: 1730796624002,\n    secureConnect: 1730796624147,\n    upload: 1730796624147,\n    response: 1730796624356,\n    end: 1730796624358,\n    error: undefined,\n    abort: undefined,\n    phases: {\n      wait: 1,\n      dns: 0,\n      tcp: 46,\n      tls: 145,\n      request: 0,\n      firstByte: 209,\n      download: 2,\n      total: 403\n    }\n  },\n  name: 'HTTPError',\n  options: {\n    request: undefined,\n    agent: { http: undefined, https: undefined, http2: undefined },\n    h2session: undefined,\n    decompress: true,\n    timeout: {\n      connect: undefined,\n      lookup: undefined,\n      read: undefined,\n      request: undefined,\n      response: undefined,\n      secureConnect: undefined,\n      send: undefined,\n      socket: undefined\n    },\n    prefixUrl: '',\n    body: undefined,\n    form: undefined,\n    json: undefined,\n    cookieJar: undefined,\n    ignoreInvalidCookies: false,\n    searchParams: undefined,\n    dnsLookup: undefined,\n    dnsCache: undefined,\n    context: {},\n    hooks: {\n      init: [ [length]: 0 ],\n      beforeRequest: [ [length]: 0 ],\n      beforeError: [ [length]: 0 ],\n      beforeRedirect: [ [length]: 0 ],\n      beforeRetry: [ [length]: 0 ],\n      afterResponse: [ [length]: 0 ]\n    },\n    followRedirect: true,\n    maxRedirects: 10,\n    cache: undefined,\n    throwHttpErrors: true,\n    username: '',\n    password: '',\n    http2: false,\n    allowGetBody: false,\n    headers: {\n      'user-agent': 'got (https://github.com/sindresorhus/got)',\n      authorization: 'Bearer BQA-vGp3N_-uWoA7p9ovCmaDLZB7LOSPV2ZiqT5LzFt5jefxLScbTx-cj_CaVx-q6qlbeopiRH3JL0WUVnRM5szFrC3A6z767303qYxxS9jqfjJ7oVhXiOC0aYb6VUdrQ8gM-lv6ZyEtm_URXAwo9wnSdUxNdbQ7owOFHKFvwMs0KvARI4pYNwZ-mZUdf7ijSO0OZj43bDMC1GyeYUz6OQuPS-UQZbMAor4HT9ayHj2IjZ2KIVuphgV19DqpeycfFug',\n      accept: 'application/json',\n      'accept-encoding': 'gzip, deflate, br'\n    },\n    methodRewriting: false,\n    dnsLookupIpVersion: undefined,\n    parseJson: [Function: parse] { [length]: 2, [name]: 'parse' },\n    stringifyJson: [Function: stringify] { [length]: 3, [name]: 'stringify' },\n    retry: {\n      limit: 2,\n      methods: [ 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE', [length]: 6 ],\n      statusCodes: [ 408, 413, 429, 500, 502, 503, 504, 521, 522, 524, [length]: 10 ],\n      errorCodes: [\n        'ETIMEDOUT',\n        'ECONNRESET',\n        'EADDRINUSE',\n        'ECONNREFUSED',\n        'EPIPE',\n        'ENOTFOUND',\n        'ENETUNREACH',\n        'EAI_AGAIN',\n        [length]: 8\n      ],\n      maxRetryAfter: undefined,\n      calculateDelay: [Function: calculateDelay] { [length]: 1, [name]: 'calculateDelay' },\n      backoffLimit: Infinity,\n      noise: 100\n    },\n    localAddress: undefined,\n    method: 'GET',\n    createConnection: undefined,\n    cacheOptions: {\n      shared: undefined,\n      cacheHeuristic: undefined,\n      immutableMinTimeToLive: undefined,\n      ignoreCargoCult: undefined\n    },\n    https: {\n      alpnProtocols: undefined,\n      rejectUnauthorized: undefined,\n      checkServerIdentity: undefined,\n      certificateAuthority: undefined,\n      key: undefined,\n      certificate: undefined,\n      passphrase: undefined,\n      pfx: undefined,\n      ciphers: undefined,\n      honorCipherOrder: undefined,\n      minVersion: undefined,\n      maxVersion: undefined,\n      signatureAlgorithms: undefined,\n      tlsSessionLifetime: undefined,\n      dhparam: undefined,\n      ecdhCurve: undefined,\n      certificateRevocationLists: undefined\n    },\n    encoding: undefined,\n    resolveBodyOnly: false,\n    isStream: false,\n    responseType: 'json',\n    url: URL {\n      href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n      origin: 'https://api.spotify.com',\n      protocol: 'https:',\n      username: '',\n      password: '',\n      host: 'api.spotify.com',\n      hostname: 'api.spotify.com',\n      port: '',\n      pathname: '/v1/me/playlists',\n      search: '?limit=50',\n      searchParams: URLSearchParams { 'limit' => '50' },\n      hash: '',\n      [Symbol(context)]: URLContext {\n        href: 'https://api.spotify.com/v1/me/playlists?limit=50',\n        protocol_end: 6,\n        username_end: 8,\n        host_start: 8,\n        host_end: 23,\n        pathname_start: 23,\n        search_start: 39,\n        hash_start: 4294967295,\n        port: 4294967295,\n        scheme_type: 2,\n        [hasPort]: [Getter],\n        [hasSearch]: [Getter],\n        [hasHash]: [Getter]\n      }\n    },\n    pagination: {\n      transform: [Function: transform] { [length]: 1, [name]: 'transform' },\n      paginate: [Function: paginate] { [length]: 1, [name]: 'paginate' },\n      filter: [Function: filter] { [length]: 0, [name]: 'filter' },\n      shouldContinue: [Function: shouldContinue] { [length]: 0, [name]: 'shouldContinue' },\n      countLimit: Infinity,\n      backoff: 0,\n      requestLimit: 10000,\n      stackAllItems: false\n    },\n    setHost: true,\n    maxHeaderSize: undefined,\n    signal: undefined,\n    enableUnixSockets: false\n  }\n}","timestamp":"2024-11-05 19:50:24"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-05 19:50:34"}
{"level":"error","message":"Error fetching playlists: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:52:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 19:50:41"}
{"level":"error","message":"Error occurred: Error: Access token is missing.\n    at getUserPlaylists (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/src/spotify/spotify.controller.ts:52:23)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/poorvikaarthikeyayeluri/Desktop/Demo/SongPort/node_modules/express/lib/router/index.js:47:12) {\n  [stack]: [Getter/Setter],\n  [message]: 'Access token is missing.'\n}","timestamp":"2024-11-05 19:50:41"}
{"level":"debug","message":"Retrieved tokens: {\"access_token\":\"BQBPTyP207xNkM2A8f-bYVWr6TbwueV_PmmRJ4yCQ-QbRzqZh49I18Qr41_MT28kICNLEbCcbgA_0UHoVvxqrwP-IeqMAoTVOS7ENfqhkJ_ZM8zlk49nNVbKGGYVqJctMNY7quaH3NbVypmbArD0dzkThBGV7YjTrTk_mf6YjowGDLWL6leg0IArHOMbGLkkbuS0zjKhdUQbDppIZGE5JIBB0p7Zfjiv0XLxvse6FYqUPeQ6DeoX2tFkJnG1fTUYYpQ\",\"token_type\":\"Bearer\",\"expires_in\":3600,\"refresh_token\":\"AQCqe1Afnx7E6My78ovRb54466TBZx6zIKX2V11s6-plFnjsV0N9XEK8Frye4Z3ehmcg1Boe-BwhkaF6XO0reMETU598gfxekZWYC4FnXk739ZicK4_CmXsRIncc9sG39wc\",\"scope\":\"playlist-read-private user-library-read playlist-modify-public\"}","timestamp":"2024-11-05 19:50:47"}
{"level":"info","message":"Successfully retrieved and stored Spotify tokens","timestamp":"2024-11-05 19:50:47"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:50:47"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:50:52"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:51:06"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:51:31"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:52:30"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:53:40"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:54:00"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:54:28"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:54:37"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:54:44"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:54:49"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:56:51"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 19:56:57"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 19:59:09"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 19:59:14"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 20:02:23"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 20:02:28"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 20:03:42"}
{"level":"info","message":"Fetched 39 items for playlist 2I49GRL2KnsfJqYBe0ZW4K","timestamp":"2024-11-05 20:03:44"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 20:03:53"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 20:05:49"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 20:05:52"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 20:10:29"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 20:10:34"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 20:11:14"}
{"level":"info","message":"Fetched 477 items for playlist 5DyTDlQonoELjQ8KapixJC","timestamp":"2024-11-05 20:11:18"}
{"level":"info","message":"Fetched 18 playlists for the user","timestamp":"2024-11-05 20:13:02"}
{"level":"info","message":"Fetched 332 items for playlist 66lva45eWWlmlwcYAL9iIN","timestamp":"2024-11-05 20:13:06"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-06 07:29:54"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-06 07:30:00"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-06 07:30:05"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-06 07:30:08"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-06 07:30:10"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-06 07:30:12"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-06 07:30:16"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-06 07:30:23"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-06 07:30:24"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-06 07:30:31"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-06 07:30:34"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-06 07:30:40"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-06 07:45:28"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-06 07:49:37"}
{"level":"info","message":"Server is running on https://localhost:3001","timestamp":"2024-11-06 07:50:36"}
